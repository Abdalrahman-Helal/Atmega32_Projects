
SmartHome.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005148  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000266  00800060  00005148  000051dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  008002c6  008002c6  00005442  2**0
                  ALLOC
  3 .stab         00004af4  00000000  00000000  00005444  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000198e  00000000  00000000  00009f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  0000b8c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001d3  00000000  00000000  0000ba46  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000200f  00000000  00000000  0000bc19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001170  00000000  00000000  0000dc28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001001  00000000  00000000  0000ed98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  0000fd9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c1  00000000  00000000  0000ff3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008ae  00000000  00000000  000101fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00010aab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e4       	ldi	r30, 0x48	; 72
      68:	f1 e5       	ldi	r31, 0x51	; 81
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 3c       	cpi	r26, 0xC6	; 198
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 ec       	ldi	r26, 0xC6	; 198
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3c       	cpi	r26, 0xC8	; 200
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 08 14 	call	0x2810	; 0x2810 <main>
      8a:	0c 94 a2 28 	jmp	0x5144	; 0x5144 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 6b 28 	jmp	0x50d6	; 0x50d6 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a2 e9       	ldi	r26, 0x92	; 146
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 87 28 	jmp	0x510e	; 0x510e <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 77 28 	jmp	0x50ee	; 0x50ee <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 93 28 	jmp	0x5126	; 0x5126 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 77 28 	jmp	0x50ee	; 0x50ee <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 93 28 	jmp	0x5126	; 0x5126 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 6b 28 	jmp	0x50d6	; 0x50d6 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	82 e9       	ldi	r24, 0x92	; 146
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 87 28 	jmp	0x510e	; 0x510e <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 77 28 	jmp	0x50ee	; 0x50ee <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 93 28 	jmp	0x5126	; 0x5126 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 77 28 	jmp	0x50ee	; 0x50ee <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 93 28 	jmp	0x5126	; 0x5126 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 77 28 	jmp	0x50ee	; 0x50ee <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 93 28 	jmp	0x5126	; 0x5126 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 7b 28 	jmp	0x50f6	; 0x50f6 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 97 28 	jmp	0x512e	; 0x512e <__epilogue_restores__+0x20>

000007fa <__floatunsisf>:
     7fa:	a8 e0       	ldi	r26, 0x08	; 8
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	e3 e0       	ldi	r30, 0x03	; 3
     800:	f4 e0       	ldi	r31, 0x04	; 4
     802:	0c 94 73 28 	jmp	0x50e6	; 0x50e6 <__prologue_saves__+0x10>
     806:	7b 01       	movw	r14, r22
     808:	8c 01       	movw	r16, r24
     80a:	61 15       	cp	r22, r1
     80c:	71 05       	cpc	r23, r1
     80e:	81 05       	cpc	r24, r1
     810:	91 05       	cpc	r25, r1
     812:	19 f4       	brne	.+6      	; 0x81a <__floatunsisf+0x20>
     814:	82 e0       	ldi	r24, 0x02	; 2
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	60 c0       	rjmp	.+192    	; 0x8da <__stack+0x7b>
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	89 83       	std	Y+1, r24	; 0x01
     81e:	8e e1       	ldi	r24, 0x1E	; 30
     820:	c8 2e       	mov	r12, r24
     822:	d1 2c       	mov	r13, r1
     824:	dc 82       	std	Y+4, r13	; 0x04
     826:	cb 82       	std	Y+3, r12	; 0x03
     828:	ed 82       	std	Y+5, r14	; 0x05
     82a:	fe 82       	std	Y+6, r15	; 0x06
     82c:	0f 83       	std	Y+7, r16	; 0x07
     82e:	18 87       	std	Y+8, r17	; 0x08
     830:	c8 01       	movw	r24, r16
     832:	b7 01       	movw	r22, r14
     834:	0e 94 76 04 	call	0x8ec	; 0x8ec <__clzsi2>
     838:	fc 01       	movw	r30, r24
     83a:	31 97       	sbiw	r30, 0x01	; 1
     83c:	f7 ff       	sbrs	r31, 7
     83e:	3b c0       	rjmp	.+118    	; 0x8b6 <__stack+0x57>
     840:	22 27       	eor	r18, r18
     842:	33 27       	eor	r19, r19
     844:	2e 1b       	sub	r18, r30
     846:	3f 0b       	sbc	r19, r31
     848:	57 01       	movw	r10, r14
     84a:	68 01       	movw	r12, r16
     84c:	02 2e       	mov	r0, r18
     84e:	04 c0       	rjmp	.+8      	; 0x858 <__floatunsisf+0x5e>
     850:	d6 94       	lsr	r13
     852:	c7 94       	ror	r12
     854:	b7 94       	ror	r11
     856:	a7 94       	ror	r10
     858:	0a 94       	dec	r0
     85a:	d2 f7       	brpl	.-12     	; 0x850 <__floatunsisf+0x56>
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	a0 e0       	ldi	r26, 0x00	; 0
     86a:	b0 e0       	ldi	r27, 0x00	; 0
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__stack+0x17>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	aa 1f       	adc	r26, r26
     874:	bb 1f       	adc	r27, r27
     876:	2a 95       	dec	r18
     878:	d2 f7       	brpl	.-12     	; 0x86e <__stack+0xf>
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	a1 09       	sbc	r26, r1
     87e:	b1 09       	sbc	r27, r1
     880:	8e 21       	and	r24, r14
     882:	9f 21       	and	r25, r15
     884:	a0 23       	and	r26, r16
     886:	b1 23       	and	r27, r17
     888:	00 97       	sbiw	r24, 0x00	; 0
     88a:	a1 05       	cpc	r26, r1
     88c:	b1 05       	cpc	r27, r1
     88e:	21 f0       	breq	.+8      	; 0x898 <__stack+0x39>
     890:	41 e0       	ldi	r20, 0x01	; 1
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	4a 29       	or	r20, r10
     89a:	5b 29       	or	r21, r11
     89c:	6c 29       	or	r22, r12
     89e:	7d 29       	or	r23, r13
     8a0:	4d 83       	std	Y+5, r20	; 0x05
     8a2:	5e 83       	std	Y+6, r21	; 0x06
     8a4:	6f 83       	std	Y+7, r22	; 0x07
     8a6:	78 87       	std	Y+8, r23	; 0x08
     8a8:	8e e1       	ldi	r24, 0x1E	; 30
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	8e 1b       	sub	r24, r30
     8ae:	9f 0b       	sbc	r25, r31
     8b0:	9c 83       	std	Y+4, r25	; 0x04
     8b2:	8b 83       	std	Y+3, r24	; 0x03
     8b4:	12 c0       	rjmp	.+36     	; 0x8da <__stack+0x7b>
     8b6:	30 97       	sbiw	r30, 0x00	; 0
     8b8:	81 f0       	breq	.+32     	; 0x8da <__stack+0x7b>
     8ba:	0e 2e       	mov	r0, r30
     8bc:	04 c0       	rjmp	.+8      	; 0x8c6 <__stack+0x67>
     8be:	ee 0c       	add	r14, r14
     8c0:	ff 1c       	adc	r15, r15
     8c2:	00 1f       	adc	r16, r16
     8c4:	11 1f       	adc	r17, r17
     8c6:	0a 94       	dec	r0
     8c8:	d2 f7       	brpl	.-12     	; 0x8be <__stack+0x5f>
     8ca:	ed 82       	std	Y+5, r14	; 0x05
     8cc:	fe 82       	std	Y+6, r15	; 0x06
     8ce:	0f 83       	std	Y+7, r16	; 0x07
     8d0:	18 87       	std	Y+8, r17	; 0x08
     8d2:	ce 1a       	sub	r12, r30
     8d4:	df 0a       	sbc	r13, r31
     8d6:	dc 82       	std	Y+4, r13	; 0x04
     8d8:	cb 82       	std	Y+3, r12	; 0x03
     8da:	1a 82       	std	Y+2, r1	; 0x02
     8dc:	ce 01       	movw	r24, r28
     8de:	01 96       	adiw	r24, 0x01	; 1
     8e0:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     8e4:	28 96       	adiw	r28, 0x08	; 8
     8e6:	ea e0       	ldi	r30, 0x0A	; 10
     8e8:	0c 94 8f 28 	jmp	0x511e	; 0x511e <__epilogue_restores__+0x10>

000008ec <__clzsi2>:
     8ec:	ef 92       	push	r14
     8ee:	ff 92       	push	r15
     8f0:	0f 93       	push	r16
     8f2:	1f 93       	push	r17
     8f4:	7b 01       	movw	r14, r22
     8f6:	8c 01       	movw	r16, r24
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	e8 16       	cp	r14, r24
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	f8 06       	cpc	r15, r24
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	08 07       	cpc	r16, r24
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	18 07       	cpc	r17, r24
     908:	88 f4       	brcc	.+34     	; 0x92c <__clzsi2+0x40>
     90a:	8f ef       	ldi	r24, 0xFF	; 255
     90c:	e8 16       	cp	r14, r24
     90e:	f1 04       	cpc	r15, r1
     910:	01 05       	cpc	r16, r1
     912:	11 05       	cpc	r17, r1
     914:	31 f0       	breq	.+12     	; 0x922 <__clzsi2+0x36>
     916:	28 f0       	brcs	.+10     	; 0x922 <__clzsi2+0x36>
     918:	88 e0       	ldi	r24, 0x08	; 8
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	a0 e0       	ldi	r26, 0x00	; 0
     91e:	b0 e0       	ldi	r27, 0x00	; 0
     920:	17 c0       	rjmp	.+46     	; 0x950 <__clzsi2+0x64>
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	a0 e0       	ldi	r26, 0x00	; 0
     928:	b0 e0       	ldi	r27, 0x00	; 0
     92a:	12 c0       	rjmp	.+36     	; 0x950 <__clzsi2+0x64>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	e8 16       	cp	r14, r24
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	f8 06       	cpc	r15, r24
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	08 07       	cpc	r16, r24
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	18 07       	cpc	r17, r24
     93c:	28 f0       	brcs	.+10     	; 0x948 <__clzsi2+0x5c>
     93e:	88 e1       	ldi	r24, 0x18	; 24
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	04 c0       	rjmp	.+8      	; 0x950 <__clzsi2+0x64>
     948:	80 e1       	ldi	r24, 0x10	; 16
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	20 e2       	ldi	r18, 0x20	; 32
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	50 e0       	ldi	r21, 0x00	; 0
     958:	28 1b       	sub	r18, r24
     95a:	39 0b       	sbc	r19, r25
     95c:	4a 0b       	sbc	r20, r26
     95e:	5b 0b       	sbc	r21, r27
     960:	04 c0       	rjmp	.+8      	; 0x96a <__clzsi2+0x7e>
     962:	16 95       	lsr	r17
     964:	07 95       	ror	r16
     966:	f7 94       	ror	r15
     968:	e7 94       	ror	r14
     96a:	8a 95       	dec	r24
     96c:	d2 f7       	brpl	.-12     	; 0x962 <__clzsi2+0x76>
     96e:	f7 01       	movw	r30, r14
     970:	e6 56       	subi	r30, 0x66	; 102
     972:	fe 4f       	sbci	r31, 0xFE	; 254
     974:	80 81       	ld	r24, Z
     976:	28 1b       	sub	r18, r24
     978:	31 09       	sbc	r19, r1
     97a:	41 09       	sbc	r20, r1
     97c:	51 09       	sbc	r21, r1
     97e:	c9 01       	movw	r24, r18
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	ef 90       	pop	r14
     988:	08 95       	ret

0000098a <__pack_f>:
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	0f 93       	push	r16
     992:	1f 93       	push	r17
     994:	fc 01       	movw	r30, r24
     996:	e4 80       	ldd	r14, Z+4	; 0x04
     998:	f5 80       	ldd	r15, Z+5	; 0x05
     99a:	06 81       	ldd	r16, Z+6	; 0x06
     99c:	17 81       	ldd	r17, Z+7	; 0x07
     99e:	d1 80       	ldd	r13, Z+1	; 0x01
     9a0:	80 81       	ld	r24, Z
     9a2:	82 30       	cpi	r24, 0x02	; 2
     9a4:	48 f4       	brcc	.+18     	; 0x9b8 <__pack_f+0x2e>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a0 e1       	ldi	r26, 0x10	; 16
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	e8 2a       	or	r14, r24
     9b0:	f9 2a       	or	r15, r25
     9b2:	0a 2b       	or	r16, r26
     9b4:	1b 2b       	or	r17, r27
     9b6:	a5 c0       	rjmp	.+330    	; 0xb02 <__pack_f+0x178>
     9b8:	84 30       	cpi	r24, 0x04	; 4
     9ba:	09 f4       	brne	.+2      	; 0x9be <__pack_f+0x34>
     9bc:	9f c0       	rjmp	.+318    	; 0xafc <__pack_f+0x172>
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	21 f4       	brne	.+8      	; 0x9ca <__pack_f+0x40>
     9c2:	ee 24       	eor	r14, r14
     9c4:	ff 24       	eor	r15, r15
     9c6:	87 01       	movw	r16, r14
     9c8:	05 c0       	rjmp	.+10     	; 0x9d4 <__pack_f+0x4a>
     9ca:	e1 14       	cp	r14, r1
     9cc:	f1 04       	cpc	r15, r1
     9ce:	01 05       	cpc	r16, r1
     9d0:	11 05       	cpc	r17, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__pack_f+0x50>
     9d4:	e0 e0       	ldi	r30, 0x00	; 0
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	96 c0       	rjmp	.+300    	; 0xb06 <__pack_f+0x17c>
     9da:	62 81       	ldd	r22, Z+2	; 0x02
     9dc:	73 81       	ldd	r23, Z+3	; 0x03
     9de:	9f ef       	ldi	r25, 0xFF	; 255
     9e0:	62 38       	cpi	r22, 0x82	; 130
     9e2:	79 07       	cpc	r23, r25
     9e4:	0c f0       	brlt	.+2      	; 0x9e8 <__pack_f+0x5e>
     9e6:	5b c0       	rjmp	.+182    	; 0xa9e <__pack_f+0x114>
     9e8:	22 e8       	ldi	r18, 0x82	; 130
     9ea:	3f ef       	ldi	r19, 0xFF	; 255
     9ec:	26 1b       	sub	r18, r22
     9ee:	37 0b       	sbc	r19, r23
     9f0:	2a 31       	cpi	r18, 0x1A	; 26
     9f2:	31 05       	cpc	r19, r1
     9f4:	2c f0       	brlt	.+10     	; 0xa00 <__pack_f+0x76>
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	2a c0       	rjmp	.+84     	; 0xa54 <__pack_f+0xca>
     a00:	b8 01       	movw	r22, r16
     a02:	a7 01       	movw	r20, r14
     a04:	02 2e       	mov	r0, r18
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__pack_f+0x86>
     a08:	76 95       	lsr	r23
     a0a:	67 95       	ror	r22
     a0c:	57 95       	ror	r21
     a0e:	47 95       	ror	r20
     a10:	0a 94       	dec	r0
     a12:	d2 f7       	brpl	.-12     	; 0xa08 <__pack_f+0x7e>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__pack_f+0x9c>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	aa 1f       	adc	r26, r26
     a24:	bb 1f       	adc	r27, r27
     a26:	2a 95       	dec	r18
     a28:	d2 f7       	brpl	.-12     	; 0xa1e <__pack_f+0x94>
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	a1 09       	sbc	r26, r1
     a2e:	b1 09       	sbc	r27, r1
     a30:	8e 21       	and	r24, r14
     a32:	9f 21       	and	r25, r15
     a34:	a0 23       	and	r26, r16
     a36:	b1 23       	and	r27, r17
     a38:	00 97       	sbiw	r24, 0x00	; 0
     a3a:	a1 05       	cpc	r26, r1
     a3c:	b1 05       	cpc	r27, r1
     a3e:	21 f0       	breq	.+8      	; 0xa48 <__pack_f+0xbe>
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	9a 01       	movw	r18, r20
     a4a:	ab 01       	movw	r20, r22
     a4c:	28 2b       	or	r18, r24
     a4e:	39 2b       	or	r19, r25
     a50:	4a 2b       	or	r20, r26
     a52:	5b 2b       	or	r21, r27
     a54:	da 01       	movw	r26, r20
     a56:	c9 01       	movw	r24, r18
     a58:	8f 77       	andi	r24, 0x7F	; 127
     a5a:	90 70       	andi	r25, 0x00	; 0
     a5c:	a0 70       	andi	r26, 0x00	; 0
     a5e:	b0 70       	andi	r27, 0x00	; 0
     a60:	80 34       	cpi	r24, 0x40	; 64
     a62:	91 05       	cpc	r25, r1
     a64:	a1 05       	cpc	r26, r1
     a66:	b1 05       	cpc	r27, r1
     a68:	39 f4       	brne	.+14     	; 0xa78 <__pack_f+0xee>
     a6a:	27 ff       	sbrs	r18, 7
     a6c:	09 c0       	rjmp	.+18     	; 0xa80 <__pack_f+0xf6>
     a6e:	20 5c       	subi	r18, 0xC0	; 192
     a70:	3f 4f       	sbci	r19, 0xFF	; 255
     a72:	4f 4f       	sbci	r20, 0xFF	; 255
     a74:	5f 4f       	sbci	r21, 0xFF	; 255
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <__pack_f+0xf6>
     a78:	21 5c       	subi	r18, 0xC1	; 193
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	4f 4f       	sbci	r20, 0xFF	; 255
     a7e:	5f 4f       	sbci	r21, 0xFF	; 255
     a80:	e0 e0       	ldi	r30, 0x00	; 0
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	20 30       	cpi	r18, 0x00	; 0
     a86:	a0 e0       	ldi	r26, 0x00	; 0
     a88:	3a 07       	cpc	r19, r26
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	4a 07       	cpc	r20, r26
     a8e:	a0 e4       	ldi	r26, 0x40	; 64
     a90:	5a 07       	cpc	r21, r26
     a92:	10 f0       	brcs	.+4      	; 0xa98 <__pack_f+0x10e>
     a94:	e1 e0       	ldi	r30, 0x01	; 1
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	79 01       	movw	r14, r18
     a9a:	8a 01       	movw	r16, r20
     a9c:	27 c0       	rjmp	.+78     	; 0xaec <__pack_f+0x162>
     a9e:	60 38       	cpi	r22, 0x80	; 128
     aa0:	71 05       	cpc	r23, r1
     aa2:	64 f5       	brge	.+88     	; 0xafc <__pack_f+0x172>
     aa4:	fb 01       	movw	r30, r22
     aa6:	e1 58       	subi	r30, 0x81	; 129
     aa8:	ff 4f       	sbci	r31, 0xFF	; 255
     aaa:	d8 01       	movw	r26, r16
     aac:	c7 01       	movw	r24, r14
     aae:	8f 77       	andi	r24, 0x7F	; 127
     ab0:	90 70       	andi	r25, 0x00	; 0
     ab2:	a0 70       	andi	r26, 0x00	; 0
     ab4:	b0 70       	andi	r27, 0x00	; 0
     ab6:	80 34       	cpi	r24, 0x40	; 64
     ab8:	91 05       	cpc	r25, r1
     aba:	a1 05       	cpc	r26, r1
     abc:	b1 05       	cpc	r27, r1
     abe:	39 f4       	brne	.+14     	; 0xace <__pack_f+0x144>
     ac0:	e7 fe       	sbrs	r14, 7
     ac2:	0d c0       	rjmp	.+26     	; 0xade <__pack_f+0x154>
     ac4:	80 e4       	ldi	r24, 0x40	; 64
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	a0 e0       	ldi	r26, 0x00	; 0
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	04 c0       	rjmp	.+8      	; 0xad6 <__pack_f+0x14c>
     ace:	8f e3       	ldi	r24, 0x3F	; 63
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	a0 e0       	ldi	r26, 0x00	; 0
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	e8 0e       	add	r14, r24
     ad8:	f9 1e       	adc	r15, r25
     ada:	0a 1f       	adc	r16, r26
     adc:	1b 1f       	adc	r17, r27
     ade:	17 ff       	sbrs	r17, 7
     ae0:	05 c0       	rjmp	.+10     	; 0xaec <__pack_f+0x162>
     ae2:	16 95       	lsr	r17
     ae4:	07 95       	ror	r16
     ae6:	f7 94       	ror	r15
     ae8:	e7 94       	ror	r14
     aea:	31 96       	adiw	r30, 0x01	; 1
     aec:	87 e0       	ldi	r24, 0x07	; 7
     aee:	16 95       	lsr	r17
     af0:	07 95       	ror	r16
     af2:	f7 94       	ror	r15
     af4:	e7 94       	ror	r14
     af6:	8a 95       	dec	r24
     af8:	d1 f7       	brne	.-12     	; 0xaee <__pack_f+0x164>
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__pack_f+0x17c>
     afc:	ee 24       	eor	r14, r14
     afe:	ff 24       	eor	r15, r15
     b00:	87 01       	movw	r16, r14
     b02:	ef ef       	ldi	r30, 0xFF	; 255
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	6e 2f       	mov	r22, r30
     b08:	67 95       	ror	r22
     b0a:	66 27       	eor	r22, r22
     b0c:	67 95       	ror	r22
     b0e:	90 2f       	mov	r25, r16
     b10:	9f 77       	andi	r25, 0x7F	; 127
     b12:	d7 94       	ror	r13
     b14:	dd 24       	eor	r13, r13
     b16:	d7 94       	ror	r13
     b18:	8e 2f       	mov	r24, r30
     b1a:	86 95       	lsr	r24
     b1c:	49 2f       	mov	r20, r25
     b1e:	46 2b       	or	r20, r22
     b20:	58 2f       	mov	r21, r24
     b22:	5d 29       	or	r21, r13
     b24:	b7 01       	movw	r22, r14
     b26:	ca 01       	movw	r24, r20
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	df 90       	pop	r13
     b32:	08 95       	ret

00000b34 <__unpack_f>:
     b34:	fc 01       	movw	r30, r24
     b36:	db 01       	movw	r26, r22
     b38:	40 81       	ld	r20, Z
     b3a:	51 81       	ldd	r21, Z+1	; 0x01
     b3c:	22 81       	ldd	r18, Z+2	; 0x02
     b3e:	62 2f       	mov	r22, r18
     b40:	6f 77       	andi	r22, 0x7F	; 127
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	22 1f       	adc	r18, r18
     b46:	22 27       	eor	r18, r18
     b48:	22 1f       	adc	r18, r18
     b4a:	93 81       	ldd	r25, Z+3	; 0x03
     b4c:	89 2f       	mov	r24, r25
     b4e:	88 0f       	add	r24, r24
     b50:	82 2b       	or	r24, r18
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	99 1f       	adc	r25, r25
     b58:	99 27       	eor	r25, r25
     b5a:	99 1f       	adc	r25, r25
     b5c:	11 96       	adiw	r26, 0x01	; 1
     b5e:	9c 93       	st	X, r25
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	21 15       	cp	r18, r1
     b64:	31 05       	cpc	r19, r1
     b66:	a9 f5       	brne	.+106    	; 0xbd2 <__unpack_f+0x9e>
     b68:	41 15       	cp	r20, r1
     b6a:	51 05       	cpc	r21, r1
     b6c:	61 05       	cpc	r22, r1
     b6e:	71 05       	cpc	r23, r1
     b70:	11 f4       	brne	.+4      	; 0xb76 <__unpack_f+0x42>
     b72:	82 e0       	ldi	r24, 0x02	; 2
     b74:	37 c0       	rjmp	.+110    	; 0xbe4 <__unpack_f+0xb0>
     b76:	82 e8       	ldi	r24, 0x82	; 130
     b78:	9f ef       	ldi	r25, 0xFF	; 255
     b7a:	13 96       	adiw	r26, 0x03	; 3
     b7c:	9c 93       	st	X, r25
     b7e:	8e 93       	st	-X, r24
     b80:	12 97       	sbiw	r26, 0x02	; 2
     b82:	9a 01       	movw	r18, r20
     b84:	ab 01       	movw	r20, r22
     b86:	67 e0       	ldi	r22, 0x07	; 7
     b88:	22 0f       	add	r18, r18
     b8a:	33 1f       	adc	r19, r19
     b8c:	44 1f       	adc	r20, r20
     b8e:	55 1f       	adc	r21, r21
     b90:	6a 95       	dec	r22
     b92:	d1 f7       	brne	.-12     	; 0xb88 <__unpack_f+0x54>
     b94:	83 e0       	ldi	r24, 0x03	; 3
     b96:	8c 93       	st	X, r24
     b98:	0d c0       	rjmp	.+26     	; 0xbb4 <__unpack_f+0x80>
     b9a:	22 0f       	add	r18, r18
     b9c:	33 1f       	adc	r19, r19
     b9e:	44 1f       	adc	r20, r20
     ba0:	55 1f       	adc	r21, r21
     ba2:	12 96       	adiw	r26, 0x02	; 2
     ba4:	8d 91       	ld	r24, X+
     ba6:	9c 91       	ld	r25, X
     ba8:	13 97       	sbiw	r26, 0x03	; 3
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	13 96       	adiw	r26, 0x03	; 3
     bae:	9c 93       	st	X, r25
     bb0:	8e 93       	st	-X, r24
     bb2:	12 97       	sbiw	r26, 0x02	; 2
     bb4:	20 30       	cpi	r18, 0x00	; 0
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	38 07       	cpc	r19, r24
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	48 07       	cpc	r20, r24
     bbe:	80 e4       	ldi	r24, 0x40	; 64
     bc0:	58 07       	cpc	r21, r24
     bc2:	58 f3       	brcs	.-42     	; 0xb9a <__unpack_f+0x66>
     bc4:	14 96       	adiw	r26, 0x04	; 4
     bc6:	2d 93       	st	X+, r18
     bc8:	3d 93       	st	X+, r19
     bca:	4d 93       	st	X+, r20
     bcc:	5c 93       	st	X, r21
     bce:	17 97       	sbiw	r26, 0x07	; 7
     bd0:	08 95       	ret
     bd2:	2f 3f       	cpi	r18, 0xFF	; 255
     bd4:	31 05       	cpc	r19, r1
     bd6:	79 f4       	brne	.+30     	; 0xbf6 <__unpack_f+0xc2>
     bd8:	41 15       	cp	r20, r1
     bda:	51 05       	cpc	r21, r1
     bdc:	61 05       	cpc	r22, r1
     bde:	71 05       	cpc	r23, r1
     be0:	19 f4       	brne	.+6      	; 0xbe8 <__unpack_f+0xb4>
     be2:	84 e0       	ldi	r24, 0x04	; 4
     be4:	8c 93       	st	X, r24
     be6:	08 95       	ret
     be8:	64 ff       	sbrs	r22, 4
     bea:	03 c0       	rjmp	.+6      	; 0xbf2 <__unpack_f+0xbe>
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	8c 93       	st	X, r24
     bf0:	12 c0       	rjmp	.+36     	; 0xc16 <__unpack_f+0xe2>
     bf2:	1c 92       	st	X, r1
     bf4:	10 c0       	rjmp	.+32     	; 0xc16 <__unpack_f+0xe2>
     bf6:	2f 57       	subi	r18, 0x7F	; 127
     bf8:	30 40       	sbci	r19, 0x00	; 0
     bfa:	13 96       	adiw	r26, 0x03	; 3
     bfc:	3c 93       	st	X, r19
     bfe:	2e 93       	st	-X, r18
     c00:	12 97       	sbiw	r26, 0x02	; 2
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	8c 93       	st	X, r24
     c06:	87 e0       	ldi	r24, 0x07	; 7
     c08:	44 0f       	add	r20, r20
     c0a:	55 1f       	adc	r21, r21
     c0c:	66 1f       	adc	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	8a 95       	dec	r24
     c12:	d1 f7       	brne	.-12     	; 0xc08 <__unpack_f+0xd4>
     c14:	70 64       	ori	r23, 0x40	; 64
     c16:	14 96       	adiw	r26, 0x04	; 4
     c18:	4d 93       	st	X+, r20
     c1a:	5d 93       	st	X+, r21
     c1c:	6d 93       	st	X+, r22
     c1e:	7c 93       	st	X, r23
     c20:	17 97       	sbiw	r26, 0x07	; 7
     c22:	08 95       	ret

00000c24 <__fpcmp_parts_f>:
     c24:	1f 93       	push	r17
     c26:	dc 01       	movw	r26, r24
     c28:	fb 01       	movw	r30, r22
     c2a:	9c 91       	ld	r25, X
     c2c:	92 30       	cpi	r25, 0x02	; 2
     c2e:	08 f4       	brcc	.+2      	; 0xc32 <__fpcmp_parts_f+0xe>
     c30:	47 c0       	rjmp	.+142    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c32:	80 81       	ld	r24, Z
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	08 f4       	brcc	.+2      	; 0xc3a <__fpcmp_parts_f+0x16>
     c38:	43 c0       	rjmp	.+134    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c3a:	94 30       	cpi	r25, 0x04	; 4
     c3c:	51 f4       	brne	.+20     	; 0xc52 <__fpcmp_parts_f+0x2e>
     c3e:	11 96       	adiw	r26, 0x01	; 1
     c40:	1c 91       	ld	r17, X
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	99 f5       	brne	.+102    	; 0xcac <__fpcmp_parts_f+0x88>
     c46:	81 81       	ldd	r24, Z+1	; 0x01
     c48:	68 2f       	mov	r22, r24
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	61 1b       	sub	r22, r17
     c4e:	71 09       	sbc	r23, r1
     c50:	3f c0       	rjmp	.+126    	; 0xcd0 <__fpcmp_parts_f+0xac>
     c52:	84 30       	cpi	r24, 0x04	; 4
     c54:	21 f0       	breq	.+8      	; 0xc5e <__fpcmp_parts_f+0x3a>
     c56:	92 30       	cpi	r25, 0x02	; 2
     c58:	31 f4       	brne	.+12     	; 0xc66 <__fpcmp_parts_f+0x42>
     c5a:	82 30       	cpi	r24, 0x02	; 2
     c5c:	b9 f1       	breq	.+110    	; 0xccc <__fpcmp_parts_f+0xa8>
     c5e:	81 81       	ldd	r24, Z+1	; 0x01
     c60:	88 23       	and	r24, r24
     c62:	89 f1       	breq	.+98     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     c64:	2d c0       	rjmp	.+90     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c66:	11 96       	adiw	r26, 0x01	; 1
     c68:	1c 91       	ld	r17, X
     c6a:	11 97       	sbiw	r26, 0x01	; 1
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	f1 f0       	breq	.+60     	; 0xcac <__fpcmp_parts_f+0x88>
     c70:	81 81       	ldd	r24, Z+1	; 0x01
     c72:	18 17       	cp	r17, r24
     c74:	d9 f4       	brne	.+54     	; 0xcac <__fpcmp_parts_f+0x88>
     c76:	12 96       	adiw	r26, 0x02	; 2
     c78:	2d 91       	ld	r18, X+
     c7a:	3c 91       	ld	r19, X
     c7c:	13 97       	sbiw	r26, 0x03	; 3
     c7e:	82 81       	ldd	r24, Z+2	; 0x02
     c80:	93 81       	ldd	r25, Z+3	; 0x03
     c82:	82 17       	cp	r24, r18
     c84:	93 07       	cpc	r25, r19
     c86:	94 f0       	brlt	.+36     	; 0xcac <__fpcmp_parts_f+0x88>
     c88:	28 17       	cp	r18, r24
     c8a:	39 07       	cpc	r19, r25
     c8c:	bc f0       	brlt	.+46     	; 0xcbc <__fpcmp_parts_f+0x98>
     c8e:	14 96       	adiw	r26, 0x04	; 4
     c90:	8d 91       	ld	r24, X+
     c92:	9d 91       	ld	r25, X+
     c94:	0d 90       	ld	r0, X+
     c96:	bc 91       	ld	r27, X
     c98:	a0 2d       	mov	r26, r0
     c9a:	24 81       	ldd	r18, Z+4	; 0x04
     c9c:	35 81       	ldd	r19, Z+5	; 0x05
     c9e:	46 81       	ldd	r20, Z+6	; 0x06
     ca0:	57 81       	ldd	r21, Z+7	; 0x07
     ca2:	28 17       	cp	r18, r24
     ca4:	39 07       	cpc	r19, r25
     ca6:	4a 07       	cpc	r20, r26
     ca8:	5b 07       	cpc	r21, r27
     caa:	18 f4       	brcc	.+6      	; 0xcb2 <__fpcmp_parts_f+0x8e>
     cac:	11 23       	and	r17, r17
     cae:	41 f0       	breq	.+16     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     cb0:	0a c0       	rjmp	.+20     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cb2:	82 17       	cp	r24, r18
     cb4:	93 07       	cpc	r25, r19
     cb6:	a4 07       	cpc	r26, r20
     cb8:	b5 07       	cpc	r27, r21
     cba:	40 f4       	brcc	.+16     	; 0xccc <__fpcmp_parts_f+0xa8>
     cbc:	11 23       	and	r17, r17
     cbe:	19 f0       	breq	.+6      	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cc0:	61 e0       	ldi	r22, 0x01	; 1
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <__fpcmp_parts_f+0xac>
     cc6:	6f ef       	ldi	r22, 0xFF	; 255
     cc8:	7f ef       	ldi	r23, 0xFF	; 255
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <__fpcmp_parts_f+0xac>
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	cb 01       	movw	r24, r22
     cd2:	1f 91       	pop	r17
     cd4:	08 95       	ret

00000cd6 <SmartHomeWelcome>:

#define F_CPU 12000000UL


void SmartHomeWelcome(void)
{
     cd6:	df 93       	push	r29
     cd8:	cf 93       	push	r28
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
     cde:	2e 97       	sbiw	r28, 0x0e	; 14
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	f8 94       	cli
     ce4:	de bf       	out	0x3e, r29	; 62
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	cd bf       	out	0x3d, r28	; 61
	HLCD_vDisplayString("Hello Helal");
     cea:	80 e6       	ldi	r24, 0x60	; 96
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	a8 e4       	ldi	r26, 0x48	; 72
     cf8:	b3 e4       	ldi	r27, 0x43	; 67
     cfa:	8b 87       	std	Y+11, r24	; 0x0b
     cfc:	9c 87       	std	Y+12, r25	; 0x0c
     cfe:	ad 87       	std	Y+13, r26	; 0x0d
     d00:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d02:	6b 85       	ldd	r22, Y+11	; 0x0b
     d04:	7c 85       	ldd	r23, Y+12	; 0x0c
     d06:	8d 85       	ldd	r24, Y+13	; 0x0d
     d08:	9e 85       	ldd	r25, Y+14	; 0x0e
     d0a:	20 e0       	ldi	r18, 0x00	; 0
     d0c:	30 e8       	ldi	r19, 0x80	; 128
     d0e:	4b e3       	ldi	r20, 0x3B	; 59
     d10:	55 e4       	ldi	r21, 0x45	; 69
     d12:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d16:	dc 01       	movw	r26, r24
     d18:	cb 01       	movw	r24, r22
     d1a:	8f 83       	std	Y+7, r24	; 0x07
     d1c:	98 87       	std	Y+8, r25	; 0x08
     d1e:	a9 87       	std	Y+9, r26	; 0x09
     d20:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d22:	6f 81       	ldd	r22, Y+7	; 0x07
     d24:	78 85       	ldd	r23, Y+8	; 0x08
     d26:	89 85       	ldd	r24, Y+9	; 0x09
     d28:	9a 85       	ldd	r25, Y+10	; 0x0a
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	40 e8       	ldi	r20, 0x80	; 128
     d30:	5f e3       	ldi	r21, 0x3F	; 63
     d32:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d36:	88 23       	and	r24, r24
     d38:	2c f4       	brge	.+10     	; 0xd44 <SmartHomeWelcome+0x6e>
		__ticks = 1;
     d3a:	81 e0       	ldi	r24, 0x01	; 1
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	9e 83       	std	Y+6, r25	; 0x06
     d40:	8d 83       	std	Y+5, r24	; 0x05
     d42:	3f c0       	rjmp	.+126    	; 0xdc2 <SmartHomeWelcome+0xec>
	else if (__tmp > 65535)
     d44:	6f 81       	ldd	r22, Y+7	; 0x07
     d46:	78 85       	ldd	r23, Y+8	; 0x08
     d48:	89 85       	ldd	r24, Y+9	; 0x09
     d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	3f ef       	ldi	r19, 0xFF	; 255
     d50:	4f e7       	ldi	r20, 0x7F	; 127
     d52:	57 e4       	ldi	r21, 0x47	; 71
     d54:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d58:	18 16       	cp	r1, r24
     d5a:	4c f5       	brge	.+82     	; 0xdae <SmartHomeWelcome+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d5c:	6b 85       	ldd	r22, Y+11	; 0x0b
     d5e:	7c 85       	ldd	r23, Y+12	; 0x0c
     d60:	8d 85       	ldd	r24, Y+13	; 0x0d
     d62:	9e 85       	ldd	r25, Y+14	; 0x0e
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	40 e2       	ldi	r20, 0x20	; 32
     d6a:	51 e4       	ldi	r21, 0x41	; 65
     d6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d70:	dc 01       	movw	r26, r24
     d72:	cb 01       	movw	r24, r22
     d74:	bc 01       	movw	r22, r24
     d76:	cd 01       	movw	r24, r26
     d78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	0f c0       	rjmp	.+30     	; 0xda4 <SmartHomeWelcome+0xce>
     d86:	8c e2       	ldi	r24, 0x2C	; 44
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	9c 83       	std	Y+4, r25	; 0x04
     d8c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d8e:	8b 81       	ldd	r24, Y+3	; 0x03
     d90:	9c 81       	ldd	r25, Y+4	; 0x04
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	f1 f7       	brne	.-4      	; 0xd92 <SmartHomeWelcome+0xbc>
     d96:	9c 83       	std	Y+4, r25	; 0x04
     d98:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d9a:	8d 81       	ldd	r24, Y+5	; 0x05
     d9c:	9e 81       	ldd	r25, Y+6	; 0x06
     d9e:	01 97       	sbiw	r24, 0x01	; 1
     da0:	9e 83       	std	Y+6, r25	; 0x06
     da2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     da4:	8d 81       	ldd	r24, Y+5	; 0x05
     da6:	9e 81       	ldd	r25, Y+6	; 0x06
     da8:	00 97       	sbiw	r24, 0x00	; 0
     daa:	69 f7       	brne	.-38     	; 0xd86 <SmartHomeWelcome+0xb0>
     dac:	14 c0       	rjmp	.+40     	; 0xdd6 <SmartHomeWelcome+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dae:	6f 81       	ldd	r22, Y+7	; 0x07
     db0:	78 85       	ldd	r23, Y+8	; 0x08
     db2:	89 85       	ldd	r24, Y+9	; 0x09
     db4:	9a 85       	ldd	r25, Y+10	; 0x0a
     db6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dba:	dc 01       	movw	r26, r24
     dbc:	cb 01       	movw	r24, r22
     dbe:	9e 83       	std	Y+6, r25	; 0x06
     dc0:	8d 83       	std	Y+5, r24	; 0x05
     dc2:	8d 81       	ldd	r24, Y+5	; 0x05
     dc4:	9e 81       	ldd	r25, Y+6	; 0x06
     dc6:	9a 83       	std	Y+2, r25	; 0x02
     dc8:	89 83       	std	Y+1, r24	; 0x01
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	f1 f7       	brne	.-4      	; 0xdce <SmartHomeWelcome+0xf8>
     dd2:	9a 83       	std	Y+2, r25	; 0x02
     dd4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(200);
	HLCD_vClearDisplay();
     dd6:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
}
     dda:	2e 96       	adiw	r28, 0x0e	; 14
     ddc:	0f b6       	in	r0, 0x3f	; 63
     dde:	f8 94       	cli
     de0:	de bf       	out	0x3e, r29	; 62
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	cd bf       	out	0x3d, r28	; 61
     de6:	cf 91       	pop	r28
     de8:	df 91       	pop	r29
     dea:	08 95       	ret

00000dec <SmartHomeLoginPassword>:

void SmartHomeLoginPassword()
{
     dec:	df 93       	push	r29
     dee:	cf 93       	push	r28
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	ad 97       	sbiw	r28, 0x2d	; 45
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	f8 94       	cli
     dfa:	de bf       	out	0x3e, r29	; 62
     dfc:	0f be       	out	0x3f, r0	; 63
     dfe:	cd bf       	out	0x3d, r28	; 61
	u16 L_Password;

	HLCD_vDisplayString("Enter password: ");
     e00:	8c e6       	ldi	r24, 0x6C	; 108
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
     e08:	82 e0       	ldi	r24, 0x02	; 2
     e0a:	61 e0       	ldi	r22, 0x01	; 1
     e0c:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>



	for(u8 i=0; i <3; i++)
     e10:	1b a6       	std	Y+43, r1	; 0x2b
     e12:	81 c1       	rjmp	.+770    	; 0x1116 <SmartHomeLoginPassword+0x32a>
	{
		L_Password= HKEYPAD_u16MultiDigitInput();
     e14:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <HKEYPAD_u16MultiDigitInput>
     e18:	9d a7       	std	Y+45, r25	; 0x2d
     e1a:	8c a7       	std	Y+44, r24	; 0x2c
		HLCD_vClearDisplay();
     e1c:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
		if(PASSWORD == L_Password )
     e20:	8c a5       	ldd	r24, Y+44	; 0x2c
     e22:	9d a5       	ldd	r25, Y+45	; 0x2d
     e24:	8b 37       	cpi	r24, 0x7B	; 123
     e26:	91 05       	cpc	r25, r1
     e28:	09 f0       	breq	.+2      	; 0xe2c <SmartHomeLoginPassword+0x40>
     e2a:	79 c0       	rjmp	.+242    	; 0xf1e <SmartHomeLoginPassword+0x132>
		{

			HLCD_vDisplayString("Welcome Helal");
     e2c:	8d e7       	ldi	r24, 0x7D	; 125
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	a8 e4       	ldi	r26, 0x48	; 72
     e3a:	b3 e4       	ldi	r27, 0x43	; 67
     e3c:	8f a3       	std	Y+39, r24	; 0x27
     e3e:	98 a7       	std	Y+40, r25	; 0x28
     e40:	a9 a7       	std	Y+41, r26	; 0x29
     e42:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e44:	6f a1       	ldd	r22, Y+39	; 0x27
     e46:	78 a5       	ldd	r23, Y+40	; 0x28
     e48:	89 a5       	ldd	r24, Y+41	; 0x29
     e4a:	9a a5       	ldd	r25, Y+42	; 0x2a
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	30 e8       	ldi	r19, 0x80	; 128
     e50:	4b e3       	ldi	r20, 0x3B	; 59
     e52:	55 e4       	ldi	r21, 0x45	; 69
     e54:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e58:	dc 01       	movw	r26, r24
     e5a:	cb 01       	movw	r24, r22
     e5c:	8b a3       	std	Y+35, r24	; 0x23
     e5e:	9c a3       	std	Y+36, r25	; 0x24
     e60:	ad a3       	std	Y+37, r26	; 0x25
     e62:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     e64:	6b a1       	ldd	r22, Y+35	; 0x23
     e66:	7c a1       	ldd	r23, Y+36	; 0x24
     e68:	8d a1       	ldd	r24, Y+37	; 0x25
     e6a:	9e a1       	ldd	r25, Y+38	; 0x26
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	40 e8       	ldi	r20, 0x80	; 128
     e72:	5f e3       	ldi	r21, 0x3F	; 63
     e74:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     e78:	88 23       	and	r24, r24
     e7a:	2c f4       	brge	.+10     	; 0xe86 <SmartHomeLoginPassword+0x9a>
		__ticks = 1;
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	9a a3       	std	Y+34, r25	; 0x22
     e82:	89 a3       	std	Y+33, r24	; 0x21
     e84:	3f c0       	rjmp	.+126    	; 0xf04 <SmartHomeLoginPassword+0x118>
	else if (__tmp > 65535)
     e86:	6b a1       	ldd	r22, Y+35	; 0x23
     e88:	7c a1       	ldd	r23, Y+36	; 0x24
     e8a:	8d a1       	ldd	r24, Y+37	; 0x25
     e8c:	9e a1       	ldd	r25, Y+38	; 0x26
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	3f ef       	ldi	r19, 0xFF	; 255
     e92:	4f e7       	ldi	r20, 0x7F	; 127
     e94:	57 e4       	ldi	r21, 0x47	; 71
     e96:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     e9a:	18 16       	cp	r1, r24
     e9c:	4c f5       	brge	.+82     	; 0xef0 <SmartHomeLoginPassword+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e9e:	6f a1       	ldd	r22, Y+39	; 0x27
     ea0:	78 a5       	ldd	r23, Y+40	; 0x28
     ea2:	89 a5       	ldd	r24, Y+41	; 0x29
     ea4:	9a a5       	ldd	r25, Y+42	; 0x2a
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	40 e2       	ldi	r20, 0x20	; 32
     eac:	51 e4       	ldi	r21, 0x41	; 65
     eae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     eb2:	dc 01       	movw	r26, r24
     eb4:	cb 01       	movw	r24, r22
     eb6:	bc 01       	movw	r22, r24
     eb8:	cd 01       	movw	r24, r26
     eba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ebe:	dc 01       	movw	r26, r24
     ec0:	cb 01       	movw	r24, r22
     ec2:	9a a3       	std	Y+34, r25	; 0x22
     ec4:	89 a3       	std	Y+33, r24	; 0x21
     ec6:	0f c0       	rjmp	.+30     	; 0xee6 <SmartHomeLoginPassword+0xfa>
     ec8:	8c e2       	ldi	r24, 0x2C	; 44
     eca:	91 e0       	ldi	r25, 0x01	; 1
     ecc:	98 a3       	std	Y+32, r25	; 0x20
     ece:	8f 8f       	std	Y+31, r24	; 0x1f
     ed0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ed2:	98 a1       	ldd	r25, Y+32	; 0x20
     ed4:	01 97       	sbiw	r24, 0x01	; 1
     ed6:	f1 f7       	brne	.-4      	; 0xed4 <SmartHomeLoginPassword+0xe8>
     ed8:	98 a3       	std	Y+32, r25	; 0x20
     eda:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     edc:	89 a1       	ldd	r24, Y+33	; 0x21
     ede:	9a a1       	ldd	r25, Y+34	; 0x22
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	9a a3       	std	Y+34, r25	; 0x22
     ee4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ee6:	89 a1       	ldd	r24, Y+33	; 0x21
     ee8:	9a a1       	ldd	r25, Y+34	; 0x22
     eea:	00 97       	sbiw	r24, 0x00	; 0
     eec:	69 f7       	brne	.-38     	; 0xec8 <SmartHomeLoginPassword+0xdc>
     eee:	14 c0       	rjmp	.+40     	; 0xf18 <SmartHomeLoginPassword+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ef0:	6b a1       	ldd	r22, Y+35	; 0x23
     ef2:	7c a1       	ldd	r23, Y+36	; 0x24
     ef4:	8d a1       	ldd	r24, Y+37	; 0x25
     ef6:	9e a1       	ldd	r25, Y+38	; 0x26
     ef8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     efc:	dc 01       	movw	r26, r24
     efe:	cb 01       	movw	r24, r22
     f00:	9a a3       	std	Y+34, r25	; 0x22
     f02:	89 a3       	std	Y+33, r24	; 0x21
     f04:	89 a1       	ldd	r24, Y+33	; 0x21
     f06:	9a a1       	ldd	r25, Y+34	; 0x22
     f08:	9e 8f       	std	Y+30, r25	; 0x1e
     f0a:	8d 8f       	std	Y+29, r24	; 0x1d
     f0c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f0e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f10:	01 97       	sbiw	r24, 0x01	; 1
     f12:	f1 f7       	brne	.-4      	; 0xf10 <SmartHomeLoginPassword+0x124>
     f14:	9e 8f       	std	Y+30, r25	; 0x1e
     f16:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(200);
			HLCD_vClearDisplay();
     f18:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
     f1c:	00 c1       	rjmp	.+512    	; 0x111e <SmartHomeLoginPassword+0x332>
			break;
		}
		else
		{
			if(i < 2)
     f1e:	8b a5       	ldd	r24, Y+43	; 0x2b
     f20:	82 30       	cpi	r24, 0x02	; 2
     f22:	08 f0       	brcs	.+2      	; 0xf26 <SmartHomeLoginPassword+0x13a>
     f24:	7d c0       	rjmp	.+250    	; 0x1020 <SmartHomeLoginPassword+0x234>
			{
				HLCD_vDisplayString("Try Again");
     f26:	8b e8       	ldi	r24, 0x8B	; 139
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	a8 e4       	ldi	r26, 0x48	; 72
     f34:	b3 e4       	ldi	r27, 0x43	; 67
     f36:	89 8f       	std	Y+25, r24	; 0x19
     f38:	9a 8f       	std	Y+26, r25	; 0x1a
     f3a:	ab 8f       	std	Y+27, r26	; 0x1b
     f3c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f3e:	69 8d       	ldd	r22, Y+25	; 0x19
     f40:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f42:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f44:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	30 e8       	ldi	r19, 0x80	; 128
     f4a:	4b e3       	ldi	r20, 0x3B	; 59
     f4c:	55 e4       	ldi	r21, 0x45	; 69
     f4e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f52:	dc 01       	movw	r26, r24
     f54:	cb 01       	movw	r24, r22
     f56:	8d 8b       	std	Y+21, r24	; 0x15
     f58:	9e 8b       	std	Y+22, r25	; 0x16
     f5a:	af 8b       	std	Y+23, r26	; 0x17
     f5c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f5e:	6d 89       	ldd	r22, Y+21	; 0x15
     f60:	7e 89       	ldd	r23, Y+22	; 0x16
     f62:	8f 89       	ldd	r24, Y+23	; 0x17
     f64:	98 8d       	ldd	r25, Y+24	; 0x18
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	40 e8       	ldi	r20, 0x80	; 128
     f6c:	5f e3       	ldi	r21, 0x3F	; 63
     f6e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     f72:	88 23       	and	r24, r24
     f74:	2c f4       	brge	.+10     	; 0xf80 <SmartHomeLoginPassword+0x194>
		__ticks = 1;
     f76:	81 e0       	ldi	r24, 0x01	; 1
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	9c 8b       	std	Y+20, r25	; 0x14
     f7c:	8b 8b       	std	Y+19, r24	; 0x13
     f7e:	3f c0       	rjmp	.+126    	; 0xffe <SmartHomeLoginPassword+0x212>
	else if (__tmp > 65535)
     f80:	6d 89       	ldd	r22, Y+21	; 0x15
     f82:	7e 89       	ldd	r23, Y+22	; 0x16
     f84:	8f 89       	ldd	r24, Y+23	; 0x17
     f86:	98 8d       	ldd	r25, Y+24	; 0x18
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	3f ef       	ldi	r19, 0xFF	; 255
     f8c:	4f e7       	ldi	r20, 0x7F	; 127
     f8e:	57 e4       	ldi	r21, 0x47	; 71
     f90:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     f94:	18 16       	cp	r1, r24
     f96:	4c f5       	brge	.+82     	; 0xfea <SmartHomeLoginPassword+0x1fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f98:	69 8d       	ldd	r22, Y+25	; 0x19
     f9a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 e2       	ldi	r20, 0x20	; 32
     fa6:	51 e4       	ldi	r21, 0x41	; 65
     fa8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fac:	dc 01       	movw	r26, r24
     fae:	cb 01       	movw	r24, r22
     fb0:	bc 01       	movw	r22, r24
     fb2:	cd 01       	movw	r24, r26
     fb4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     fb8:	dc 01       	movw	r26, r24
     fba:	cb 01       	movw	r24, r22
     fbc:	9c 8b       	std	Y+20, r25	; 0x14
     fbe:	8b 8b       	std	Y+19, r24	; 0x13
     fc0:	0f c0       	rjmp	.+30     	; 0xfe0 <SmartHomeLoginPassword+0x1f4>
     fc2:	8c e2       	ldi	r24, 0x2C	; 44
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	9a 8b       	std	Y+18, r25	; 0x12
     fc8:	89 8b       	std	Y+17, r24	; 0x11
     fca:	89 89       	ldd	r24, Y+17	; 0x11
     fcc:	9a 89       	ldd	r25, Y+18	; 0x12
     fce:	01 97       	sbiw	r24, 0x01	; 1
     fd0:	f1 f7       	brne	.-4      	; 0xfce <SmartHomeLoginPassword+0x1e2>
     fd2:	9a 8b       	std	Y+18, r25	; 0x12
     fd4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fd6:	8b 89       	ldd	r24, Y+19	; 0x13
     fd8:	9c 89       	ldd	r25, Y+20	; 0x14
     fda:	01 97       	sbiw	r24, 0x01	; 1
     fdc:	9c 8b       	std	Y+20, r25	; 0x14
     fde:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fe0:	8b 89       	ldd	r24, Y+19	; 0x13
     fe2:	9c 89       	ldd	r25, Y+20	; 0x14
     fe4:	00 97       	sbiw	r24, 0x00	; 0
     fe6:	69 f7       	brne	.-38     	; 0xfc2 <SmartHomeLoginPassword+0x1d6>
     fe8:	14 c0       	rjmp	.+40     	; 0x1012 <SmartHomeLoginPassword+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fea:	6d 89       	ldd	r22, Y+21	; 0x15
     fec:	7e 89       	ldd	r23, Y+22	; 0x16
     fee:	8f 89       	ldd	r24, Y+23	; 0x17
     ff0:	98 8d       	ldd	r25, Y+24	; 0x18
     ff2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ff6:	dc 01       	movw	r26, r24
     ff8:	cb 01       	movw	r24, r22
     ffa:	9c 8b       	std	Y+20, r25	; 0x14
     ffc:	8b 8b       	std	Y+19, r24	; 0x13
     ffe:	8b 89       	ldd	r24, Y+19	; 0x13
    1000:	9c 89       	ldd	r25, Y+20	; 0x14
    1002:	98 8b       	std	Y+16, r25	; 0x10
    1004:	8f 87       	std	Y+15, r24	; 0x0f
    1006:	8f 85       	ldd	r24, Y+15	; 0x0f
    1008:	98 89       	ldd	r25, Y+16	; 0x10
    100a:	01 97       	sbiw	r24, 0x01	; 1
    100c:	f1 f7       	brne	.-4      	; 0x100a <SmartHomeLoginPassword+0x21e>
    100e:	98 8b       	std	Y+16, r25	; 0x10
    1010:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(200);
				HLCD_vClearDisplay();
    1012:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Enter password: ");
    1016:	8c e6       	ldi	r24, 0x6C	; 108
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    101e:	78 c0       	rjmp	.+240    	; 0x1110 <SmartHomeLoginPassword+0x324>
			}
			else
			{
				HLCD_vDisplayString("Try Later");
    1020:	85 e9       	ldi	r24, 0x95	; 149
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	aa ef       	ldi	r26, 0xFA	; 250
    102e:	b3 e4       	ldi	r27, 0x43	; 67
    1030:	8b 87       	std	Y+11, r24	; 0x0b
    1032:	9c 87       	std	Y+12, r25	; 0x0c
    1034:	ad 87       	std	Y+13, r26	; 0x0d
    1036:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1038:	6b 85       	ldd	r22, Y+11	; 0x0b
    103a:	7c 85       	ldd	r23, Y+12	; 0x0c
    103c:	8d 85       	ldd	r24, Y+13	; 0x0d
    103e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1040:	20 e0       	ldi	r18, 0x00	; 0
    1042:	30 e8       	ldi	r19, 0x80	; 128
    1044:	4b e3       	ldi	r20, 0x3B	; 59
    1046:	55 e4       	ldi	r21, 0x45	; 69
    1048:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    104c:	dc 01       	movw	r26, r24
    104e:	cb 01       	movw	r24, r22
    1050:	8f 83       	std	Y+7, r24	; 0x07
    1052:	98 87       	std	Y+8, r25	; 0x08
    1054:	a9 87       	std	Y+9, r26	; 0x09
    1056:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1058:	6f 81       	ldd	r22, Y+7	; 0x07
    105a:	78 85       	ldd	r23, Y+8	; 0x08
    105c:	89 85       	ldd	r24, Y+9	; 0x09
    105e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1060:	20 e0       	ldi	r18, 0x00	; 0
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	40 e8       	ldi	r20, 0x80	; 128
    1066:	5f e3       	ldi	r21, 0x3F	; 63
    1068:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    106c:	88 23       	and	r24, r24
    106e:	2c f4       	brge	.+10     	; 0x107a <SmartHomeLoginPassword+0x28e>
		__ticks = 1;
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	9e 83       	std	Y+6, r25	; 0x06
    1076:	8d 83       	std	Y+5, r24	; 0x05
    1078:	3f c0       	rjmp	.+126    	; 0x10f8 <SmartHomeLoginPassword+0x30c>
	else if (__tmp > 65535)
    107a:	6f 81       	ldd	r22, Y+7	; 0x07
    107c:	78 85       	ldd	r23, Y+8	; 0x08
    107e:	89 85       	ldd	r24, Y+9	; 0x09
    1080:	9a 85       	ldd	r25, Y+10	; 0x0a
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	3f ef       	ldi	r19, 0xFF	; 255
    1086:	4f e7       	ldi	r20, 0x7F	; 127
    1088:	57 e4       	ldi	r21, 0x47	; 71
    108a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    108e:	18 16       	cp	r1, r24
    1090:	4c f5       	brge	.+82     	; 0x10e4 <SmartHomeLoginPassword+0x2f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1092:	6b 85       	ldd	r22, Y+11	; 0x0b
    1094:	7c 85       	ldd	r23, Y+12	; 0x0c
    1096:	8d 85       	ldd	r24, Y+13	; 0x0d
    1098:	9e 85       	ldd	r25, Y+14	; 0x0e
    109a:	20 e0       	ldi	r18, 0x00	; 0
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	40 e2       	ldi	r20, 0x20	; 32
    10a0:	51 e4       	ldi	r21, 0x41	; 65
    10a2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10a6:	dc 01       	movw	r26, r24
    10a8:	cb 01       	movw	r24, r22
    10aa:	bc 01       	movw	r22, r24
    10ac:	cd 01       	movw	r24, r26
    10ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	9e 83       	std	Y+6, r25	; 0x06
    10b8:	8d 83       	std	Y+5, r24	; 0x05
    10ba:	0f c0       	rjmp	.+30     	; 0x10da <SmartHomeLoginPassword+0x2ee>
    10bc:	8c e2       	ldi	r24, 0x2C	; 44
    10be:	91 e0       	ldi	r25, 0x01	; 1
    10c0:	9c 83       	std	Y+4, r25	; 0x04
    10c2:	8b 83       	std	Y+3, r24	; 0x03
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
    10c6:	9c 81       	ldd	r25, Y+4	; 0x04
    10c8:	01 97       	sbiw	r24, 0x01	; 1
    10ca:	f1 f7       	brne	.-4      	; 0x10c8 <SmartHomeLoginPassword+0x2dc>
    10cc:	9c 83       	std	Y+4, r25	; 0x04
    10ce:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10d0:	8d 81       	ldd	r24, Y+5	; 0x05
    10d2:	9e 81       	ldd	r25, Y+6	; 0x06
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	9e 83       	std	Y+6, r25	; 0x06
    10d8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10da:	8d 81       	ldd	r24, Y+5	; 0x05
    10dc:	9e 81       	ldd	r25, Y+6	; 0x06
    10de:	00 97       	sbiw	r24, 0x00	; 0
    10e0:	69 f7       	brne	.-38     	; 0x10bc <SmartHomeLoginPassword+0x2d0>
    10e2:	14 c0       	rjmp	.+40     	; 0x110c <SmartHomeLoginPassword+0x320>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10e4:	6f 81       	ldd	r22, Y+7	; 0x07
    10e6:	78 85       	ldd	r23, Y+8	; 0x08
    10e8:	89 85       	ldd	r24, Y+9	; 0x09
    10ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    10ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10f0:	dc 01       	movw	r26, r24
    10f2:	cb 01       	movw	r24, r22
    10f4:	9e 83       	std	Y+6, r25	; 0x06
    10f6:	8d 83       	std	Y+5, r24	; 0x05
    10f8:	8d 81       	ldd	r24, Y+5	; 0x05
    10fa:	9e 81       	ldd	r25, Y+6	; 0x06
    10fc:	9a 83       	std	Y+2, r25	; 0x02
    10fe:	89 83       	std	Y+1, r24	; 0x01
    1100:	89 81       	ldd	r24, Y+1	; 0x01
    1102:	9a 81       	ldd	r25, Y+2	; 0x02
    1104:	01 97       	sbiw	r24, 0x01	; 1
    1106:	f1 f7       	brne	.-4      	; 0x1104 <SmartHomeLoginPassword+0x318>
    1108:	9a 83       	std	Y+2, r25	; 0x02
    110a:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(500);
				HLCD_vClearDisplay();
    110c:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
	HLCD_vDisplayString("Enter password: ");
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);



	for(u8 i=0; i <3; i++)
    1110:	8b a5       	ldd	r24, Y+43	; 0x2b
    1112:	8f 5f       	subi	r24, 0xFF	; 255
    1114:	8b a7       	std	Y+43, r24	; 0x2b
    1116:	8b a5       	ldd	r24, Y+43	; 0x2b
    1118:	83 30       	cpi	r24, 0x03	; 3
    111a:	08 f4       	brcc	.+2      	; 0x111e <SmartHomeLoginPassword+0x332>
    111c:	7b ce       	rjmp	.-778    	; 0xe14 <SmartHomeLoginPassword+0x28>
				HLCD_vClearDisplay();
				// sholud return to any point here
			}
		}
	} // end of FOR (password) loop
}
    111e:	ad 96       	adiw	r28, 0x2d	; 45
    1120:	0f b6       	in	r0, 0x3f	; 63
    1122:	f8 94       	cli
    1124:	de bf       	out	0x3e, r29	; 62
    1126:	0f be       	out	0x3f, r0	; 63
    1128:	cd bf       	out	0x3d, r28	; 61
    112a:	cf 91       	pop	r28
    112c:	df 91       	pop	r29
    112e:	08 95       	ret

00001130 <SmartHomeMenu>:


// ----------------------------------------

void SmartHomeMenu()
{
    1130:	0f 93       	push	r16
    1132:	1f 93       	push	r17
    1134:	df 93       	push	r29
    1136:	cf 93       	push	r28
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
    113c:	cf 5d       	subi	r28, 0xDF	; 223
    113e:	d0 40       	sbci	r29, 0x00	; 0
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	de bf       	out	0x3e, r29	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	cd bf       	out	0x3d, r28	; 61
	// Show Menu
	u8 key = NO_KEY_PRESSED;
    114a:	fe 01       	movw	r30, r28
    114c:	e9 52       	subi	r30, 0x29	; 41
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	8f ef       	ldi	r24, 0xFF	; 255
    1152:	80 83       	st	Z, r24
	HLCD_vClearDisplay();
    1154:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
	HLCD_vDisplayString("1- Light 3- Door");
    1158:	8f e9       	ldi	r24, 0x9F	; 159
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
    1160:	82 e0       	ldi	r24, 0x02	; 2
    1162:	61 e0       	ldi	r22, 0x01	; 1
    1164:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
	HLCD_vDisplayString("2- Timer");
    1168:	80 eb       	ldi	r24, 0xB0	; 176
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1170:	06 c0       	rjmp	.+12     	; 0x117e <SmartHomeMenu+0x4e>


	// waiting to enter an input
	while(key == NO_KEY_PRESSED)
	{
		key = HKEYPAD_u8GetPressedKey();
    1172:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <HKEYPAD_u8GetPressedKey>
    1176:	fe 01       	movw	r30, r28
    1178:	e9 52       	subi	r30, 0x29	; 41
    117a:	ff 4f       	sbci	r31, 0xFF	; 255
    117c:	80 83       	st	Z, r24
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
	HLCD_vDisplayString("2- Timer");


	// waiting to enter an input
	while(key == NO_KEY_PRESSED)
    117e:	fe 01       	movw	r30, r28
    1180:	e9 52       	subi	r30, 0x29	; 41
    1182:	ff 4f       	sbci	r31, 0xFF	; 255
    1184:	80 81       	ld	r24, Z
    1186:	8f 3f       	cpi	r24, 0xFF	; 255
    1188:	a1 f3       	breq	.-24     	; 0x1172 <SmartHomeMenu+0x42>
	{
		key = HKEYPAD_u8GetPressedKey();
	}

	switch(key)
    118a:	fe 01       	movw	r30, r28
    118c:	e9 52       	subi	r30, 0x29	; 41
    118e:	ff 4f       	sbci	r31, 0xFF	; 255
    1190:	80 81       	ld	r24, Z
    1192:	28 2f       	mov	r18, r24
    1194:	30 e0       	ldi	r19, 0x00	; 0
    1196:	c2 52       	subi	r28, 0x22	; 34
    1198:	df 4f       	sbci	r29, 0xFF	; 255
    119a:	39 83       	std	Y+1, r19	; 0x01
    119c:	28 83       	st	Y, r18
    119e:	ce 5d       	subi	r28, 0xDE	; 222
    11a0:	d0 40       	sbci	r29, 0x00	; 0
    11a2:	c2 52       	subi	r28, 0x22	; 34
    11a4:	df 4f       	sbci	r29, 0xFF	; 255
    11a6:	88 81       	ld	r24, Y
    11a8:	99 81       	ldd	r25, Y+1	; 0x01
    11aa:	ce 5d       	subi	r28, 0xDE	; 222
    11ac:	d0 40       	sbci	r29, 0x00	; 0
    11ae:	82 33       	cpi	r24, 0x32	; 50
    11b0:	91 05       	cpc	r25, r1
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <SmartHomeMenu+0x86>
    11b4:	37 c4       	rjmp	.+2158   	; 0x1a24 <SmartHomeMenu+0x8f4>
    11b6:	c2 52       	subi	r28, 0x22	; 34
    11b8:	df 4f       	sbci	r29, 0xFF	; 255
    11ba:	e8 81       	ld	r30, Y
    11bc:	f9 81       	ldd	r31, Y+1	; 0x01
    11be:	ce 5d       	subi	r28, 0xDE	; 222
    11c0:	d0 40       	sbci	r29, 0x00	; 0
    11c2:	e3 33       	cpi	r30, 0x33	; 51
    11c4:	f1 05       	cpc	r31, r1
    11c6:	09 f4       	brne	.+2      	; 0x11ca <SmartHomeMenu+0x9a>
    11c8:	c7 c6       	rjmp	.+3470   	; 0x1f58 <SmartHomeMenu+0xe28>
    11ca:	c2 52       	subi	r28, 0x22	; 34
    11cc:	df 4f       	sbci	r29, 0xFF	; 255
    11ce:	28 81       	ld	r18, Y
    11d0:	39 81       	ldd	r19, Y+1	; 0x01
    11d2:	ce 5d       	subi	r28, 0xDE	; 222
    11d4:	d0 40       	sbci	r29, 0x00	; 0
    11d6:	21 33       	cpi	r18, 0x31	; 49
    11d8:	31 05       	cpc	r19, r1
    11da:	11 f0       	breq	.+4      	; 0x11e0 <SmartHomeMenu+0xb0>
    11dc:	0c 94 fc 13 	jmp	0x27f8	; 0x27f8 <SmartHomeMenu+0x16c8>
	{

	// LED
	case '1':
	{ // to remove error of Declaration after label
		u8 LED_Action = NO_KEY_PRESSED;
    11e0:	fe 01       	movw	r30, r28
    11e2:	ea 52       	subi	r30, 0x2A	; 42
    11e4:	ff 4f       	sbci	r31, 0xFF	; 255
    11e6:	8f ef       	ldi	r24, 0xFF	; 255
    11e8:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
    11ea:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
		HLCD_vDisplayString("1-On 2-OFF");
    11ee:	89 eb       	ldi	r24, 0xB9	; 185
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    11f6:	82 e0       	ldi	r24, 0x02	; 2
    11f8:	61 e0       	ldi	r22, 0x01	; 1
    11fa:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
		HLCD_vDisplayString("3- Back");
    11fe:	84 ec       	ldi	r24, 0xC4	; 196
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1206:	06 c0       	rjmp	.+12     	; 0x1214 <SmartHomeMenu+0xe4>
		while(LED_Action == NO_KEY_PRESSED)
		{
			LED_Action = HKEYPAD_u8GetPressedKey();
    1208:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <HKEYPAD_u8GetPressedKey>
    120c:	fe 01       	movw	r30, r28
    120e:	ea 52       	subi	r30, 0x2A	; 42
    1210:	ff 4f       	sbci	r31, 0xFF	; 255
    1212:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
		HLCD_vDisplayString("1-On 2-OFF");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("3- Back");
		while(LED_Action == NO_KEY_PRESSED)
    1214:	fe 01       	movw	r30, r28
    1216:	ea 52       	subi	r30, 0x2A	; 42
    1218:	ff 4f       	sbci	r31, 0xFF	; 255
    121a:	80 81       	ld	r24, Z
    121c:	8f 3f       	cpi	r24, 0xFF	; 255
    121e:	a1 f3       	breq	.-24     	; 0x1208 <SmartHomeMenu+0xd8>
		{
			LED_Action = HKEYPAD_u8GetPressedKey();
		}

		switch (LED_Action)
    1220:	fe 01       	movw	r30, r28
    1222:	ea 52       	subi	r30, 0x2A	; 42
    1224:	ff 4f       	sbci	r31, 0xFF	; 255
    1226:	80 81       	ld	r24, Z
    1228:	e8 2f       	mov	r30, r24
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	c4 52       	subi	r28, 0x24	; 36
    122e:	df 4f       	sbci	r29, 0xFF	; 255
    1230:	f9 83       	std	Y+1, r31	; 0x01
    1232:	e8 83       	st	Y, r30
    1234:	cc 5d       	subi	r28, 0xDC	; 220
    1236:	d0 40       	sbci	r29, 0x00	; 0
    1238:	c4 52       	subi	r28, 0x24	; 36
    123a:	df 4f       	sbci	r29, 0xFF	; 255
    123c:	28 81       	ld	r18, Y
    123e:	39 81       	ldd	r19, Y+1	; 0x01
    1240:	cc 5d       	subi	r28, 0xDC	; 220
    1242:	d0 40       	sbci	r29, 0x00	; 0
    1244:	22 33       	cpi	r18, 0x32	; 50
    1246:	31 05       	cpc	r19, r1
    1248:	09 f4       	brne	.+2      	; 0x124c <SmartHomeMenu+0x11c>
    124a:	9f c1       	rjmp	.+830    	; 0x158a <SmartHomeMenu+0x45a>
    124c:	c4 52       	subi	r28, 0x24	; 36
    124e:	df 4f       	sbci	r29, 0xFF	; 255
    1250:	88 81       	ld	r24, Y
    1252:	99 81       	ldd	r25, Y+1	; 0x01
    1254:	cc 5d       	subi	r28, 0xDC	; 220
    1256:	d0 40       	sbci	r29, 0x00	; 0
    1258:	83 33       	cpi	r24, 0x33	; 51
    125a:	91 05       	cpc	r25, r1
    125c:	09 f4       	brne	.+2      	; 0x1260 <SmartHomeMenu+0x130>
    125e:	1f c3       	rjmp	.+1598   	; 0x189e <SmartHomeMenu+0x76e>
    1260:	c4 52       	subi	r28, 0x24	; 36
    1262:	df 4f       	sbci	r29, 0xFF	; 255
    1264:	e8 81       	ld	r30, Y
    1266:	f9 81       	ldd	r31, Y+1	; 0x01
    1268:	cc 5d       	subi	r28, 0xDC	; 220
    126a:	d0 40       	sbci	r29, 0x00	; 0
    126c:	e1 33       	cpi	r30, 0x31	; 49
    126e:	f1 05       	cpc	r31, r1
    1270:	09 f0       	breq	.+2      	; 0x1274 <SmartHomeMenu+0x144>
    1272:	d1 c3       	rjmp	.+1954   	; 0x1a16 <SmartHomeMenu+0x8e6>
		{
		case '1':
			if(LED_Status == LED_OFF)
    1274:	80 91 c7 02 	lds	r24, 0x02C7
    1278:	88 23       	and	r24, r24
    127a:	09 f0       	breq	.+2      	; 0x127e <SmartHomeMenu+0x14e>
    127c:	c9 c0       	rjmp	.+402    	; 0x1410 <SmartHomeMenu+0x2e0>
			{
				HLCD_vClearDisplay();
    127e:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Lights ON");
    1282:	8c ec       	ldi	r24, 0xCC	; 204
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
				MDIO_vSetPinDir(LED_PORT,LED_PIN,DIO_OUTPUT);
    128a:	82 e0       	ldi	r24, 0x02	; 2
    128c:	63 e0       	ldi	r22, 0x03	; 3
    128e:	41 e0       	ldi	r20, 0x01	; 1
    1290:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
				MDIO_vSetPinVal(LED_PORT,LED_PIN,DIO_HIGH);
    1294:	82 e0       	ldi	r24, 0x02	; 2
    1296:	63 e0       	ldi	r22, 0x03	; 3
    1298:	41 e0       	ldi	r20, 0x01	; 1
    129a:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    129e:	fe 01       	movw	r30, r28
    12a0:	e1 53       	subi	r30, 0x31	; 49
    12a2:	ff 4f       	sbci	r31, 0xFF	; 255
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	aa ef       	ldi	r26, 0xFA	; 250
    12aa:	b3 e4       	ldi	r27, 0x43	; 67
    12ac:	80 83       	st	Z, r24
    12ae:	91 83       	std	Z+1, r25	; 0x01
    12b0:	a2 83       	std	Z+2, r26	; 0x02
    12b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b4:	8e 01       	movw	r16, r28
    12b6:	05 53       	subi	r16, 0x35	; 53
    12b8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ba:	fe 01       	movw	r30, r28
    12bc:	e1 53       	subi	r30, 0x31	; 49
    12be:	ff 4f       	sbci	r31, 0xFF	; 255
    12c0:	60 81       	ld	r22, Z
    12c2:	71 81       	ldd	r23, Z+1	; 0x01
    12c4:	82 81       	ldd	r24, Z+2	; 0x02
    12c6:	93 81       	ldd	r25, Z+3	; 0x03
    12c8:	20 e0       	ldi	r18, 0x00	; 0
    12ca:	30 e8       	ldi	r19, 0x80	; 128
    12cc:	4b e3       	ldi	r20, 0x3B	; 59
    12ce:	55 e4       	ldi	r21, 0x45	; 69
    12d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12d4:	dc 01       	movw	r26, r24
    12d6:	cb 01       	movw	r24, r22
    12d8:	f8 01       	movw	r30, r16
    12da:	80 83       	st	Z, r24
    12dc:	91 83       	std	Z+1, r25	; 0x01
    12de:	a2 83       	std	Z+2, r26	; 0x02
    12e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12e2:	fe 01       	movw	r30, r28
    12e4:	e5 53       	subi	r30, 0x35	; 53
    12e6:	ff 4f       	sbci	r31, 0xFF	; 255
    12e8:	60 81       	ld	r22, Z
    12ea:	71 81       	ldd	r23, Z+1	; 0x01
    12ec:	82 81       	ldd	r24, Z+2	; 0x02
    12ee:	93 81       	ldd	r25, Z+3	; 0x03
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 e8       	ldi	r20, 0x80	; 128
    12f6:	5f e3       	ldi	r21, 0x3F	; 63
    12f8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    12fc:	88 23       	and	r24, r24
    12fe:	44 f4       	brge	.+16     	; 0x1310 <SmartHomeMenu+0x1e0>
		__ticks = 1;
    1300:	fe 01       	movw	r30, r28
    1302:	e7 53       	subi	r30, 0x37	; 55
    1304:	ff 4f       	sbci	r31, 0xFF	; 255
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	91 83       	std	Z+1, r25	; 0x01
    130c:	80 83       	st	Z, r24
    130e:	64 c0       	rjmp	.+200    	; 0x13d8 <SmartHomeMenu+0x2a8>
	else if (__tmp > 65535)
    1310:	fe 01       	movw	r30, r28
    1312:	e5 53       	subi	r30, 0x35	; 53
    1314:	ff 4f       	sbci	r31, 0xFF	; 255
    1316:	60 81       	ld	r22, Z
    1318:	71 81       	ldd	r23, Z+1	; 0x01
    131a:	82 81       	ldd	r24, Z+2	; 0x02
    131c:	93 81       	ldd	r25, Z+3	; 0x03
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	3f ef       	ldi	r19, 0xFF	; 255
    1322:	4f e7       	ldi	r20, 0x7F	; 127
    1324:	57 e4       	ldi	r21, 0x47	; 71
    1326:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    132a:	18 16       	cp	r1, r24
    132c:	0c f0       	brlt	.+2      	; 0x1330 <SmartHomeMenu+0x200>
    132e:	43 c0       	rjmp	.+134    	; 0x13b6 <SmartHomeMenu+0x286>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1330:	fe 01       	movw	r30, r28
    1332:	e1 53       	subi	r30, 0x31	; 49
    1334:	ff 4f       	sbci	r31, 0xFF	; 255
    1336:	60 81       	ld	r22, Z
    1338:	71 81       	ldd	r23, Z+1	; 0x01
    133a:	82 81       	ldd	r24, Z+2	; 0x02
    133c:	93 81       	ldd	r25, Z+3	; 0x03
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	40 e2       	ldi	r20, 0x20	; 32
    1344:	51 e4       	ldi	r21, 0x41	; 65
    1346:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    134a:	dc 01       	movw	r26, r24
    134c:	cb 01       	movw	r24, r22
    134e:	8e 01       	movw	r16, r28
    1350:	07 53       	subi	r16, 0x37	; 55
    1352:	1f 4f       	sbci	r17, 0xFF	; 255
    1354:	bc 01       	movw	r22, r24
    1356:	cd 01       	movw	r24, r26
    1358:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
    1360:	f8 01       	movw	r30, r16
    1362:	91 83       	std	Z+1, r25	; 0x01
    1364:	80 83       	st	Z, r24
    1366:	1f c0       	rjmp	.+62     	; 0x13a6 <SmartHomeMenu+0x276>
    1368:	fe 01       	movw	r30, r28
    136a:	e9 53       	subi	r30, 0x39	; 57
    136c:	ff 4f       	sbci	r31, 0xFF	; 255
    136e:	8c e2       	ldi	r24, 0x2C	; 44
    1370:	91 e0       	ldi	r25, 0x01	; 1
    1372:	91 83       	std	Z+1, r25	; 0x01
    1374:	80 83       	st	Z, r24
    1376:	fe 01       	movw	r30, r28
    1378:	e9 53       	subi	r30, 0x39	; 57
    137a:	ff 4f       	sbci	r31, 0xFF	; 255
    137c:	80 81       	ld	r24, Z
    137e:	91 81       	ldd	r25, Z+1	; 0x01
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	f1 f7       	brne	.-4      	; 0x1380 <SmartHomeMenu+0x250>
    1384:	fe 01       	movw	r30, r28
    1386:	e9 53       	subi	r30, 0x39	; 57
    1388:	ff 4f       	sbci	r31, 0xFF	; 255
    138a:	91 83       	std	Z+1, r25	; 0x01
    138c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    138e:	de 01       	movw	r26, r28
    1390:	a7 53       	subi	r26, 0x37	; 55
    1392:	bf 4f       	sbci	r27, 0xFF	; 255
    1394:	fe 01       	movw	r30, r28
    1396:	e7 53       	subi	r30, 0x37	; 55
    1398:	ff 4f       	sbci	r31, 0xFF	; 255
    139a:	80 81       	ld	r24, Z
    139c:	91 81       	ldd	r25, Z+1	; 0x01
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	11 96       	adiw	r26, 0x01	; 1
    13a2:	9c 93       	st	X, r25
    13a4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13a6:	fe 01       	movw	r30, r28
    13a8:	e7 53       	subi	r30, 0x37	; 55
    13aa:	ff 4f       	sbci	r31, 0xFF	; 255
    13ac:	80 81       	ld	r24, Z
    13ae:	91 81       	ldd	r25, Z+1	; 0x01
    13b0:	00 97       	sbiw	r24, 0x00	; 0
    13b2:	d1 f6       	brne	.-76     	; 0x1368 <SmartHomeMenu+0x238>
    13b4:	28 c0       	rjmp	.+80     	; 0x1406 <SmartHomeMenu+0x2d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b6:	8e 01       	movw	r16, r28
    13b8:	07 53       	subi	r16, 0x37	; 55
    13ba:	1f 4f       	sbci	r17, 0xFF	; 255
    13bc:	fe 01       	movw	r30, r28
    13be:	e5 53       	subi	r30, 0x35	; 53
    13c0:	ff 4f       	sbci	r31, 0xFF	; 255
    13c2:	60 81       	ld	r22, Z
    13c4:	71 81       	ldd	r23, Z+1	; 0x01
    13c6:	82 81       	ldd	r24, Z+2	; 0x02
    13c8:	93 81       	ldd	r25, Z+3	; 0x03
    13ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13ce:	dc 01       	movw	r26, r24
    13d0:	cb 01       	movw	r24, r22
    13d2:	f8 01       	movw	r30, r16
    13d4:	91 83       	std	Z+1, r25	; 0x01
    13d6:	80 83       	st	Z, r24
    13d8:	de 01       	movw	r26, r28
    13da:	ab 53       	subi	r26, 0x3B	; 59
    13dc:	bf 4f       	sbci	r27, 0xFF	; 255
    13de:	fe 01       	movw	r30, r28
    13e0:	e7 53       	subi	r30, 0x37	; 55
    13e2:	ff 4f       	sbci	r31, 0xFF	; 255
    13e4:	80 81       	ld	r24, Z
    13e6:	91 81       	ldd	r25, Z+1	; 0x01
    13e8:	11 96       	adiw	r26, 0x01	; 1
    13ea:	9c 93       	st	X, r25
    13ec:	8e 93       	st	-X, r24
    13ee:	fe 01       	movw	r30, r28
    13f0:	eb 53       	subi	r30, 0x3B	; 59
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	80 81       	ld	r24, Z
    13f6:	91 81       	ldd	r25, Z+1	; 0x01
    13f8:	01 97       	sbiw	r24, 0x01	; 1
    13fa:	f1 f7       	brne	.-4      	; 0x13f8 <SmartHomeMenu+0x2c8>
    13fc:	fe 01       	movw	r30, r28
    13fe:	eb 53       	subi	r30, 0x3B	; 59
    1400:	ff 4f       	sbci	r31, 0xFF	; 255
    1402:	91 83       	std	Z+1, r25	; 0x01
    1404:	80 83       	st	Z, r24
				_delay_ms(500);
				LED_Status = LED_ON;
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	80 93 c7 02 	sts	0x02C7, r24
    140c:	0c 94 fc 13 	jmp	0x27f8	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    1410:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already On");
    1414:	86 ed       	ldi	r24, 0xD6	; 214
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    141c:	fe 01       	movw	r30, r28
    141e:	ef 53       	subi	r30, 0x3F	; 63
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
    1422:	80 e0       	ldi	r24, 0x00	; 0
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	aa e7       	ldi	r26, 0x7A	; 122
    1428:	b4 e4       	ldi	r27, 0x44	; 68
    142a:	80 83       	st	Z, r24
    142c:	91 83       	std	Z+1, r25	; 0x01
    142e:	a2 83       	std	Z+2, r26	; 0x02
    1430:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1432:	8e 01       	movw	r16, r28
    1434:	03 54       	subi	r16, 0x43	; 67
    1436:	1f 4f       	sbci	r17, 0xFF	; 255
    1438:	fe 01       	movw	r30, r28
    143a:	ef 53       	subi	r30, 0x3F	; 63
    143c:	ff 4f       	sbci	r31, 0xFF	; 255
    143e:	60 81       	ld	r22, Z
    1440:	71 81       	ldd	r23, Z+1	; 0x01
    1442:	82 81       	ldd	r24, Z+2	; 0x02
    1444:	93 81       	ldd	r25, Z+3	; 0x03
    1446:	20 e0       	ldi	r18, 0x00	; 0
    1448:	30 e8       	ldi	r19, 0x80	; 128
    144a:	4b e3       	ldi	r20, 0x3B	; 59
    144c:	55 e4       	ldi	r21, 0x45	; 69
    144e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1452:	dc 01       	movw	r26, r24
    1454:	cb 01       	movw	r24, r22
    1456:	f8 01       	movw	r30, r16
    1458:	80 83       	st	Z, r24
    145a:	91 83       	std	Z+1, r25	; 0x01
    145c:	a2 83       	std	Z+2, r26	; 0x02
    145e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1460:	fe 01       	movw	r30, r28
    1462:	e3 54       	subi	r30, 0x43	; 67
    1464:	ff 4f       	sbci	r31, 0xFF	; 255
    1466:	60 81       	ld	r22, Z
    1468:	71 81       	ldd	r23, Z+1	; 0x01
    146a:	82 81       	ldd	r24, Z+2	; 0x02
    146c:	93 81       	ldd	r25, Z+3	; 0x03
    146e:	20 e0       	ldi	r18, 0x00	; 0
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	40 e8       	ldi	r20, 0x80	; 128
    1474:	5f e3       	ldi	r21, 0x3F	; 63
    1476:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    147a:	88 23       	and	r24, r24
    147c:	44 f4       	brge	.+16     	; 0x148e <SmartHomeMenu+0x35e>
		__ticks = 1;
    147e:	fe 01       	movw	r30, r28
    1480:	e5 54       	subi	r30, 0x45	; 69
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	91 83       	std	Z+1, r25	; 0x01
    148a:	80 83       	st	Z, r24
    148c:	64 c0       	rjmp	.+200    	; 0x1556 <SmartHomeMenu+0x426>
	else if (__tmp > 65535)
    148e:	fe 01       	movw	r30, r28
    1490:	e3 54       	subi	r30, 0x43	; 67
    1492:	ff 4f       	sbci	r31, 0xFF	; 255
    1494:	60 81       	ld	r22, Z
    1496:	71 81       	ldd	r23, Z+1	; 0x01
    1498:	82 81       	ldd	r24, Z+2	; 0x02
    149a:	93 81       	ldd	r25, Z+3	; 0x03
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	3f ef       	ldi	r19, 0xFF	; 255
    14a0:	4f e7       	ldi	r20, 0x7F	; 127
    14a2:	57 e4       	ldi	r21, 0x47	; 71
    14a4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14a8:	18 16       	cp	r1, r24
    14aa:	0c f0       	brlt	.+2      	; 0x14ae <SmartHomeMenu+0x37e>
    14ac:	43 c0       	rjmp	.+134    	; 0x1534 <SmartHomeMenu+0x404>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14ae:	fe 01       	movw	r30, r28
    14b0:	ef 53       	subi	r30, 0x3F	; 63
    14b2:	ff 4f       	sbci	r31, 0xFF	; 255
    14b4:	60 81       	ld	r22, Z
    14b6:	71 81       	ldd	r23, Z+1	; 0x01
    14b8:	82 81       	ldd	r24, Z+2	; 0x02
    14ba:	93 81       	ldd	r25, Z+3	; 0x03
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	40 e2       	ldi	r20, 0x20	; 32
    14c2:	51 e4       	ldi	r21, 0x41	; 65
    14c4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14c8:	dc 01       	movw	r26, r24
    14ca:	cb 01       	movw	r24, r22
    14cc:	8e 01       	movw	r16, r28
    14ce:	05 54       	subi	r16, 0x45	; 69
    14d0:	1f 4f       	sbci	r17, 0xFF	; 255
    14d2:	bc 01       	movw	r22, r24
    14d4:	cd 01       	movw	r24, r26
    14d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14da:	dc 01       	movw	r26, r24
    14dc:	cb 01       	movw	r24, r22
    14de:	f8 01       	movw	r30, r16
    14e0:	91 83       	std	Z+1, r25	; 0x01
    14e2:	80 83       	st	Z, r24
    14e4:	1f c0       	rjmp	.+62     	; 0x1524 <SmartHomeMenu+0x3f4>
    14e6:	fe 01       	movw	r30, r28
    14e8:	e7 54       	subi	r30, 0x47	; 71
    14ea:	ff 4f       	sbci	r31, 0xFF	; 255
    14ec:	8c e2       	ldi	r24, 0x2C	; 44
    14ee:	91 e0       	ldi	r25, 0x01	; 1
    14f0:	91 83       	std	Z+1, r25	; 0x01
    14f2:	80 83       	st	Z, r24
    14f4:	fe 01       	movw	r30, r28
    14f6:	e7 54       	subi	r30, 0x47	; 71
    14f8:	ff 4f       	sbci	r31, 0xFF	; 255
    14fa:	80 81       	ld	r24, Z
    14fc:	91 81       	ldd	r25, Z+1	; 0x01
    14fe:	01 97       	sbiw	r24, 0x01	; 1
    1500:	f1 f7       	brne	.-4      	; 0x14fe <SmartHomeMenu+0x3ce>
    1502:	fe 01       	movw	r30, r28
    1504:	e7 54       	subi	r30, 0x47	; 71
    1506:	ff 4f       	sbci	r31, 0xFF	; 255
    1508:	91 83       	std	Z+1, r25	; 0x01
    150a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    150c:	de 01       	movw	r26, r28
    150e:	a5 54       	subi	r26, 0x45	; 69
    1510:	bf 4f       	sbci	r27, 0xFF	; 255
    1512:	fe 01       	movw	r30, r28
    1514:	e5 54       	subi	r30, 0x45	; 69
    1516:	ff 4f       	sbci	r31, 0xFF	; 255
    1518:	80 81       	ld	r24, Z
    151a:	91 81       	ldd	r25, Z+1	; 0x01
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	11 96       	adiw	r26, 0x01	; 1
    1520:	9c 93       	st	X, r25
    1522:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1524:	fe 01       	movw	r30, r28
    1526:	e5 54       	subi	r30, 0x45	; 69
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	80 81       	ld	r24, Z
    152c:	91 81       	ldd	r25, Z+1	; 0x01
    152e:	00 97       	sbiw	r24, 0x00	; 0
    1530:	d1 f6       	brne	.-76     	; 0x14e6 <SmartHomeMenu+0x3b6>
    1532:	27 c0       	rjmp	.+78     	; 0x1582 <SmartHomeMenu+0x452>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1534:	8e 01       	movw	r16, r28
    1536:	05 54       	subi	r16, 0x45	; 69
    1538:	1f 4f       	sbci	r17, 0xFF	; 255
    153a:	fe 01       	movw	r30, r28
    153c:	e3 54       	subi	r30, 0x43	; 67
    153e:	ff 4f       	sbci	r31, 0xFF	; 255
    1540:	60 81       	ld	r22, Z
    1542:	71 81       	ldd	r23, Z+1	; 0x01
    1544:	82 81       	ldd	r24, Z+2	; 0x02
    1546:	93 81       	ldd	r25, Z+3	; 0x03
    1548:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	f8 01       	movw	r30, r16
    1552:	91 83       	std	Z+1, r25	; 0x01
    1554:	80 83       	st	Z, r24
    1556:	de 01       	movw	r26, r28
    1558:	a9 54       	subi	r26, 0x49	; 73
    155a:	bf 4f       	sbci	r27, 0xFF	; 255
    155c:	fe 01       	movw	r30, r28
    155e:	e5 54       	subi	r30, 0x45	; 69
    1560:	ff 4f       	sbci	r31, 0xFF	; 255
    1562:	80 81       	ld	r24, Z
    1564:	91 81       	ldd	r25, Z+1	; 0x01
    1566:	8d 93       	st	X+, r24
    1568:	9c 93       	st	X, r25
    156a:	fe 01       	movw	r30, r28
    156c:	e9 54       	subi	r30, 0x49	; 73
    156e:	ff 4f       	sbci	r31, 0xFF	; 255
    1570:	80 81       	ld	r24, Z
    1572:	91 81       	ldd	r25, Z+1	; 0x01
    1574:	01 97       	sbiw	r24, 0x01	; 1
    1576:	f1 f7       	brne	.-4      	; 0x1574 <SmartHomeMenu+0x444>
    1578:	fe 01       	movw	r30, r28
    157a:	e9 54       	subi	r30, 0x49	; 73
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	91 83       	std	Z+1, r25	; 0x01
    1580:	80 83       	st	Z, r24
				_delay_ms(1000);
				HLCD_vClearDisplay();
    1582:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    1586:	0c 94 fc 13 	jmp	0x27f8	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			break;
		case '2':
			if(LED_Status ==  LED_ON)
    158a:	80 91 c7 02 	lds	r24, 0x02C7
    158e:	81 30       	cpi	r24, 0x01	; 1
    1590:	09 f0       	breq	.+2      	; 0x1594 <SmartHomeMenu+0x464>
    1592:	c8 c0       	rjmp	.+400    	; 0x1724 <SmartHomeMenu+0x5f4>
			{
				HLCD_vClearDisplay();
    1594:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Lights OFF");
    1598:	81 ee       	ldi	r24, 0xE1	; 225
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
				MDIO_vSetPinDir(LED_PORT,LED_PIN,DIO_OUTPUT);
    15a0:	82 e0       	ldi	r24, 0x02	; 2
    15a2:	63 e0       	ldi	r22, 0x03	; 3
    15a4:	41 e0       	ldi	r20, 0x01	; 1
    15a6:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
				MDIO_vSetPinVal(LED_PORT,LED_PIN,DIO_LOW);
    15aa:	82 e0       	ldi	r24, 0x02	; 2
    15ac:	63 e0       	ldi	r22, 0x03	; 3
    15ae:	40 e0       	ldi	r20, 0x00	; 0
    15b0:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    15b4:	fe 01       	movw	r30, r28
    15b6:	ed 54       	subi	r30, 0x4D	; 77
    15b8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	aa ef       	ldi	r26, 0xFA	; 250
    15c0:	b3 e4       	ldi	r27, 0x43	; 67
    15c2:	80 83       	st	Z, r24
    15c4:	91 83       	std	Z+1, r25	; 0x01
    15c6:	a2 83       	std	Z+2, r26	; 0x02
    15c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15ca:	8e 01       	movw	r16, r28
    15cc:	01 55       	subi	r16, 0x51	; 81
    15ce:	1f 4f       	sbci	r17, 0xFF	; 255
    15d0:	fe 01       	movw	r30, r28
    15d2:	ed 54       	subi	r30, 0x4D	; 77
    15d4:	ff 4f       	sbci	r31, 0xFF	; 255
    15d6:	60 81       	ld	r22, Z
    15d8:	71 81       	ldd	r23, Z+1	; 0x01
    15da:	82 81       	ldd	r24, Z+2	; 0x02
    15dc:	93 81       	ldd	r25, Z+3	; 0x03
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	30 e8       	ldi	r19, 0x80	; 128
    15e2:	4b e3       	ldi	r20, 0x3B	; 59
    15e4:	55 e4       	ldi	r21, 0x45	; 69
    15e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15ea:	dc 01       	movw	r26, r24
    15ec:	cb 01       	movw	r24, r22
    15ee:	f8 01       	movw	r30, r16
    15f0:	80 83       	st	Z, r24
    15f2:	91 83       	std	Z+1, r25	; 0x01
    15f4:	a2 83       	std	Z+2, r26	; 0x02
    15f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15f8:	fe 01       	movw	r30, r28
    15fa:	e1 55       	subi	r30, 0x51	; 81
    15fc:	ff 4f       	sbci	r31, 0xFF	; 255
    15fe:	60 81       	ld	r22, Z
    1600:	71 81       	ldd	r23, Z+1	; 0x01
    1602:	82 81       	ldd	r24, Z+2	; 0x02
    1604:	93 81       	ldd	r25, Z+3	; 0x03
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	40 e8       	ldi	r20, 0x80	; 128
    160c:	5f e3       	ldi	r21, 0x3F	; 63
    160e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1612:	88 23       	and	r24, r24
    1614:	44 f4       	brge	.+16     	; 0x1626 <SmartHomeMenu+0x4f6>
		__ticks = 1;
    1616:	fe 01       	movw	r30, r28
    1618:	e3 55       	subi	r30, 0x53	; 83
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	91 83       	std	Z+1, r25	; 0x01
    1622:	80 83       	st	Z, r24
    1624:	64 c0       	rjmp	.+200    	; 0x16ee <SmartHomeMenu+0x5be>
	else if (__tmp > 65535)
    1626:	fe 01       	movw	r30, r28
    1628:	e1 55       	subi	r30, 0x51	; 81
    162a:	ff 4f       	sbci	r31, 0xFF	; 255
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	82 81       	ldd	r24, Z+2	; 0x02
    1632:	93 81       	ldd	r25, Z+3	; 0x03
    1634:	20 e0       	ldi	r18, 0x00	; 0
    1636:	3f ef       	ldi	r19, 0xFF	; 255
    1638:	4f e7       	ldi	r20, 0x7F	; 127
    163a:	57 e4       	ldi	r21, 0x47	; 71
    163c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1640:	18 16       	cp	r1, r24
    1642:	0c f0       	brlt	.+2      	; 0x1646 <SmartHomeMenu+0x516>
    1644:	43 c0       	rjmp	.+134    	; 0x16cc <SmartHomeMenu+0x59c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1646:	fe 01       	movw	r30, r28
    1648:	ed 54       	subi	r30, 0x4D	; 77
    164a:	ff 4f       	sbci	r31, 0xFF	; 255
    164c:	60 81       	ld	r22, Z
    164e:	71 81       	ldd	r23, Z+1	; 0x01
    1650:	82 81       	ldd	r24, Z+2	; 0x02
    1652:	93 81       	ldd	r25, Z+3	; 0x03
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	40 e2       	ldi	r20, 0x20	; 32
    165a:	51 e4       	ldi	r21, 0x41	; 65
    165c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1660:	dc 01       	movw	r26, r24
    1662:	cb 01       	movw	r24, r22
    1664:	8e 01       	movw	r16, r28
    1666:	03 55       	subi	r16, 0x53	; 83
    1668:	1f 4f       	sbci	r17, 0xFF	; 255
    166a:	bc 01       	movw	r22, r24
    166c:	cd 01       	movw	r24, r26
    166e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1672:	dc 01       	movw	r26, r24
    1674:	cb 01       	movw	r24, r22
    1676:	f8 01       	movw	r30, r16
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	80 83       	st	Z, r24
    167c:	1f c0       	rjmp	.+62     	; 0x16bc <SmartHomeMenu+0x58c>
    167e:	fe 01       	movw	r30, r28
    1680:	e5 55       	subi	r30, 0x55	; 85
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	8c e2       	ldi	r24, 0x2C	; 44
    1686:	91 e0       	ldi	r25, 0x01	; 1
    1688:	91 83       	std	Z+1, r25	; 0x01
    168a:	80 83       	st	Z, r24
    168c:	fe 01       	movw	r30, r28
    168e:	e5 55       	subi	r30, 0x55	; 85
    1690:	ff 4f       	sbci	r31, 0xFF	; 255
    1692:	80 81       	ld	r24, Z
    1694:	91 81       	ldd	r25, Z+1	; 0x01
    1696:	01 97       	sbiw	r24, 0x01	; 1
    1698:	f1 f7       	brne	.-4      	; 0x1696 <SmartHomeMenu+0x566>
    169a:	fe 01       	movw	r30, r28
    169c:	e5 55       	subi	r30, 0x55	; 85
    169e:	ff 4f       	sbci	r31, 0xFF	; 255
    16a0:	91 83       	std	Z+1, r25	; 0x01
    16a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16a4:	de 01       	movw	r26, r28
    16a6:	a3 55       	subi	r26, 0x53	; 83
    16a8:	bf 4f       	sbci	r27, 0xFF	; 255
    16aa:	fe 01       	movw	r30, r28
    16ac:	e3 55       	subi	r30, 0x53	; 83
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	80 81       	ld	r24, Z
    16b2:	91 81       	ldd	r25, Z+1	; 0x01
    16b4:	01 97       	sbiw	r24, 0x01	; 1
    16b6:	11 96       	adiw	r26, 0x01	; 1
    16b8:	9c 93       	st	X, r25
    16ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16bc:	fe 01       	movw	r30, r28
    16be:	e3 55       	subi	r30, 0x53	; 83
    16c0:	ff 4f       	sbci	r31, 0xFF	; 255
    16c2:	80 81       	ld	r24, Z
    16c4:	91 81       	ldd	r25, Z+1	; 0x01
    16c6:	00 97       	sbiw	r24, 0x00	; 0
    16c8:	d1 f6       	brne	.-76     	; 0x167e <SmartHomeMenu+0x54e>
    16ca:	28 c0       	rjmp	.+80     	; 0x171c <SmartHomeMenu+0x5ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16cc:	8e 01       	movw	r16, r28
    16ce:	03 55       	subi	r16, 0x53	; 83
    16d0:	1f 4f       	sbci	r17, 0xFF	; 255
    16d2:	fe 01       	movw	r30, r28
    16d4:	e1 55       	subi	r30, 0x51	; 81
    16d6:	ff 4f       	sbci	r31, 0xFF	; 255
    16d8:	60 81       	ld	r22, Z
    16da:	71 81       	ldd	r23, Z+1	; 0x01
    16dc:	82 81       	ldd	r24, Z+2	; 0x02
    16de:	93 81       	ldd	r25, Z+3	; 0x03
    16e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	f8 01       	movw	r30, r16
    16ea:	91 83       	std	Z+1, r25	; 0x01
    16ec:	80 83       	st	Z, r24
    16ee:	de 01       	movw	r26, r28
    16f0:	a7 55       	subi	r26, 0x57	; 87
    16f2:	bf 4f       	sbci	r27, 0xFF	; 255
    16f4:	fe 01       	movw	r30, r28
    16f6:	e3 55       	subi	r30, 0x53	; 83
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	80 81       	ld	r24, Z
    16fc:	91 81       	ldd	r25, Z+1	; 0x01
    16fe:	11 96       	adiw	r26, 0x01	; 1
    1700:	9c 93       	st	X, r25
    1702:	8e 93       	st	-X, r24
    1704:	fe 01       	movw	r30, r28
    1706:	e7 55       	subi	r30, 0x57	; 87
    1708:	ff 4f       	sbci	r31, 0xFF	; 255
    170a:	80 81       	ld	r24, Z
    170c:	91 81       	ldd	r25, Z+1	; 0x01
    170e:	01 97       	sbiw	r24, 0x01	; 1
    1710:	f1 f7       	brne	.-4      	; 0x170e <SmartHomeMenu+0x5de>
    1712:	fe 01       	movw	r30, r28
    1714:	e7 55       	subi	r30, 0x57	; 87
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	91 83       	std	Z+1, r25	; 0x01
    171a:	80 83       	st	Z, r24
				_delay_ms(500);
				LED_Status = LED_OFF;
    171c:	10 92 c7 02 	sts	0x02C7, r1
    1720:	0c 94 fc 13 	jmp	0x27f8	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    1724:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Off");
    1728:	8c ee       	ldi	r24, 0xEC	; 236
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1730:	fe 01       	movw	r30, r28
    1732:	eb 55       	subi	r30, 0x5B	; 91
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	80 e0       	ldi	r24, 0x00	; 0
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	aa e7       	ldi	r26, 0x7A	; 122
    173c:	b4 e4       	ldi	r27, 0x44	; 68
    173e:	80 83       	st	Z, r24
    1740:	91 83       	std	Z+1, r25	; 0x01
    1742:	a2 83       	std	Z+2, r26	; 0x02
    1744:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1746:	8e 01       	movw	r16, r28
    1748:	0f 55       	subi	r16, 0x5F	; 95
    174a:	1f 4f       	sbci	r17, 0xFF	; 255
    174c:	fe 01       	movw	r30, r28
    174e:	eb 55       	subi	r30, 0x5B	; 91
    1750:	ff 4f       	sbci	r31, 0xFF	; 255
    1752:	60 81       	ld	r22, Z
    1754:	71 81       	ldd	r23, Z+1	; 0x01
    1756:	82 81       	ldd	r24, Z+2	; 0x02
    1758:	93 81       	ldd	r25, Z+3	; 0x03
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e8       	ldi	r19, 0x80	; 128
    175e:	4b e3       	ldi	r20, 0x3B	; 59
    1760:	55 e4       	ldi	r21, 0x45	; 69
    1762:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1766:	dc 01       	movw	r26, r24
    1768:	cb 01       	movw	r24, r22
    176a:	f8 01       	movw	r30, r16
    176c:	80 83       	st	Z, r24
    176e:	91 83       	std	Z+1, r25	; 0x01
    1770:	a2 83       	std	Z+2, r26	; 0x02
    1772:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1774:	fe 01       	movw	r30, r28
    1776:	ef 55       	subi	r30, 0x5F	; 95
    1778:	ff 4f       	sbci	r31, 0xFF	; 255
    177a:	60 81       	ld	r22, Z
    177c:	71 81       	ldd	r23, Z+1	; 0x01
    177e:	82 81       	ldd	r24, Z+2	; 0x02
    1780:	93 81       	ldd	r25, Z+3	; 0x03
    1782:	20 e0       	ldi	r18, 0x00	; 0
    1784:	30 e0       	ldi	r19, 0x00	; 0
    1786:	40 e8       	ldi	r20, 0x80	; 128
    1788:	5f e3       	ldi	r21, 0x3F	; 63
    178a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    178e:	88 23       	and	r24, r24
    1790:	44 f4       	brge	.+16     	; 0x17a2 <SmartHomeMenu+0x672>
		__ticks = 1;
    1792:	fe 01       	movw	r30, r28
    1794:	e1 56       	subi	r30, 0x61	; 97
    1796:	ff 4f       	sbci	r31, 0xFF	; 255
    1798:	81 e0       	ldi	r24, 0x01	; 1
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	91 83       	std	Z+1, r25	; 0x01
    179e:	80 83       	st	Z, r24
    17a0:	64 c0       	rjmp	.+200    	; 0x186a <SmartHomeMenu+0x73a>
	else if (__tmp > 65535)
    17a2:	fe 01       	movw	r30, r28
    17a4:	ef 55       	subi	r30, 0x5F	; 95
    17a6:	ff 4f       	sbci	r31, 0xFF	; 255
    17a8:	60 81       	ld	r22, Z
    17aa:	71 81       	ldd	r23, Z+1	; 0x01
    17ac:	82 81       	ldd	r24, Z+2	; 0x02
    17ae:	93 81       	ldd	r25, Z+3	; 0x03
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	3f ef       	ldi	r19, 0xFF	; 255
    17b4:	4f e7       	ldi	r20, 0x7F	; 127
    17b6:	57 e4       	ldi	r21, 0x47	; 71
    17b8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    17bc:	18 16       	cp	r1, r24
    17be:	0c f0       	brlt	.+2      	; 0x17c2 <SmartHomeMenu+0x692>
    17c0:	43 c0       	rjmp	.+134    	; 0x1848 <SmartHomeMenu+0x718>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17c2:	fe 01       	movw	r30, r28
    17c4:	eb 55       	subi	r30, 0x5B	; 91
    17c6:	ff 4f       	sbci	r31, 0xFF	; 255
    17c8:	60 81       	ld	r22, Z
    17ca:	71 81       	ldd	r23, Z+1	; 0x01
    17cc:	82 81       	ldd	r24, Z+2	; 0x02
    17ce:	93 81       	ldd	r25, Z+3	; 0x03
    17d0:	20 e0       	ldi	r18, 0x00	; 0
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	40 e2       	ldi	r20, 0x20	; 32
    17d6:	51 e4       	ldi	r21, 0x41	; 65
    17d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17dc:	dc 01       	movw	r26, r24
    17de:	cb 01       	movw	r24, r22
    17e0:	8e 01       	movw	r16, r28
    17e2:	01 56       	subi	r16, 0x61	; 97
    17e4:	1f 4f       	sbci	r17, 0xFF	; 255
    17e6:	bc 01       	movw	r22, r24
    17e8:	cd 01       	movw	r24, r26
    17ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	f8 01       	movw	r30, r16
    17f4:	91 83       	std	Z+1, r25	; 0x01
    17f6:	80 83       	st	Z, r24
    17f8:	1f c0       	rjmp	.+62     	; 0x1838 <SmartHomeMenu+0x708>
    17fa:	fe 01       	movw	r30, r28
    17fc:	e3 56       	subi	r30, 0x63	; 99
    17fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1800:	8c e2       	ldi	r24, 0x2C	; 44
    1802:	91 e0       	ldi	r25, 0x01	; 1
    1804:	91 83       	std	Z+1, r25	; 0x01
    1806:	80 83       	st	Z, r24
    1808:	fe 01       	movw	r30, r28
    180a:	e3 56       	subi	r30, 0x63	; 99
    180c:	ff 4f       	sbci	r31, 0xFF	; 255
    180e:	80 81       	ld	r24, Z
    1810:	91 81       	ldd	r25, Z+1	; 0x01
    1812:	01 97       	sbiw	r24, 0x01	; 1
    1814:	f1 f7       	brne	.-4      	; 0x1812 <SmartHomeMenu+0x6e2>
    1816:	fe 01       	movw	r30, r28
    1818:	e3 56       	subi	r30, 0x63	; 99
    181a:	ff 4f       	sbci	r31, 0xFF	; 255
    181c:	91 83       	std	Z+1, r25	; 0x01
    181e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1820:	de 01       	movw	r26, r28
    1822:	a1 56       	subi	r26, 0x61	; 97
    1824:	bf 4f       	sbci	r27, 0xFF	; 255
    1826:	fe 01       	movw	r30, r28
    1828:	e1 56       	subi	r30, 0x61	; 97
    182a:	ff 4f       	sbci	r31, 0xFF	; 255
    182c:	80 81       	ld	r24, Z
    182e:	91 81       	ldd	r25, Z+1	; 0x01
    1830:	01 97       	sbiw	r24, 0x01	; 1
    1832:	11 96       	adiw	r26, 0x01	; 1
    1834:	9c 93       	st	X, r25
    1836:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1838:	fe 01       	movw	r30, r28
    183a:	e1 56       	subi	r30, 0x61	; 97
    183c:	ff 4f       	sbci	r31, 0xFF	; 255
    183e:	80 81       	ld	r24, Z
    1840:	91 81       	ldd	r25, Z+1	; 0x01
    1842:	00 97       	sbiw	r24, 0x00	; 0
    1844:	d1 f6       	brne	.-76     	; 0x17fa <SmartHomeMenu+0x6ca>
    1846:	27 c0       	rjmp	.+78     	; 0x1896 <SmartHomeMenu+0x766>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1848:	8e 01       	movw	r16, r28
    184a:	01 56       	subi	r16, 0x61	; 97
    184c:	1f 4f       	sbci	r17, 0xFF	; 255
    184e:	fe 01       	movw	r30, r28
    1850:	ef 55       	subi	r30, 0x5F	; 95
    1852:	ff 4f       	sbci	r31, 0xFF	; 255
    1854:	60 81       	ld	r22, Z
    1856:	71 81       	ldd	r23, Z+1	; 0x01
    1858:	82 81       	ldd	r24, Z+2	; 0x02
    185a:	93 81       	ldd	r25, Z+3	; 0x03
    185c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1860:	dc 01       	movw	r26, r24
    1862:	cb 01       	movw	r24, r22
    1864:	f8 01       	movw	r30, r16
    1866:	91 83       	std	Z+1, r25	; 0x01
    1868:	80 83       	st	Z, r24
    186a:	de 01       	movw	r26, r28
    186c:	a5 56       	subi	r26, 0x65	; 101
    186e:	bf 4f       	sbci	r27, 0xFF	; 255
    1870:	fe 01       	movw	r30, r28
    1872:	e1 56       	subi	r30, 0x61	; 97
    1874:	ff 4f       	sbci	r31, 0xFF	; 255
    1876:	80 81       	ld	r24, Z
    1878:	91 81       	ldd	r25, Z+1	; 0x01
    187a:	8d 93       	st	X+, r24
    187c:	9c 93       	st	X, r25
    187e:	fe 01       	movw	r30, r28
    1880:	e5 56       	subi	r30, 0x65	; 101
    1882:	ff 4f       	sbci	r31, 0xFF	; 255
    1884:	80 81       	ld	r24, Z
    1886:	91 81       	ldd	r25, Z+1	; 0x01
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	f1 f7       	brne	.-4      	; 0x1888 <SmartHomeMenu+0x758>
    188c:	fe 01       	movw	r30, r28
    188e:	e5 56       	subi	r30, 0x65	; 101
    1890:	ff 4f       	sbci	r31, 0xFF	; 255
    1892:	91 83       	std	Z+1, r25	; 0x01
    1894:	80 83       	st	Z, r24
				_delay_ms(1000);
				HLCD_vClearDisplay();
    1896:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    189a:	0c 94 fc 13 	jmp	0x27f8	; 0x27f8 <SmartHomeMenu+0x16c8>
			}

			break;

		case '3':
			HLCD_vClearDisplay();
    189e:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    18a2:	88 ef       	ldi	r24, 0xF8	; 248
    18a4:	90 e0       	ldi	r25, 0x00	; 0
    18a6:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    18aa:	fe 01       	movw	r30, r28
    18ac:	e9 56       	subi	r30, 0x69	; 105
    18ae:	ff 4f       	sbci	r31, 0xFF	; 255
    18b0:	80 e0       	ldi	r24, 0x00	; 0
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	a8 e4       	ldi	r26, 0x48	; 72
    18b6:	b3 e4       	ldi	r27, 0x43	; 67
    18b8:	80 83       	st	Z, r24
    18ba:	91 83       	std	Z+1, r25	; 0x01
    18bc:	a2 83       	std	Z+2, r26	; 0x02
    18be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18c0:	8e 01       	movw	r16, r28
    18c2:	0d 56       	subi	r16, 0x6D	; 109
    18c4:	1f 4f       	sbci	r17, 0xFF	; 255
    18c6:	fe 01       	movw	r30, r28
    18c8:	e9 56       	subi	r30, 0x69	; 105
    18ca:	ff 4f       	sbci	r31, 0xFF	; 255
    18cc:	60 81       	ld	r22, Z
    18ce:	71 81       	ldd	r23, Z+1	; 0x01
    18d0:	82 81       	ldd	r24, Z+2	; 0x02
    18d2:	93 81       	ldd	r25, Z+3	; 0x03
    18d4:	20 e0       	ldi	r18, 0x00	; 0
    18d6:	30 e8       	ldi	r19, 0x80	; 128
    18d8:	4b e3       	ldi	r20, 0x3B	; 59
    18da:	55 e4       	ldi	r21, 0x45	; 69
    18dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	f8 01       	movw	r30, r16
    18e6:	80 83       	st	Z, r24
    18e8:	91 83       	std	Z+1, r25	; 0x01
    18ea:	a2 83       	std	Z+2, r26	; 0x02
    18ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18ee:	fe 01       	movw	r30, r28
    18f0:	ed 56       	subi	r30, 0x6D	; 109
    18f2:	ff 4f       	sbci	r31, 0xFF	; 255
    18f4:	60 81       	ld	r22, Z
    18f6:	71 81       	ldd	r23, Z+1	; 0x01
    18f8:	82 81       	ldd	r24, Z+2	; 0x02
    18fa:	93 81       	ldd	r25, Z+3	; 0x03
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	30 e0       	ldi	r19, 0x00	; 0
    1900:	40 e8       	ldi	r20, 0x80	; 128
    1902:	5f e3       	ldi	r21, 0x3F	; 63
    1904:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1908:	88 23       	and	r24, r24
    190a:	44 f4       	brge	.+16     	; 0x191c <SmartHomeMenu+0x7ec>
		__ticks = 1;
    190c:	fe 01       	movw	r30, r28
    190e:	ef 56       	subi	r30, 0x6F	; 111
    1910:	ff 4f       	sbci	r31, 0xFF	; 255
    1912:	81 e0       	ldi	r24, 0x01	; 1
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	91 83       	std	Z+1, r25	; 0x01
    1918:	80 83       	st	Z, r24
    191a:	64 c0       	rjmp	.+200    	; 0x19e4 <SmartHomeMenu+0x8b4>
	else if (__tmp > 65535)
    191c:	fe 01       	movw	r30, r28
    191e:	ed 56       	subi	r30, 0x6D	; 109
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	60 81       	ld	r22, Z
    1924:	71 81       	ldd	r23, Z+1	; 0x01
    1926:	82 81       	ldd	r24, Z+2	; 0x02
    1928:	93 81       	ldd	r25, Z+3	; 0x03
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	3f ef       	ldi	r19, 0xFF	; 255
    192e:	4f e7       	ldi	r20, 0x7F	; 127
    1930:	57 e4       	ldi	r21, 0x47	; 71
    1932:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1936:	18 16       	cp	r1, r24
    1938:	0c f0       	brlt	.+2      	; 0x193c <SmartHomeMenu+0x80c>
    193a:	43 c0       	rjmp	.+134    	; 0x19c2 <SmartHomeMenu+0x892>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    193c:	fe 01       	movw	r30, r28
    193e:	e9 56       	subi	r30, 0x69	; 105
    1940:	ff 4f       	sbci	r31, 0xFF	; 255
    1942:	60 81       	ld	r22, Z
    1944:	71 81       	ldd	r23, Z+1	; 0x01
    1946:	82 81       	ldd	r24, Z+2	; 0x02
    1948:	93 81       	ldd	r25, Z+3	; 0x03
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	40 e2       	ldi	r20, 0x20	; 32
    1950:	51 e4       	ldi	r21, 0x41	; 65
    1952:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1956:	dc 01       	movw	r26, r24
    1958:	cb 01       	movw	r24, r22
    195a:	8e 01       	movw	r16, r28
    195c:	0f 56       	subi	r16, 0x6F	; 111
    195e:	1f 4f       	sbci	r17, 0xFF	; 255
    1960:	bc 01       	movw	r22, r24
    1962:	cd 01       	movw	r24, r26
    1964:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1968:	dc 01       	movw	r26, r24
    196a:	cb 01       	movw	r24, r22
    196c:	f8 01       	movw	r30, r16
    196e:	91 83       	std	Z+1, r25	; 0x01
    1970:	80 83       	st	Z, r24
    1972:	1f c0       	rjmp	.+62     	; 0x19b2 <SmartHomeMenu+0x882>
    1974:	fe 01       	movw	r30, r28
    1976:	e1 57       	subi	r30, 0x71	; 113
    1978:	ff 4f       	sbci	r31, 0xFF	; 255
    197a:	8c e2       	ldi	r24, 0x2C	; 44
    197c:	91 e0       	ldi	r25, 0x01	; 1
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	80 83       	st	Z, r24
    1982:	fe 01       	movw	r30, r28
    1984:	e1 57       	subi	r30, 0x71	; 113
    1986:	ff 4f       	sbci	r31, 0xFF	; 255
    1988:	80 81       	ld	r24, Z
    198a:	91 81       	ldd	r25, Z+1	; 0x01
    198c:	01 97       	sbiw	r24, 0x01	; 1
    198e:	f1 f7       	brne	.-4      	; 0x198c <SmartHomeMenu+0x85c>
    1990:	fe 01       	movw	r30, r28
    1992:	e1 57       	subi	r30, 0x71	; 113
    1994:	ff 4f       	sbci	r31, 0xFF	; 255
    1996:	91 83       	std	Z+1, r25	; 0x01
    1998:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    199a:	de 01       	movw	r26, r28
    199c:	af 56       	subi	r26, 0x6F	; 111
    199e:	bf 4f       	sbci	r27, 0xFF	; 255
    19a0:	fe 01       	movw	r30, r28
    19a2:	ef 56       	subi	r30, 0x6F	; 111
    19a4:	ff 4f       	sbci	r31, 0xFF	; 255
    19a6:	80 81       	ld	r24, Z
    19a8:	91 81       	ldd	r25, Z+1	; 0x01
    19aa:	01 97       	sbiw	r24, 0x01	; 1
    19ac:	11 96       	adiw	r26, 0x01	; 1
    19ae:	9c 93       	st	X, r25
    19b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19b2:	fe 01       	movw	r30, r28
    19b4:	ef 56       	subi	r30, 0x6F	; 111
    19b6:	ff 4f       	sbci	r31, 0xFF	; 255
    19b8:	80 81       	ld	r24, Z
    19ba:	91 81       	ldd	r25, Z+1	; 0x01
    19bc:	00 97       	sbiw	r24, 0x00	; 0
    19be:	d1 f6       	brne	.-76     	; 0x1974 <SmartHomeMenu+0x844>
    19c0:	27 c0       	rjmp	.+78     	; 0x1a10 <SmartHomeMenu+0x8e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19c2:	8e 01       	movw	r16, r28
    19c4:	0f 56       	subi	r16, 0x6F	; 111
    19c6:	1f 4f       	sbci	r17, 0xFF	; 255
    19c8:	fe 01       	movw	r30, r28
    19ca:	ed 56       	subi	r30, 0x6D	; 109
    19cc:	ff 4f       	sbci	r31, 0xFF	; 255
    19ce:	60 81       	ld	r22, Z
    19d0:	71 81       	ldd	r23, Z+1	; 0x01
    19d2:	82 81       	ldd	r24, Z+2	; 0x02
    19d4:	93 81       	ldd	r25, Z+3	; 0x03
    19d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19da:	dc 01       	movw	r26, r24
    19dc:	cb 01       	movw	r24, r22
    19de:	f8 01       	movw	r30, r16
    19e0:	91 83       	std	Z+1, r25	; 0x01
    19e2:	80 83       	st	Z, r24
    19e4:	de 01       	movw	r26, r28
    19e6:	a3 57       	subi	r26, 0x73	; 115
    19e8:	bf 4f       	sbci	r27, 0xFF	; 255
    19ea:	fe 01       	movw	r30, r28
    19ec:	ef 56       	subi	r30, 0x6F	; 111
    19ee:	ff 4f       	sbci	r31, 0xFF	; 255
    19f0:	80 81       	ld	r24, Z
    19f2:	91 81       	ldd	r25, Z+1	; 0x01
    19f4:	8d 93       	st	X+, r24
    19f6:	9c 93       	st	X, r25
    19f8:	fe 01       	movw	r30, r28
    19fa:	e3 57       	subi	r30, 0x73	; 115
    19fc:	ff 4f       	sbci	r31, 0xFF	; 255
    19fe:	80 81       	ld	r24, Z
    1a00:	91 81       	ldd	r25, Z+1	; 0x01
    1a02:	01 97       	sbiw	r24, 0x01	; 1
    1a04:	f1 f7       	brne	.-4      	; 0x1a02 <SmartHomeMenu+0x8d2>
    1a06:	fe 01       	movw	r30, r28
    1a08:	e3 57       	subi	r30, 0x73	; 115
    1a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0c:	91 83       	std	Z+1, r25	; 0x01
    1a0e:	80 83       	st	Z, r24
			_delay_ms(200);
			HLCD_vClearDisplay();
    1a10:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    1a14:	f1 c6       	rjmp	.+3554   	; 0x27f8 <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    1a16:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    1a1a:	8d ef       	ldi	r24, 0xFD	; 253
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1a22:	ea c6       	rjmp	.+3540   	; 0x27f8 <SmartHomeMenu+0x16c8>


	// Timer
	case '2':
	{
		u8 Timer_Action = NO_KEY_PRESSED;
    1a24:	fe 01       	movw	r30, r28
    1a26:	eb 52       	subi	r30, 0x2B	; 43
    1a28:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2a:	8f ef       	ldi	r24, 0xFF	; 255
    1a2c:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
    1a2e:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
		HLCD_vDisplayLongString("1- Set Timer");
    1a32:	89 e0       	ldi	r24, 0x09	; 9
    1a34:	91 e0       	ldi	r25, 0x01	; 1
    1a36:	0e 94 28 25 	call	0x4a50	; 0x4a50 <HLCD_vDisplayLongString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    1a3a:	82 e0       	ldi	r24, 0x02	; 2
    1a3c:	61 e0       	ldi	r22, 0x01	; 1
    1a3e:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
		HLCD_vDisplayString("2- Back");
    1a42:	86 e1       	ldi	r24, 0x16	; 22
    1a44:	91 e0       	ldi	r25, 0x01	; 1
    1a46:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1a4a:	06 c0       	rjmp	.+12     	; 0x1a58 <SmartHomeMenu+0x928>
		while(Timer_Action == NO_KEY_PRESSED)
		{
			Timer_Action = HKEYPAD_u8GetPressedKey();
    1a4c:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <HKEYPAD_u8GetPressedKey>
    1a50:	fe 01       	movw	r30, r28
    1a52:	eb 52       	subi	r30, 0x2B	; 43
    1a54:	ff 4f       	sbci	r31, 0xFF	; 255
    1a56:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
		HLCD_vDisplayLongString("1- Set Timer");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("2- Back");
		while(Timer_Action == NO_KEY_PRESSED)
    1a58:	fe 01       	movw	r30, r28
    1a5a:	eb 52       	subi	r30, 0x2B	; 43
    1a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a5e:	80 81       	ld	r24, Z
    1a60:	8f 3f       	cpi	r24, 0xFF	; 255
    1a62:	a1 f3       	breq	.-24     	; 0x1a4c <SmartHomeMenu+0x91c>
		{
			Timer_Action = HKEYPAD_u8GetPressedKey();
		}

		switch(Timer_Action)
    1a64:	fe 01       	movw	r30, r28
    1a66:	eb 52       	subi	r30, 0x2B	; 43
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 81       	ld	r24, Z
    1a6c:	28 2f       	mov	r18, r24
    1a6e:	30 e0       	ldi	r19, 0x00	; 0
    1a70:	c6 52       	subi	r28, 0x26	; 38
    1a72:	df 4f       	sbci	r29, 0xFF	; 255
    1a74:	39 83       	std	Y+1, r19	; 0x01
    1a76:	28 83       	st	Y, r18
    1a78:	ca 5d       	subi	r28, 0xDA	; 218
    1a7a:	d0 40       	sbci	r29, 0x00	; 0
    1a7c:	c6 52       	subi	r28, 0x26	; 38
    1a7e:	df 4f       	sbci	r29, 0xFF	; 255
    1a80:	88 81       	ld	r24, Y
    1a82:	99 81       	ldd	r25, Y+1	; 0x01
    1a84:	ca 5d       	subi	r28, 0xDA	; 218
    1a86:	d0 40       	sbci	r29, 0x00	; 0
    1a88:	81 33       	cpi	r24, 0x31	; 49
    1a8a:	91 05       	cpc	r25, r1
    1a8c:	59 f0       	breq	.+22     	; 0x1aa4 <SmartHomeMenu+0x974>
    1a8e:	c6 52       	subi	r28, 0x26	; 38
    1a90:	df 4f       	sbci	r29, 0xFF	; 255
    1a92:	e8 81       	ld	r30, Y
    1a94:	f9 81       	ldd	r31, Y+1	; 0x01
    1a96:	ca 5d       	subi	r28, 0xDA	; 218
    1a98:	d0 40       	sbci	r29, 0x00	; 0
    1a9a:	e2 33       	cpi	r30, 0x32	; 50
    1a9c:	f1 05       	cpc	r31, r1
    1a9e:	09 f4       	brne	.+2      	; 0x1aa2 <SmartHomeMenu+0x972>
    1aa0:	e3 c0       	rjmp	.+454    	; 0x1c68 <SmartHomeMenu+0xb38>
    1aa2:	9e c1       	rjmp	.+828    	; 0x1de0 <SmartHomeMenu+0xcb0>
		{
		case '1':
			HLCD_vClearDisplay();
    1aa4:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayLongString("Set Timer in Sec");
    1aa8:	8e e1       	ldi	r24, 0x1E	; 30
    1aaa:	91 e0       	ldi	r25, 0x01	; 1
    1aac:	0e 94 28 25 	call	0x4a50	; 0x4a50 <HLCD_vDisplayLongString>
			u8 Time = HKEYPAD_u16MultiDigitInput();
    1ab0:	0e 94 bc 27 	call	0x4f78	; 0x4f78 <HKEYPAD_u16MultiDigitInput>
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	ec 52       	subi	r30, 0x2C	; 44
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	80 83       	st	Z, r24
			HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
    1abc:	82 e0       	ldi	r24, 0x02	; 2
    1abe:	61 e0       	ldi	r22, 0x01	; 1
    1ac0:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
			HLCD_vDisplayNumber(Time);
    1ac4:	fe 01       	movw	r30, r28
    1ac6:	ec 52       	subi	r30, 0x2C	; 44
    1ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aca:	80 81       	ld	r24, Z
    1acc:	88 2f       	mov	r24, r24
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 a0 25 	call	0x4b40	; 0x4b40 <HLCD_vDisplayNumber>
			HSSD_vCountDown(SSD_PORT , Time , SSD_DELAY);
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	ec 52       	subi	r30, 0x2C	; 44
    1ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ada:	90 81       	ld	r25, Z
    1adc:	81 e0       	ldi	r24, 0x01	; 1
    1ade:	69 2f       	mov	r22, r25
    1ae0:	44 ef       	ldi	r20, 0xF4	; 244
    1ae2:	51 e0       	ldi	r21, 0x01	; 1
    1ae4:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <HSSD_vCountDown>
			HLCD_vClearDisplay();
    1ae8:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HBUZZER_vTurnOn();
    1aec:	0e 94 3f 28 	call	0x507e	; 0x507e <HBUZZER_vTurnOn>
			HLCD_vDisplayString("Time Finished");
    1af0:	8f e2       	ldi	r24, 0x2F	; 47
    1af2:	91 e0       	ldi	r25, 0x01	; 1
    1af4:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1af8:	fe 01       	movw	r30, r28
    1afa:	e7 57       	subi	r30, 0x77	; 119
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	80 e0       	ldi	r24, 0x00	; 0
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	aa ef       	ldi	r26, 0xFA	; 250
    1b04:	b3 e4       	ldi	r27, 0x43	; 67
    1b06:	80 83       	st	Z, r24
    1b08:	91 83       	std	Z+1, r25	; 0x01
    1b0a:	a2 83       	std	Z+2, r26	; 0x02
    1b0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b0e:	8e 01       	movw	r16, r28
    1b10:	0b 57       	subi	r16, 0x7B	; 123
    1b12:	1f 4f       	sbci	r17, 0xFF	; 255
    1b14:	fe 01       	movw	r30, r28
    1b16:	e7 57       	subi	r30, 0x77	; 119
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	60 81       	ld	r22, Z
    1b1c:	71 81       	ldd	r23, Z+1	; 0x01
    1b1e:	82 81       	ldd	r24, Z+2	; 0x02
    1b20:	93 81       	ldd	r25, Z+3	; 0x03
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e8       	ldi	r19, 0x80	; 128
    1b26:	4b e3       	ldi	r20, 0x3B	; 59
    1b28:	55 e4       	ldi	r21, 0x45	; 69
    1b2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	f8 01       	movw	r30, r16
    1b34:	80 83       	st	Z, r24
    1b36:	91 83       	std	Z+1, r25	; 0x01
    1b38:	a2 83       	std	Z+2, r26	; 0x02
    1b3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	eb 57       	subi	r30, 0x7B	; 123
    1b40:	ff 4f       	sbci	r31, 0xFF	; 255
    1b42:	60 81       	ld	r22, Z
    1b44:	71 81       	ldd	r23, Z+1	; 0x01
    1b46:	82 81       	ldd	r24, Z+2	; 0x02
    1b48:	93 81       	ldd	r25, Z+3	; 0x03
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e8       	ldi	r20, 0x80	; 128
    1b50:	5f e3       	ldi	r21, 0x3F	; 63
    1b52:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b56:	88 23       	and	r24, r24
    1b58:	44 f4       	brge	.+16     	; 0x1b6a <SmartHomeMenu+0xa3a>
		__ticks = 1;
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	ed 57       	subi	r30, 0x7D	; 125
    1b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	91 83       	std	Z+1, r25	; 0x01
    1b66:	80 83       	st	Z, r24
    1b68:	64 c0       	rjmp	.+200    	; 0x1c32 <SmartHomeMenu+0xb02>
	else if (__tmp > 65535)
    1b6a:	fe 01       	movw	r30, r28
    1b6c:	eb 57       	subi	r30, 0x7B	; 123
    1b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b70:	60 81       	ld	r22, Z
    1b72:	71 81       	ldd	r23, Z+1	; 0x01
    1b74:	82 81       	ldd	r24, Z+2	; 0x02
    1b76:	93 81       	ldd	r25, Z+3	; 0x03
    1b78:	20 e0       	ldi	r18, 0x00	; 0
    1b7a:	3f ef       	ldi	r19, 0xFF	; 255
    1b7c:	4f e7       	ldi	r20, 0x7F	; 127
    1b7e:	57 e4       	ldi	r21, 0x47	; 71
    1b80:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b84:	18 16       	cp	r1, r24
    1b86:	0c f0       	brlt	.+2      	; 0x1b8a <SmartHomeMenu+0xa5a>
    1b88:	43 c0       	rjmp	.+134    	; 0x1c10 <SmartHomeMenu+0xae0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	e7 57       	subi	r30, 0x77	; 119
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	60 81       	ld	r22, Z
    1b92:	71 81       	ldd	r23, Z+1	; 0x01
    1b94:	82 81       	ldd	r24, Z+2	; 0x02
    1b96:	93 81       	ldd	r25, Z+3	; 0x03
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	40 e2       	ldi	r20, 0x20	; 32
    1b9e:	51 e4       	ldi	r21, 0x41	; 65
    1ba0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ba4:	dc 01       	movw	r26, r24
    1ba6:	cb 01       	movw	r24, r22
    1ba8:	8e 01       	movw	r16, r28
    1baa:	0d 57       	subi	r16, 0x7D	; 125
    1bac:	1f 4f       	sbci	r17, 0xFF	; 255
    1bae:	bc 01       	movw	r22, r24
    1bb0:	cd 01       	movw	r24, r26
    1bb2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bb6:	dc 01       	movw	r26, r24
    1bb8:	cb 01       	movw	r24, r22
    1bba:	f8 01       	movw	r30, r16
    1bbc:	91 83       	std	Z+1, r25	; 0x01
    1bbe:	80 83       	st	Z, r24
    1bc0:	1f c0       	rjmp	.+62     	; 0x1c00 <SmartHomeMenu+0xad0>
    1bc2:	fe 01       	movw	r30, r28
    1bc4:	ef 57       	subi	r30, 0x7F	; 127
    1bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc8:	8c e2       	ldi	r24, 0x2C	; 44
    1bca:	91 e0       	ldi	r25, 0x01	; 1
    1bcc:	91 83       	std	Z+1, r25	; 0x01
    1bce:	80 83       	st	Z, r24
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	ef 57       	subi	r30, 0x7F	; 127
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	80 81       	ld	r24, Z
    1bd8:	91 81       	ldd	r25, Z+1	; 0x01
    1bda:	01 97       	sbiw	r24, 0x01	; 1
    1bdc:	f1 f7       	brne	.-4      	; 0x1bda <SmartHomeMenu+0xaaa>
    1bde:	fe 01       	movw	r30, r28
    1be0:	ef 57       	subi	r30, 0x7F	; 127
    1be2:	ff 4f       	sbci	r31, 0xFF	; 255
    1be4:	91 83       	std	Z+1, r25	; 0x01
    1be6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1be8:	de 01       	movw	r26, r28
    1bea:	ad 57       	subi	r26, 0x7D	; 125
    1bec:	bf 4f       	sbci	r27, 0xFF	; 255
    1bee:	fe 01       	movw	r30, r28
    1bf0:	ed 57       	subi	r30, 0x7D	; 125
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	80 81       	ld	r24, Z
    1bf6:	91 81       	ldd	r25, Z+1	; 0x01
    1bf8:	01 97       	sbiw	r24, 0x01	; 1
    1bfa:	11 96       	adiw	r26, 0x01	; 1
    1bfc:	9c 93       	st	X, r25
    1bfe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c00:	fe 01       	movw	r30, r28
    1c02:	ed 57       	subi	r30, 0x7D	; 125
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	80 81       	ld	r24, Z
    1c08:	91 81       	ldd	r25, Z+1	; 0x01
    1c0a:	00 97       	sbiw	r24, 0x00	; 0
    1c0c:	d1 f6       	brne	.-76     	; 0x1bc2 <SmartHomeMenu+0xa92>
    1c0e:	27 c0       	rjmp	.+78     	; 0x1c5e <SmartHomeMenu+0xb2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c10:	8e 01       	movw	r16, r28
    1c12:	0d 57       	subi	r16, 0x7D	; 125
    1c14:	1f 4f       	sbci	r17, 0xFF	; 255
    1c16:	fe 01       	movw	r30, r28
    1c18:	eb 57       	subi	r30, 0x7B	; 123
    1c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1c:	60 81       	ld	r22, Z
    1c1e:	71 81       	ldd	r23, Z+1	; 0x01
    1c20:	82 81       	ldd	r24, Z+2	; 0x02
    1c22:	93 81       	ldd	r25, Z+3	; 0x03
    1c24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	f8 01       	movw	r30, r16
    1c2e:	91 83       	std	Z+1, r25	; 0x01
    1c30:	80 83       	st	Z, r24
    1c32:	de 01       	movw	r26, r28
    1c34:	a1 58       	subi	r26, 0x81	; 129
    1c36:	bf 4f       	sbci	r27, 0xFF	; 255
    1c38:	fe 01       	movw	r30, r28
    1c3a:	ed 57       	subi	r30, 0x7D	; 125
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	80 81       	ld	r24, Z
    1c40:	91 81       	ldd	r25, Z+1	; 0x01
    1c42:	8d 93       	st	X+, r24
    1c44:	9c 93       	st	X, r25
    1c46:	fe 01       	movw	r30, r28
    1c48:	e1 58       	subi	r30, 0x81	; 129
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <SmartHomeMenu+0xb20>
    1c54:	fe 01       	movw	r30, r28
    1c56:	e1 58       	subi	r30, 0x81	; 129
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
			_delay_ms(500);
			HBUZZER_vTurnOff();
    1c5e:	0e 94 4b 28 	call	0x5096	; 0x5096 <HBUZZER_vTurnOff>
			HLCD_vClearDisplay();
    1c62:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    1c66:	c8 c5       	rjmp	.+2960   	; 0x27f8 <SmartHomeMenu+0x16c8>
			break;

		case '2':
			HLCD_vClearDisplay();
    1c68:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    1c6c:	88 ef       	ldi	r24, 0xF8	; 248
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1c74:	fe 01       	movw	r30, r28
    1c76:	e5 58       	subi	r30, 0x85	; 133
    1c78:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	a8 e4       	ldi	r26, 0x48	; 72
    1c80:	b3 e4       	ldi	r27, 0x43	; 67
    1c82:	80 83       	st	Z, r24
    1c84:	91 83       	std	Z+1, r25	; 0x01
    1c86:	a2 83       	std	Z+2, r26	; 0x02
    1c88:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c8a:	8e 01       	movw	r16, r28
    1c8c:	09 58       	subi	r16, 0x89	; 137
    1c8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c90:	fe 01       	movw	r30, r28
    1c92:	e5 58       	subi	r30, 0x85	; 133
    1c94:	ff 4f       	sbci	r31, 0xFF	; 255
    1c96:	60 81       	ld	r22, Z
    1c98:	71 81       	ldd	r23, Z+1	; 0x01
    1c9a:	82 81       	ldd	r24, Z+2	; 0x02
    1c9c:	93 81       	ldd	r25, Z+3	; 0x03
    1c9e:	20 e0       	ldi	r18, 0x00	; 0
    1ca0:	30 e8       	ldi	r19, 0x80	; 128
    1ca2:	4b e3       	ldi	r20, 0x3B	; 59
    1ca4:	55 e4       	ldi	r21, 0x45	; 69
    1ca6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1caa:	dc 01       	movw	r26, r24
    1cac:	cb 01       	movw	r24, r22
    1cae:	f8 01       	movw	r30, r16
    1cb0:	80 83       	st	Z, r24
    1cb2:	91 83       	std	Z+1, r25	; 0x01
    1cb4:	a2 83       	std	Z+2, r26	; 0x02
    1cb6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1cb8:	fe 01       	movw	r30, r28
    1cba:	e9 58       	subi	r30, 0x89	; 137
    1cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbe:	60 81       	ld	r22, Z
    1cc0:	71 81       	ldd	r23, Z+1	; 0x01
    1cc2:	82 81       	ldd	r24, Z+2	; 0x02
    1cc4:	93 81       	ldd	r25, Z+3	; 0x03
    1cc6:	20 e0       	ldi	r18, 0x00	; 0
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	40 e8       	ldi	r20, 0x80	; 128
    1ccc:	5f e3       	ldi	r21, 0x3F	; 63
    1cce:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1cd2:	88 23       	and	r24, r24
    1cd4:	44 f4       	brge	.+16     	; 0x1ce6 <SmartHomeMenu+0xbb6>
		__ticks = 1;
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	eb 58       	subi	r30, 0x8B	; 139
    1cda:	ff 4f       	sbci	r31, 0xFF	; 255
    1cdc:	81 e0       	ldi	r24, 0x01	; 1
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	91 83       	std	Z+1, r25	; 0x01
    1ce2:	80 83       	st	Z, r24
    1ce4:	64 c0       	rjmp	.+200    	; 0x1dae <SmartHomeMenu+0xc7e>
	else if (__tmp > 65535)
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	e9 58       	subi	r30, 0x89	; 137
    1cea:	ff 4f       	sbci	r31, 0xFF	; 255
    1cec:	60 81       	ld	r22, Z
    1cee:	71 81       	ldd	r23, Z+1	; 0x01
    1cf0:	82 81       	ldd	r24, Z+2	; 0x02
    1cf2:	93 81       	ldd	r25, Z+3	; 0x03
    1cf4:	20 e0       	ldi	r18, 0x00	; 0
    1cf6:	3f ef       	ldi	r19, 0xFF	; 255
    1cf8:	4f e7       	ldi	r20, 0x7F	; 127
    1cfa:	57 e4       	ldi	r21, 0x47	; 71
    1cfc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d00:	18 16       	cp	r1, r24
    1d02:	0c f0       	brlt	.+2      	; 0x1d06 <SmartHomeMenu+0xbd6>
    1d04:	43 c0       	rjmp	.+134    	; 0x1d8c <SmartHomeMenu+0xc5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d06:	fe 01       	movw	r30, r28
    1d08:	e5 58       	subi	r30, 0x85	; 133
    1d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0c:	60 81       	ld	r22, Z
    1d0e:	71 81       	ldd	r23, Z+1	; 0x01
    1d10:	82 81       	ldd	r24, Z+2	; 0x02
    1d12:	93 81       	ldd	r25, Z+3	; 0x03
    1d14:	20 e0       	ldi	r18, 0x00	; 0
    1d16:	30 e0       	ldi	r19, 0x00	; 0
    1d18:	40 e2       	ldi	r20, 0x20	; 32
    1d1a:	51 e4       	ldi	r21, 0x41	; 65
    1d1c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d20:	dc 01       	movw	r26, r24
    1d22:	cb 01       	movw	r24, r22
    1d24:	8e 01       	movw	r16, r28
    1d26:	0b 58       	subi	r16, 0x8B	; 139
    1d28:	1f 4f       	sbci	r17, 0xFF	; 255
    1d2a:	bc 01       	movw	r22, r24
    1d2c:	cd 01       	movw	r24, r26
    1d2e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	f8 01       	movw	r30, r16
    1d38:	91 83       	std	Z+1, r25	; 0x01
    1d3a:	80 83       	st	Z, r24
    1d3c:	1f c0       	rjmp	.+62     	; 0x1d7c <SmartHomeMenu+0xc4c>
    1d3e:	fe 01       	movw	r30, r28
    1d40:	ed 58       	subi	r30, 0x8D	; 141
    1d42:	ff 4f       	sbci	r31, 0xFF	; 255
    1d44:	8c e2       	ldi	r24, 0x2C	; 44
    1d46:	91 e0       	ldi	r25, 0x01	; 1
    1d48:	91 83       	std	Z+1, r25	; 0x01
    1d4a:	80 83       	st	Z, r24
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	ed 58       	subi	r30, 0x8D	; 141
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	80 81       	ld	r24, Z
    1d54:	91 81       	ldd	r25, Z+1	; 0x01
    1d56:	01 97       	sbiw	r24, 0x01	; 1
    1d58:	f1 f7       	brne	.-4      	; 0x1d56 <SmartHomeMenu+0xc26>
    1d5a:	fe 01       	movw	r30, r28
    1d5c:	ed 58       	subi	r30, 0x8D	; 141
    1d5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d60:	91 83       	std	Z+1, r25	; 0x01
    1d62:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d64:	de 01       	movw	r26, r28
    1d66:	ab 58       	subi	r26, 0x8B	; 139
    1d68:	bf 4f       	sbci	r27, 0xFF	; 255
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	eb 58       	subi	r30, 0x8B	; 139
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	80 81       	ld	r24, Z
    1d72:	91 81       	ldd	r25, Z+1	; 0x01
    1d74:	01 97       	sbiw	r24, 0x01	; 1
    1d76:	11 96       	adiw	r26, 0x01	; 1
    1d78:	9c 93       	st	X, r25
    1d7a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d7c:	fe 01       	movw	r30, r28
    1d7e:	eb 58       	subi	r30, 0x8B	; 139
    1d80:	ff 4f       	sbci	r31, 0xFF	; 255
    1d82:	80 81       	ld	r24, Z
    1d84:	91 81       	ldd	r25, Z+1	; 0x01
    1d86:	00 97       	sbiw	r24, 0x00	; 0
    1d88:	d1 f6       	brne	.-76     	; 0x1d3e <SmartHomeMenu+0xc0e>
    1d8a:	27 c0       	rjmp	.+78     	; 0x1dda <SmartHomeMenu+0xcaa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d8c:	8e 01       	movw	r16, r28
    1d8e:	0b 58       	subi	r16, 0x8B	; 139
    1d90:	1f 4f       	sbci	r17, 0xFF	; 255
    1d92:	fe 01       	movw	r30, r28
    1d94:	e9 58       	subi	r30, 0x89	; 137
    1d96:	ff 4f       	sbci	r31, 0xFF	; 255
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1da4:	dc 01       	movw	r26, r24
    1da6:	cb 01       	movw	r24, r22
    1da8:	f8 01       	movw	r30, r16
    1daa:	91 83       	std	Z+1, r25	; 0x01
    1dac:	80 83       	st	Z, r24
    1dae:	de 01       	movw	r26, r28
    1db0:	af 58       	subi	r26, 0x8F	; 143
    1db2:	bf 4f       	sbci	r27, 0xFF	; 255
    1db4:	fe 01       	movw	r30, r28
    1db6:	eb 58       	subi	r30, 0x8B	; 139
    1db8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dba:	80 81       	ld	r24, Z
    1dbc:	91 81       	ldd	r25, Z+1	; 0x01
    1dbe:	8d 93       	st	X+, r24
    1dc0:	9c 93       	st	X, r25
    1dc2:	fe 01       	movw	r30, r28
    1dc4:	ef 58       	subi	r30, 0x8F	; 143
    1dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc8:	80 81       	ld	r24, Z
    1dca:	91 81       	ldd	r25, Z+1	; 0x01
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	f1 f7       	brne	.-4      	; 0x1dcc <SmartHomeMenu+0xc9c>
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	ef 58       	subi	r30, 0x8F	; 143
    1dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd6:	91 83       	std	Z+1, r25	; 0x01
    1dd8:	80 83       	st	Z, r24
			_delay_ms(200);
			HLCD_vClearDisplay();
    1dda:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    1dde:	0c c5       	rjmp	.+2584   	; 0x27f8 <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    1de0:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    1de4:	8d ef       	ldi	r24, 0xFD	; 253
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1dec:	fe 01       	movw	r30, r28
    1dee:	e3 59       	subi	r30, 0x93	; 147
    1df0:	ff 4f       	sbci	r31, 0xFF	; 255
    1df2:	80 e0       	ldi	r24, 0x00	; 0
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	aa ef       	ldi	r26, 0xFA	; 250
    1df8:	b3 e4       	ldi	r27, 0x43	; 67
    1dfa:	80 83       	st	Z, r24
    1dfc:	91 83       	std	Z+1, r25	; 0x01
    1dfe:	a2 83       	std	Z+2, r26	; 0x02
    1e00:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e02:	8e 01       	movw	r16, r28
    1e04:	07 59       	subi	r16, 0x97	; 151
    1e06:	1f 4f       	sbci	r17, 0xFF	; 255
    1e08:	fe 01       	movw	r30, r28
    1e0a:	e3 59       	subi	r30, 0x93	; 147
    1e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0e:	60 81       	ld	r22, Z
    1e10:	71 81       	ldd	r23, Z+1	; 0x01
    1e12:	82 81       	ldd	r24, Z+2	; 0x02
    1e14:	93 81       	ldd	r25, Z+3	; 0x03
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	30 e8       	ldi	r19, 0x80	; 128
    1e1a:	4b e3       	ldi	r20, 0x3B	; 59
    1e1c:	55 e4       	ldi	r21, 0x45	; 69
    1e1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	f8 01       	movw	r30, r16
    1e28:	80 83       	st	Z, r24
    1e2a:	91 83       	std	Z+1, r25	; 0x01
    1e2c:	a2 83       	std	Z+2, r26	; 0x02
    1e2e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e30:	fe 01       	movw	r30, r28
    1e32:	e7 59       	subi	r30, 0x97	; 151
    1e34:	ff 4f       	sbci	r31, 0xFF	; 255
    1e36:	60 81       	ld	r22, Z
    1e38:	71 81       	ldd	r23, Z+1	; 0x01
    1e3a:	82 81       	ldd	r24, Z+2	; 0x02
    1e3c:	93 81       	ldd	r25, Z+3	; 0x03
    1e3e:	20 e0       	ldi	r18, 0x00	; 0
    1e40:	30 e0       	ldi	r19, 0x00	; 0
    1e42:	40 e8       	ldi	r20, 0x80	; 128
    1e44:	5f e3       	ldi	r21, 0x3F	; 63
    1e46:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e4a:	88 23       	and	r24, r24
    1e4c:	44 f4       	brge	.+16     	; 0x1e5e <SmartHomeMenu+0xd2e>
		__ticks = 1;
    1e4e:	fe 01       	movw	r30, r28
    1e50:	e9 59       	subi	r30, 0x99	; 153
    1e52:	ff 4f       	sbci	r31, 0xFF	; 255
    1e54:	81 e0       	ldi	r24, 0x01	; 1
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	91 83       	std	Z+1, r25	; 0x01
    1e5a:	80 83       	st	Z, r24
    1e5c:	64 c0       	rjmp	.+200    	; 0x1f26 <SmartHomeMenu+0xdf6>
	else if (__tmp > 65535)
    1e5e:	fe 01       	movw	r30, r28
    1e60:	e7 59       	subi	r30, 0x97	; 151
    1e62:	ff 4f       	sbci	r31, 0xFF	; 255
    1e64:	60 81       	ld	r22, Z
    1e66:	71 81       	ldd	r23, Z+1	; 0x01
    1e68:	82 81       	ldd	r24, Z+2	; 0x02
    1e6a:	93 81       	ldd	r25, Z+3	; 0x03
    1e6c:	20 e0       	ldi	r18, 0x00	; 0
    1e6e:	3f ef       	ldi	r19, 0xFF	; 255
    1e70:	4f e7       	ldi	r20, 0x7F	; 127
    1e72:	57 e4       	ldi	r21, 0x47	; 71
    1e74:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e78:	18 16       	cp	r1, r24
    1e7a:	0c f0       	brlt	.+2      	; 0x1e7e <SmartHomeMenu+0xd4e>
    1e7c:	43 c0       	rjmp	.+134    	; 0x1f04 <SmartHomeMenu+0xdd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e7e:	fe 01       	movw	r30, r28
    1e80:	e3 59       	subi	r30, 0x93	; 147
    1e82:	ff 4f       	sbci	r31, 0xFF	; 255
    1e84:	60 81       	ld	r22, Z
    1e86:	71 81       	ldd	r23, Z+1	; 0x01
    1e88:	82 81       	ldd	r24, Z+2	; 0x02
    1e8a:	93 81       	ldd	r25, Z+3	; 0x03
    1e8c:	20 e0       	ldi	r18, 0x00	; 0
    1e8e:	30 e0       	ldi	r19, 0x00	; 0
    1e90:	40 e2       	ldi	r20, 0x20	; 32
    1e92:	51 e4       	ldi	r21, 0x41	; 65
    1e94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e98:	dc 01       	movw	r26, r24
    1e9a:	cb 01       	movw	r24, r22
    1e9c:	8e 01       	movw	r16, r28
    1e9e:	09 59       	subi	r16, 0x99	; 153
    1ea0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea2:	bc 01       	movw	r22, r24
    1ea4:	cd 01       	movw	r24, r26
    1ea6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1eaa:	dc 01       	movw	r26, r24
    1eac:	cb 01       	movw	r24, r22
    1eae:	f8 01       	movw	r30, r16
    1eb0:	91 83       	std	Z+1, r25	; 0x01
    1eb2:	80 83       	st	Z, r24
    1eb4:	1f c0       	rjmp	.+62     	; 0x1ef4 <SmartHomeMenu+0xdc4>
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	eb 59       	subi	r30, 0x9B	; 155
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	8c e2       	ldi	r24, 0x2C	; 44
    1ebe:	91 e0       	ldi	r25, 0x01	; 1
    1ec0:	91 83       	std	Z+1, r25	; 0x01
    1ec2:	80 83       	st	Z, r24
    1ec4:	fe 01       	movw	r30, r28
    1ec6:	eb 59       	subi	r30, 0x9B	; 155
    1ec8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eca:	80 81       	ld	r24, Z
    1ecc:	91 81       	ldd	r25, Z+1	; 0x01
    1ece:	01 97       	sbiw	r24, 0x01	; 1
    1ed0:	f1 f7       	brne	.-4      	; 0x1ece <SmartHomeMenu+0xd9e>
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	eb 59       	subi	r30, 0x9B	; 155
    1ed6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed8:	91 83       	std	Z+1, r25	; 0x01
    1eda:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1edc:	de 01       	movw	r26, r28
    1ede:	a9 59       	subi	r26, 0x99	; 153
    1ee0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ee2:	fe 01       	movw	r30, r28
    1ee4:	e9 59       	subi	r30, 0x99	; 153
    1ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee8:	80 81       	ld	r24, Z
    1eea:	91 81       	ldd	r25, Z+1	; 0x01
    1eec:	01 97       	sbiw	r24, 0x01	; 1
    1eee:	11 96       	adiw	r26, 0x01	; 1
    1ef0:	9c 93       	st	X, r25
    1ef2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ef4:	fe 01       	movw	r30, r28
    1ef6:	e9 59       	subi	r30, 0x99	; 153
    1ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    1efa:	80 81       	ld	r24, Z
    1efc:	91 81       	ldd	r25, Z+1	; 0x01
    1efe:	00 97       	sbiw	r24, 0x00	; 0
    1f00:	d1 f6       	brne	.-76     	; 0x1eb6 <SmartHomeMenu+0xd86>
    1f02:	27 c0       	rjmp	.+78     	; 0x1f52 <SmartHomeMenu+0xe22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f04:	8e 01       	movw	r16, r28
    1f06:	09 59       	subi	r16, 0x99	; 153
    1f08:	1f 4f       	sbci	r17, 0xFF	; 255
    1f0a:	fe 01       	movw	r30, r28
    1f0c:	e7 59       	subi	r30, 0x97	; 151
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	60 81       	ld	r22, Z
    1f12:	71 81       	ldd	r23, Z+1	; 0x01
    1f14:	82 81       	ldd	r24, Z+2	; 0x02
    1f16:	93 81       	ldd	r25, Z+3	; 0x03
    1f18:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	f8 01       	movw	r30, r16
    1f22:	91 83       	std	Z+1, r25	; 0x01
    1f24:	80 83       	st	Z, r24
    1f26:	de 01       	movw	r26, r28
    1f28:	ad 59       	subi	r26, 0x9D	; 157
    1f2a:	bf 4f       	sbci	r27, 0xFF	; 255
    1f2c:	fe 01       	movw	r30, r28
    1f2e:	e9 59       	subi	r30, 0x99	; 153
    1f30:	ff 4f       	sbci	r31, 0xFF	; 255
    1f32:	80 81       	ld	r24, Z
    1f34:	91 81       	ldd	r25, Z+1	; 0x01
    1f36:	8d 93       	st	X+, r24
    1f38:	9c 93       	st	X, r25
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	ed 59       	subi	r30, 0x9D	; 157
    1f3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f40:	80 81       	ld	r24, Z
    1f42:	91 81       	ldd	r25, Z+1	; 0x01
    1f44:	01 97       	sbiw	r24, 0x01	; 1
    1f46:	f1 f7       	brne	.-4      	; 0x1f44 <SmartHomeMenu+0xe14>
    1f48:	fe 01       	movw	r30, r28
    1f4a:	ed 59       	subi	r30, 0x9D	; 157
    1f4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	80 83       	st	Z, r24
			_delay_ms(500);
			HLCD_vClearDisplay();
    1f52:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    1f56:	50 c4       	rjmp	.+2208   	; 0x27f8 <SmartHomeMenu+0x16c8>
	}// cause of declaration

	// Door
	case '3':
	{
		u8 Door_Action = NO_KEY_PRESSED;
    1f58:	fe 01       	movw	r30, r28
    1f5a:	ed 52       	subi	r30, 0x2D	; 45
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	8f ef       	ldi	r24, 0xFF	; 255
    1f60:	80 83       	st	Z, r24
		HLCD_vClearDisplay();
    1f62:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
		HLCD_vDisplayString("1-Open 2-Close");
    1f66:	8d e3       	ldi	r24, 0x3D	; 61
    1f68:	91 e0       	ldi	r25, 0x01	; 1
    1f6a:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    1f6e:	82 e0       	ldi	r24, 0x02	; 2
    1f70:	61 e0       	ldi	r22, 0x01	; 1
    1f72:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
		HLCD_vDisplayString("3- Back");
    1f76:	84 ec       	ldi	r24, 0xC4	; 196
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    1f7e:	06 c0       	rjmp	.+12     	; 0x1f8c <SmartHomeMenu+0xe5c>
		while(Door_Action == NO_KEY_PRESSED)
		{
			Door_Action = HKEYPAD_u8GetPressedKey();
    1f80:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <HKEYPAD_u8GetPressedKey>
    1f84:	fe 01       	movw	r30, r28
    1f86:	ed 52       	subi	r30, 0x2D	; 45
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	80 83       	st	Z, r24
		u8 Door_Action = NO_KEY_PRESSED;
		HLCD_vClearDisplay();
		HLCD_vDisplayString("1-Open 2-Close");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("3- Back");
		while(Door_Action == NO_KEY_PRESSED)
    1f8c:	fe 01       	movw	r30, r28
    1f8e:	ed 52       	subi	r30, 0x2D	; 45
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	80 81       	ld	r24, Z
    1f94:	8f 3f       	cpi	r24, 0xFF	; 255
    1f96:	a1 f3       	breq	.-24     	; 0x1f80 <SmartHomeMenu+0xe50>
		{
			Door_Action = HKEYPAD_u8GetPressedKey();
		}

		switch (Door_Action)
    1f98:	fe 01       	movw	r30, r28
    1f9a:	ed 52       	subi	r30, 0x2D	; 45
    1f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9e:	80 81       	ld	r24, Z
    1fa0:	28 2f       	mov	r18, r24
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	c8 52       	subi	r28, 0x28	; 40
    1fa6:	df 4f       	sbci	r29, 0xFF	; 255
    1fa8:	39 83       	std	Y+1, r19	; 0x01
    1faa:	28 83       	st	Y, r18
    1fac:	c8 5d       	subi	r28, 0xD8	; 216
    1fae:	d0 40       	sbci	r29, 0x00	; 0
    1fb0:	c8 52       	subi	r28, 0x28	; 40
    1fb2:	df 4f       	sbci	r29, 0xFF	; 255
    1fb4:	88 81       	ld	r24, Y
    1fb6:	99 81       	ldd	r25, Y+1	; 0x01
    1fb8:	c8 5d       	subi	r28, 0xD8	; 216
    1fba:	d0 40       	sbci	r29, 0x00	; 0
    1fbc:	82 33       	cpi	r24, 0x32	; 50
    1fbe:	91 05       	cpc	r25, r1
    1fc0:	09 f4       	brne	.+2      	; 0x1fc4 <SmartHomeMenu+0xe94>
    1fc2:	22 c2       	rjmp	.+1092   	; 0x2408 <SmartHomeMenu+0x12d8>
    1fc4:	c8 52       	subi	r28, 0x28	; 40
    1fc6:	df 4f       	sbci	r29, 0xFF	; 255
    1fc8:	e8 81       	ld	r30, Y
    1fca:	f9 81       	ldd	r31, Y+1	; 0x01
    1fcc:	c8 5d       	subi	r28, 0xD8	; 216
    1fce:	d0 40       	sbci	r29, 0x00	; 0
    1fd0:	e3 33       	cpi	r30, 0x33	; 51
    1fd2:	f1 05       	cpc	r31, r1
    1fd4:	09 f4       	brne	.+2      	; 0x1fd8 <SmartHomeMenu+0xea8>
    1fd6:	8f c3       	rjmp	.+1822   	; 0x26f6 <SmartHomeMenu+0x15c6>
    1fd8:	c8 52       	subi	r28, 0x28	; 40
    1fda:	df 4f       	sbci	r29, 0xFF	; 255
    1fdc:	28 81       	ld	r18, Y
    1fde:	39 81       	ldd	r19, Y+1	; 0x01
    1fe0:	c8 5d       	subi	r28, 0xD8	; 216
    1fe2:	d0 40       	sbci	r29, 0x00	; 0
    1fe4:	21 33       	cpi	r18, 0x31	; 49
    1fe6:	31 05       	cpc	r19, r1
    1fe8:	09 f0       	breq	.+2      	; 0x1fec <SmartHomeMenu+0xebc>
    1fea:	00 c4       	rjmp	.+2048   	; 0x27ec <SmartHomeMenu+0x16bc>
		{

		case '1':
			if(DoorStatus == DOOR_CLOSE)
    1fec:	80 91 c6 02 	lds	r24, 0x02C6
    1ff0:	88 23       	and	r24, r24
    1ff2:	09 f0       	breq	.+2      	; 0x1ff6 <SmartHomeMenu+0xec6>
    1ff4:	7b c1       	rjmp	.+758    	; 0x22ec <SmartHomeMenu+0x11bc>
			{
				HLCD_vClearDisplay();
    1ff6:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HDCM_vRotateCW();
    1ffa:	0e 94 00 28 	call	0x5000	; 0x5000 <HDCM_vRotateCW>
				HLCD_vDisplayString("Door Opening");
    1ffe:	8c e4       	ldi	r24, 0x4C	; 76
    2000:	91 e0       	ldi	r25, 0x01	; 1
    2002:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    2006:	fe 01       	movw	r30, r28
    2008:	e1 5a       	subi	r30, 0xA1	; 161
    200a:	ff 4f       	sbci	r31, 0xFF	; 255
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	90 e0       	ldi	r25, 0x00	; 0
    2010:	aa ef       	ldi	r26, 0xFA	; 250
    2012:	b4 e4       	ldi	r27, 0x44	; 68
    2014:	80 83       	st	Z, r24
    2016:	91 83       	std	Z+1, r25	; 0x01
    2018:	a2 83       	std	Z+2, r26	; 0x02
    201a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    201c:	8e 01       	movw	r16, r28
    201e:	05 5a       	subi	r16, 0xA5	; 165
    2020:	1f 4f       	sbci	r17, 0xFF	; 255
    2022:	fe 01       	movw	r30, r28
    2024:	e1 5a       	subi	r30, 0xA1	; 161
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	60 81       	ld	r22, Z
    202a:	71 81       	ldd	r23, Z+1	; 0x01
    202c:	82 81       	ldd	r24, Z+2	; 0x02
    202e:	93 81       	ldd	r25, Z+3	; 0x03
    2030:	20 e0       	ldi	r18, 0x00	; 0
    2032:	30 e8       	ldi	r19, 0x80	; 128
    2034:	4b e3       	ldi	r20, 0x3B	; 59
    2036:	55 e4       	ldi	r21, 0x45	; 69
    2038:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    203c:	dc 01       	movw	r26, r24
    203e:	cb 01       	movw	r24, r22
    2040:	f8 01       	movw	r30, r16
    2042:	80 83       	st	Z, r24
    2044:	91 83       	std	Z+1, r25	; 0x01
    2046:	a2 83       	std	Z+2, r26	; 0x02
    2048:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    204a:	fe 01       	movw	r30, r28
    204c:	e5 5a       	subi	r30, 0xA5	; 165
    204e:	ff 4f       	sbci	r31, 0xFF	; 255
    2050:	60 81       	ld	r22, Z
    2052:	71 81       	ldd	r23, Z+1	; 0x01
    2054:	82 81       	ldd	r24, Z+2	; 0x02
    2056:	93 81       	ldd	r25, Z+3	; 0x03
    2058:	20 e0       	ldi	r18, 0x00	; 0
    205a:	30 e0       	ldi	r19, 0x00	; 0
    205c:	40 e8       	ldi	r20, 0x80	; 128
    205e:	5f e3       	ldi	r21, 0x3F	; 63
    2060:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2064:	88 23       	and	r24, r24
    2066:	44 f4       	brge	.+16     	; 0x2078 <SmartHomeMenu+0xf48>
		__ticks = 1;
    2068:	fe 01       	movw	r30, r28
    206a:	e7 5a       	subi	r30, 0xA7	; 167
    206c:	ff 4f       	sbci	r31, 0xFF	; 255
    206e:	81 e0       	ldi	r24, 0x01	; 1
    2070:	90 e0       	ldi	r25, 0x00	; 0
    2072:	91 83       	std	Z+1, r25	; 0x01
    2074:	80 83       	st	Z, r24
    2076:	64 c0       	rjmp	.+200    	; 0x2140 <SmartHomeMenu+0x1010>
	else if (__tmp > 65535)
    2078:	fe 01       	movw	r30, r28
    207a:	e5 5a       	subi	r30, 0xA5	; 165
    207c:	ff 4f       	sbci	r31, 0xFF	; 255
    207e:	60 81       	ld	r22, Z
    2080:	71 81       	ldd	r23, Z+1	; 0x01
    2082:	82 81       	ldd	r24, Z+2	; 0x02
    2084:	93 81       	ldd	r25, Z+3	; 0x03
    2086:	20 e0       	ldi	r18, 0x00	; 0
    2088:	3f ef       	ldi	r19, 0xFF	; 255
    208a:	4f e7       	ldi	r20, 0x7F	; 127
    208c:	57 e4       	ldi	r21, 0x47	; 71
    208e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2092:	18 16       	cp	r1, r24
    2094:	0c f0       	brlt	.+2      	; 0x2098 <SmartHomeMenu+0xf68>
    2096:	43 c0       	rjmp	.+134    	; 0x211e <SmartHomeMenu+0xfee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2098:	fe 01       	movw	r30, r28
    209a:	e1 5a       	subi	r30, 0xA1	; 161
    209c:	ff 4f       	sbci	r31, 0xFF	; 255
    209e:	60 81       	ld	r22, Z
    20a0:	71 81       	ldd	r23, Z+1	; 0x01
    20a2:	82 81       	ldd	r24, Z+2	; 0x02
    20a4:	93 81       	ldd	r25, Z+3	; 0x03
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	40 e2       	ldi	r20, 0x20	; 32
    20ac:	51 e4       	ldi	r21, 0x41	; 65
    20ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20b2:	dc 01       	movw	r26, r24
    20b4:	cb 01       	movw	r24, r22
    20b6:	8e 01       	movw	r16, r28
    20b8:	07 5a       	subi	r16, 0xA7	; 167
    20ba:	1f 4f       	sbci	r17, 0xFF	; 255
    20bc:	bc 01       	movw	r22, r24
    20be:	cd 01       	movw	r24, r26
    20c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	f8 01       	movw	r30, r16
    20ca:	91 83       	std	Z+1, r25	; 0x01
    20cc:	80 83       	st	Z, r24
    20ce:	1f c0       	rjmp	.+62     	; 0x210e <SmartHomeMenu+0xfde>
    20d0:	fe 01       	movw	r30, r28
    20d2:	e9 5a       	subi	r30, 0xA9	; 169
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	8c e2       	ldi	r24, 0x2C	; 44
    20d8:	91 e0       	ldi	r25, 0x01	; 1
    20da:	91 83       	std	Z+1, r25	; 0x01
    20dc:	80 83       	st	Z, r24
    20de:	fe 01       	movw	r30, r28
    20e0:	e9 5a       	subi	r30, 0xA9	; 169
    20e2:	ff 4f       	sbci	r31, 0xFF	; 255
    20e4:	80 81       	ld	r24, Z
    20e6:	91 81       	ldd	r25, Z+1	; 0x01
    20e8:	01 97       	sbiw	r24, 0x01	; 1
    20ea:	f1 f7       	brne	.-4      	; 0x20e8 <SmartHomeMenu+0xfb8>
    20ec:	fe 01       	movw	r30, r28
    20ee:	e9 5a       	subi	r30, 0xA9	; 169
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	91 83       	std	Z+1, r25	; 0x01
    20f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20f6:	de 01       	movw	r26, r28
    20f8:	a7 5a       	subi	r26, 0xA7	; 167
    20fa:	bf 4f       	sbci	r27, 0xFF	; 255
    20fc:	fe 01       	movw	r30, r28
    20fe:	e7 5a       	subi	r30, 0xA7	; 167
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	80 81       	ld	r24, Z
    2104:	91 81       	ldd	r25, Z+1	; 0x01
    2106:	01 97       	sbiw	r24, 0x01	; 1
    2108:	11 96       	adiw	r26, 0x01	; 1
    210a:	9c 93       	st	X, r25
    210c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    210e:	fe 01       	movw	r30, r28
    2110:	e7 5a       	subi	r30, 0xA7	; 167
    2112:	ff 4f       	sbci	r31, 0xFF	; 255
    2114:	80 81       	ld	r24, Z
    2116:	91 81       	ldd	r25, Z+1	; 0x01
    2118:	00 97       	sbiw	r24, 0x00	; 0
    211a:	d1 f6       	brne	.-76     	; 0x20d0 <SmartHomeMenu+0xfa0>
    211c:	27 c0       	rjmp	.+78     	; 0x216c <SmartHomeMenu+0x103c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    211e:	8e 01       	movw	r16, r28
    2120:	07 5a       	subi	r16, 0xA7	; 167
    2122:	1f 4f       	sbci	r17, 0xFF	; 255
    2124:	fe 01       	movw	r30, r28
    2126:	e5 5a       	subi	r30, 0xA5	; 165
    2128:	ff 4f       	sbci	r31, 0xFF	; 255
    212a:	60 81       	ld	r22, Z
    212c:	71 81       	ldd	r23, Z+1	; 0x01
    212e:	82 81       	ldd	r24, Z+2	; 0x02
    2130:	93 81       	ldd	r25, Z+3	; 0x03
    2132:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2136:	dc 01       	movw	r26, r24
    2138:	cb 01       	movw	r24, r22
    213a:	f8 01       	movw	r30, r16
    213c:	91 83       	std	Z+1, r25	; 0x01
    213e:	80 83       	st	Z, r24
    2140:	de 01       	movw	r26, r28
    2142:	ab 5a       	subi	r26, 0xAB	; 171
    2144:	bf 4f       	sbci	r27, 0xFF	; 255
    2146:	fe 01       	movw	r30, r28
    2148:	e7 5a       	subi	r30, 0xA7	; 167
    214a:	ff 4f       	sbci	r31, 0xFF	; 255
    214c:	80 81       	ld	r24, Z
    214e:	91 81       	ldd	r25, Z+1	; 0x01
    2150:	8d 93       	st	X+, r24
    2152:	9c 93       	st	X, r25
    2154:	fe 01       	movw	r30, r28
    2156:	eb 5a       	subi	r30, 0xAB	; 171
    2158:	ff 4f       	sbci	r31, 0xFF	; 255
    215a:	80 81       	ld	r24, Z
    215c:	91 81       	ldd	r25, Z+1	; 0x01
    215e:	01 97       	sbiw	r24, 0x01	; 1
    2160:	f1 f7       	brne	.-4      	; 0x215e <SmartHomeMenu+0x102e>
    2162:	fe 01       	movw	r30, r28
    2164:	eb 5a       	subi	r30, 0xAB	; 171
    2166:	ff 4f       	sbci	r31, 0xFF	; 255
    2168:	91 83       	std	Z+1, r25	; 0x01
    216a:	80 83       	st	Z, r24
				_delay_ms(2000);
				HDCM_vStop();
    216c:	0e 94 22 28 	call	0x5044	; 0x5044 <HDCM_vStop>
				HLCD_vClearDisplay();
    2170:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Opened");
    2174:	89 e5       	ldi	r24, 0x59	; 89
    2176:	91 e0       	ldi	r25, 0x01	; 1
    2178:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    217c:	fe 01       	movw	r30, r28
    217e:	ef 5a       	subi	r30, 0xAF	; 175
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	80 e0       	ldi	r24, 0x00	; 0
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	aa e7       	ldi	r26, 0x7A	; 122
    2188:	b4 e4       	ldi	r27, 0x44	; 68
    218a:	80 83       	st	Z, r24
    218c:	91 83       	std	Z+1, r25	; 0x01
    218e:	a2 83       	std	Z+2, r26	; 0x02
    2190:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2192:	8e 01       	movw	r16, r28
    2194:	03 5b       	subi	r16, 0xB3	; 179
    2196:	1f 4f       	sbci	r17, 0xFF	; 255
    2198:	fe 01       	movw	r30, r28
    219a:	ef 5a       	subi	r30, 0xAF	; 175
    219c:	ff 4f       	sbci	r31, 0xFF	; 255
    219e:	60 81       	ld	r22, Z
    21a0:	71 81       	ldd	r23, Z+1	; 0x01
    21a2:	82 81       	ldd	r24, Z+2	; 0x02
    21a4:	93 81       	ldd	r25, Z+3	; 0x03
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	30 e8       	ldi	r19, 0x80	; 128
    21aa:	4b e3       	ldi	r20, 0x3B	; 59
    21ac:	55 e4       	ldi	r21, 0x45	; 69
    21ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21b2:	dc 01       	movw	r26, r24
    21b4:	cb 01       	movw	r24, r22
    21b6:	f8 01       	movw	r30, r16
    21b8:	80 83       	st	Z, r24
    21ba:	91 83       	std	Z+1, r25	; 0x01
    21bc:	a2 83       	std	Z+2, r26	; 0x02
    21be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21c0:	fe 01       	movw	r30, r28
    21c2:	e3 5b       	subi	r30, 0xB3	; 179
    21c4:	ff 4f       	sbci	r31, 0xFF	; 255
    21c6:	60 81       	ld	r22, Z
    21c8:	71 81       	ldd	r23, Z+1	; 0x01
    21ca:	82 81       	ldd	r24, Z+2	; 0x02
    21cc:	93 81       	ldd	r25, Z+3	; 0x03
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	40 e8       	ldi	r20, 0x80	; 128
    21d4:	5f e3       	ldi	r21, 0x3F	; 63
    21d6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    21da:	88 23       	and	r24, r24
    21dc:	44 f4       	brge	.+16     	; 0x21ee <SmartHomeMenu+0x10be>
		__ticks = 1;
    21de:	fe 01       	movw	r30, r28
    21e0:	e5 5b       	subi	r30, 0xB5	; 181
    21e2:	ff 4f       	sbci	r31, 0xFF	; 255
    21e4:	81 e0       	ldi	r24, 0x01	; 1
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	91 83       	std	Z+1, r25	; 0x01
    21ea:	80 83       	st	Z, r24
    21ec:	64 c0       	rjmp	.+200    	; 0x22b6 <SmartHomeMenu+0x1186>
	else if (__tmp > 65535)
    21ee:	fe 01       	movw	r30, r28
    21f0:	e3 5b       	subi	r30, 0xB3	; 179
    21f2:	ff 4f       	sbci	r31, 0xFF	; 255
    21f4:	60 81       	ld	r22, Z
    21f6:	71 81       	ldd	r23, Z+1	; 0x01
    21f8:	82 81       	ldd	r24, Z+2	; 0x02
    21fa:	93 81       	ldd	r25, Z+3	; 0x03
    21fc:	20 e0       	ldi	r18, 0x00	; 0
    21fe:	3f ef       	ldi	r19, 0xFF	; 255
    2200:	4f e7       	ldi	r20, 0x7F	; 127
    2202:	57 e4       	ldi	r21, 0x47	; 71
    2204:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2208:	18 16       	cp	r1, r24
    220a:	0c f0       	brlt	.+2      	; 0x220e <SmartHomeMenu+0x10de>
    220c:	43 c0       	rjmp	.+134    	; 0x2294 <SmartHomeMenu+0x1164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    220e:	fe 01       	movw	r30, r28
    2210:	ef 5a       	subi	r30, 0xAF	; 175
    2212:	ff 4f       	sbci	r31, 0xFF	; 255
    2214:	60 81       	ld	r22, Z
    2216:	71 81       	ldd	r23, Z+1	; 0x01
    2218:	82 81       	ldd	r24, Z+2	; 0x02
    221a:	93 81       	ldd	r25, Z+3	; 0x03
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	40 e2       	ldi	r20, 0x20	; 32
    2222:	51 e4       	ldi	r21, 0x41	; 65
    2224:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2228:	dc 01       	movw	r26, r24
    222a:	cb 01       	movw	r24, r22
    222c:	8e 01       	movw	r16, r28
    222e:	05 5b       	subi	r16, 0xB5	; 181
    2230:	1f 4f       	sbci	r17, 0xFF	; 255
    2232:	bc 01       	movw	r22, r24
    2234:	cd 01       	movw	r24, r26
    2236:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    223a:	dc 01       	movw	r26, r24
    223c:	cb 01       	movw	r24, r22
    223e:	f8 01       	movw	r30, r16
    2240:	91 83       	std	Z+1, r25	; 0x01
    2242:	80 83       	st	Z, r24
    2244:	1f c0       	rjmp	.+62     	; 0x2284 <SmartHomeMenu+0x1154>
    2246:	fe 01       	movw	r30, r28
    2248:	e7 5b       	subi	r30, 0xB7	; 183
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	8c e2       	ldi	r24, 0x2C	; 44
    224e:	91 e0       	ldi	r25, 0x01	; 1
    2250:	91 83       	std	Z+1, r25	; 0x01
    2252:	80 83       	st	Z, r24
    2254:	fe 01       	movw	r30, r28
    2256:	e7 5b       	subi	r30, 0xB7	; 183
    2258:	ff 4f       	sbci	r31, 0xFF	; 255
    225a:	80 81       	ld	r24, Z
    225c:	91 81       	ldd	r25, Z+1	; 0x01
    225e:	01 97       	sbiw	r24, 0x01	; 1
    2260:	f1 f7       	brne	.-4      	; 0x225e <SmartHomeMenu+0x112e>
    2262:	fe 01       	movw	r30, r28
    2264:	e7 5b       	subi	r30, 0xB7	; 183
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    226c:	de 01       	movw	r26, r28
    226e:	a5 5b       	subi	r26, 0xB5	; 181
    2270:	bf 4f       	sbci	r27, 0xFF	; 255
    2272:	fe 01       	movw	r30, r28
    2274:	e5 5b       	subi	r30, 0xB5	; 181
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	80 81       	ld	r24, Z
    227a:	91 81       	ldd	r25, Z+1	; 0x01
    227c:	01 97       	sbiw	r24, 0x01	; 1
    227e:	11 96       	adiw	r26, 0x01	; 1
    2280:	9c 93       	st	X, r25
    2282:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2284:	fe 01       	movw	r30, r28
    2286:	e5 5b       	subi	r30, 0xB5	; 181
    2288:	ff 4f       	sbci	r31, 0xFF	; 255
    228a:	80 81       	ld	r24, Z
    228c:	91 81       	ldd	r25, Z+1	; 0x01
    228e:	00 97       	sbiw	r24, 0x00	; 0
    2290:	d1 f6       	brne	.-76     	; 0x2246 <SmartHomeMenu+0x1116>
    2292:	28 c0       	rjmp	.+80     	; 0x22e4 <SmartHomeMenu+0x11b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2294:	8e 01       	movw	r16, r28
    2296:	05 5b       	subi	r16, 0xB5	; 181
    2298:	1f 4f       	sbci	r17, 0xFF	; 255
    229a:	fe 01       	movw	r30, r28
    229c:	e3 5b       	subi	r30, 0xB3	; 179
    229e:	ff 4f       	sbci	r31, 0xFF	; 255
    22a0:	60 81       	ld	r22, Z
    22a2:	71 81       	ldd	r23, Z+1	; 0x01
    22a4:	82 81       	ldd	r24, Z+2	; 0x02
    22a6:	93 81       	ldd	r25, Z+3	; 0x03
    22a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22ac:	dc 01       	movw	r26, r24
    22ae:	cb 01       	movw	r24, r22
    22b0:	f8 01       	movw	r30, r16
    22b2:	91 83       	std	Z+1, r25	; 0x01
    22b4:	80 83       	st	Z, r24
    22b6:	de 01       	movw	r26, r28
    22b8:	a9 5b       	subi	r26, 0xB9	; 185
    22ba:	bf 4f       	sbci	r27, 0xFF	; 255
    22bc:	fe 01       	movw	r30, r28
    22be:	e5 5b       	subi	r30, 0xB5	; 181
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	80 81       	ld	r24, Z
    22c4:	91 81       	ldd	r25, Z+1	; 0x01
    22c6:	11 96       	adiw	r26, 0x01	; 1
    22c8:	9c 93       	st	X, r25
    22ca:	8e 93       	st	-X, r24
    22cc:	fe 01       	movw	r30, r28
    22ce:	e9 5b       	subi	r30, 0xB9	; 185
    22d0:	ff 4f       	sbci	r31, 0xFF	; 255
    22d2:	80 81       	ld	r24, Z
    22d4:	91 81       	ldd	r25, Z+1	; 0x01
    22d6:	01 97       	sbiw	r24, 0x01	; 1
    22d8:	f1 f7       	brne	.-4      	; 0x22d6 <SmartHomeMenu+0x11a6>
    22da:	fe 01       	movw	r30, r28
    22dc:	e9 5b       	subi	r30, 0xB9	; 185
    22de:	ff 4f       	sbci	r31, 0xFF	; 255
    22e0:	91 83       	std	Z+1, r25	; 0x01
    22e2:	80 83       	st	Z, r24
				_delay_ms(1000);
				DoorStatus = DOOR_OPEN;
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	80 93 c6 02 	sts	0x02C6, r24
    22ea:	86 c2       	rjmp	.+1292   	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    22ec:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Opened");
    22f0:	80 e6       	ldi	r24, 0x60	; 96
    22f2:	91 e0       	ldi	r25, 0x01	; 1
    22f4:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    22f8:	fe 01       	movw	r30, r28
    22fa:	ed 5b       	subi	r30, 0xBD	; 189
    22fc:	ff 4f       	sbci	r31, 0xFF	; 255
    22fe:	80 e0       	ldi	r24, 0x00	; 0
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	aa e7       	ldi	r26, 0x7A	; 122
    2304:	b4 e4       	ldi	r27, 0x44	; 68
    2306:	80 83       	st	Z, r24
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	a2 83       	std	Z+2, r26	; 0x02
    230c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    230e:	8e 01       	movw	r16, r28
    2310:	01 5c       	subi	r16, 0xC1	; 193
    2312:	1f 4f       	sbci	r17, 0xFF	; 255
    2314:	fe 01       	movw	r30, r28
    2316:	ed 5b       	subi	r30, 0xBD	; 189
    2318:	ff 4f       	sbci	r31, 0xFF	; 255
    231a:	60 81       	ld	r22, Z
    231c:	71 81       	ldd	r23, Z+1	; 0x01
    231e:	82 81       	ldd	r24, Z+2	; 0x02
    2320:	93 81       	ldd	r25, Z+3	; 0x03
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	30 e8       	ldi	r19, 0x80	; 128
    2326:	4b e3       	ldi	r20, 0x3B	; 59
    2328:	55 e4       	ldi	r21, 0x45	; 69
    232a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    232e:	dc 01       	movw	r26, r24
    2330:	cb 01       	movw	r24, r22
    2332:	f8 01       	movw	r30, r16
    2334:	80 83       	st	Z, r24
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	a2 83       	std	Z+2, r26	; 0x02
    233a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    233c:	fe 01       	movw	r30, r28
    233e:	ff 96       	adiw	r30, 0x3f	; 63
    2340:	60 81       	ld	r22, Z
    2342:	71 81       	ldd	r23, Z+1	; 0x01
    2344:	82 81       	ldd	r24, Z+2	; 0x02
    2346:	93 81       	ldd	r25, Z+3	; 0x03
    2348:	20 e0       	ldi	r18, 0x00	; 0
    234a:	30 e0       	ldi	r19, 0x00	; 0
    234c:	40 e8       	ldi	r20, 0x80	; 128
    234e:	5f e3       	ldi	r21, 0x3F	; 63
    2350:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2354:	88 23       	and	r24, r24
    2356:	2c f4       	brge	.+10     	; 0x2362 <SmartHomeMenu+0x1232>
		__ticks = 1;
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	9e af       	std	Y+62, r25	; 0x3e
    235e:	8d af       	std	Y+61, r24	; 0x3d
    2360:	46 c0       	rjmp	.+140    	; 0x23ee <SmartHomeMenu+0x12be>
	else if (__tmp > 65535)
    2362:	fe 01       	movw	r30, r28
    2364:	ff 96       	adiw	r30, 0x3f	; 63
    2366:	60 81       	ld	r22, Z
    2368:	71 81       	ldd	r23, Z+1	; 0x01
    236a:	82 81       	ldd	r24, Z+2	; 0x02
    236c:	93 81       	ldd	r25, Z+3	; 0x03
    236e:	20 e0       	ldi	r18, 0x00	; 0
    2370:	3f ef       	ldi	r19, 0xFF	; 255
    2372:	4f e7       	ldi	r20, 0x7F	; 127
    2374:	57 e4       	ldi	r21, 0x47	; 71
    2376:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    237a:	18 16       	cp	r1, r24
    237c:	64 f5       	brge	.+88     	; 0x23d6 <SmartHomeMenu+0x12a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    237e:	fe 01       	movw	r30, r28
    2380:	ed 5b       	subi	r30, 0xBD	; 189
    2382:	ff 4f       	sbci	r31, 0xFF	; 255
    2384:	60 81       	ld	r22, Z
    2386:	71 81       	ldd	r23, Z+1	; 0x01
    2388:	82 81       	ldd	r24, Z+2	; 0x02
    238a:	93 81       	ldd	r25, Z+3	; 0x03
    238c:	20 e0       	ldi	r18, 0x00	; 0
    238e:	30 e0       	ldi	r19, 0x00	; 0
    2390:	40 e2       	ldi	r20, 0x20	; 32
    2392:	51 e4       	ldi	r21, 0x41	; 65
    2394:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2398:	dc 01       	movw	r26, r24
    239a:	cb 01       	movw	r24, r22
    239c:	bc 01       	movw	r22, r24
    239e:	cd 01       	movw	r24, r26
    23a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23a4:	dc 01       	movw	r26, r24
    23a6:	cb 01       	movw	r24, r22
    23a8:	9e af       	std	Y+62, r25	; 0x3e
    23aa:	8d af       	std	Y+61, r24	; 0x3d
    23ac:	0f c0       	rjmp	.+30     	; 0x23cc <SmartHomeMenu+0x129c>
    23ae:	8c e2       	ldi	r24, 0x2C	; 44
    23b0:	91 e0       	ldi	r25, 0x01	; 1
    23b2:	9c af       	std	Y+60, r25	; 0x3c
    23b4:	8b af       	std	Y+59, r24	; 0x3b
    23b6:	8b ad       	ldd	r24, Y+59	; 0x3b
    23b8:	9c ad       	ldd	r25, Y+60	; 0x3c
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	f1 f7       	brne	.-4      	; 0x23ba <SmartHomeMenu+0x128a>
    23be:	9c af       	std	Y+60, r25	; 0x3c
    23c0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23c2:	8d ad       	ldd	r24, Y+61	; 0x3d
    23c4:	9e ad       	ldd	r25, Y+62	; 0x3e
    23c6:	01 97       	sbiw	r24, 0x01	; 1
    23c8:	9e af       	std	Y+62, r25	; 0x3e
    23ca:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23cc:	8d ad       	ldd	r24, Y+61	; 0x3d
    23ce:	9e ad       	ldd	r25, Y+62	; 0x3e
    23d0:	00 97       	sbiw	r24, 0x00	; 0
    23d2:	69 f7       	brne	.-38     	; 0x23ae <SmartHomeMenu+0x127e>
    23d4:	16 c0       	rjmp	.+44     	; 0x2402 <SmartHomeMenu+0x12d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d6:	fe 01       	movw	r30, r28
    23d8:	ff 96       	adiw	r30, 0x3f	; 63
    23da:	60 81       	ld	r22, Z
    23dc:	71 81       	ldd	r23, Z+1	; 0x01
    23de:	82 81       	ldd	r24, Z+2	; 0x02
    23e0:	93 81       	ldd	r25, Z+3	; 0x03
    23e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23e6:	dc 01       	movw	r26, r24
    23e8:	cb 01       	movw	r24, r22
    23ea:	9e af       	std	Y+62, r25	; 0x3e
    23ec:	8d af       	std	Y+61, r24	; 0x3d
    23ee:	8d ad       	ldd	r24, Y+61	; 0x3d
    23f0:	9e ad       	ldd	r25, Y+62	; 0x3e
    23f2:	9a af       	std	Y+58, r25	; 0x3a
    23f4:	89 af       	std	Y+57, r24	; 0x39
    23f6:	89 ad       	ldd	r24, Y+57	; 0x39
    23f8:	9a ad       	ldd	r25, Y+58	; 0x3a
    23fa:	01 97       	sbiw	r24, 0x01	; 1
    23fc:	f1 f7       	brne	.-4      	; 0x23fa <SmartHomeMenu+0x12ca>
    23fe:	9a af       	std	Y+58, r25	; 0x3a
    2400:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(1000);
				HLCD_vClearDisplay();
    2402:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    2406:	f8 c1       	rjmp	.+1008   	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			break;

		case '2':
			if(DoorStatus == DOOR_OPEN)
    2408:	80 91 c6 02 	lds	r24, 0x02C6
    240c:	81 30       	cpi	r24, 0x01	; 1
    240e:	09 f0       	breq	.+2      	; 0x2412 <SmartHomeMenu+0x12e2>
    2410:	f7 c0       	rjmp	.+494    	; 0x2600 <SmartHomeMenu+0x14d0>
			{
				HLCD_vClearDisplay();
    2412:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HDCM_vRotateCCW();
    2416:	0e 94 11 28 	call	0x5022	; 0x5022 <HDCM_vRotateCCW>
				HLCD_vDisplayString("Door Closing");
    241a:	8f e6       	ldi	r24, 0x6F	; 111
    241c:	91 e0       	ldi	r25, 0x01	; 1
    241e:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    2422:	80 e0       	ldi	r24, 0x00	; 0
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	aa ef       	ldi	r26, 0xFA	; 250
    2428:	b4 e4       	ldi	r27, 0x44	; 68
    242a:	8d ab       	std	Y+53, r24	; 0x35
    242c:	9e ab       	std	Y+54, r25	; 0x36
    242e:	af ab       	std	Y+55, r26	; 0x37
    2430:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2432:	6d a9       	ldd	r22, Y+53	; 0x35
    2434:	7e a9       	ldd	r23, Y+54	; 0x36
    2436:	8f a9       	ldd	r24, Y+55	; 0x37
    2438:	98 ad       	ldd	r25, Y+56	; 0x38
    243a:	20 e0       	ldi	r18, 0x00	; 0
    243c:	30 e8       	ldi	r19, 0x80	; 128
    243e:	4b e3       	ldi	r20, 0x3B	; 59
    2440:	55 e4       	ldi	r21, 0x45	; 69
    2442:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	89 ab       	std	Y+49, r24	; 0x31
    244c:	9a ab       	std	Y+50, r25	; 0x32
    244e:	ab ab       	std	Y+51, r26	; 0x33
    2450:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2452:	69 a9       	ldd	r22, Y+49	; 0x31
    2454:	7a a9       	ldd	r23, Y+50	; 0x32
    2456:	8b a9       	ldd	r24, Y+51	; 0x33
    2458:	9c a9       	ldd	r25, Y+52	; 0x34
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	30 e0       	ldi	r19, 0x00	; 0
    245e:	40 e8       	ldi	r20, 0x80	; 128
    2460:	5f e3       	ldi	r21, 0x3F	; 63
    2462:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2466:	88 23       	and	r24, r24
    2468:	2c f4       	brge	.+10     	; 0x2474 <SmartHomeMenu+0x1344>
		__ticks = 1;
    246a:	81 e0       	ldi	r24, 0x01	; 1
    246c:	90 e0       	ldi	r25, 0x00	; 0
    246e:	98 ab       	std	Y+48, r25	; 0x30
    2470:	8f a7       	std	Y+47, r24	; 0x2f
    2472:	3f c0       	rjmp	.+126    	; 0x24f2 <SmartHomeMenu+0x13c2>
	else if (__tmp > 65535)
    2474:	69 a9       	ldd	r22, Y+49	; 0x31
    2476:	7a a9       	ldd	r23, Y+50	; 0x32
    2478:	8b a9       	ldd	r24, Y+51	; 0x33
    247a:	9c a9       	ldd	r25, Y+52	; 0x34
    247c:	20 e0       	ldi	r18, 0x00	; 0
    247e:	3f ef       	ldi	r19, 0xFF	; 255
    2480:	4f e7       	ldi	r20, 0x7F	; 127
    2482:	57 e4       	ldi	r21, 0x47	; 71
    2484:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2488:	18 16       	cp	r1, r24
    248a:	4c f5       	brge	.+82     	; 0x24de <SmartHomeMenu+0x13ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    248c:	6d a9       	ldd	r22, Y+53	; 0x35
    248e:	7e a9       	ldd	r23, Y+54	; 0x36
    2490:	8f a9       	ldd	r24, Y+55	; 0x37
    2492:	98 ad       	ldd	r25, Y+56	; 0x38
    2494:	20 e0       	ldi	r18, 0x00	; 0
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	40 e2       	ldi	r20, 0x20	; 32
    249a:	51 e4       	ldi	r21, 0x41	; 65
    249c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24a0:	dc 01       	movw	r26, r24
    24a2:	cb 01       	movw	r24, r22
    24a4:	bc 01       	movw	r22, r24
    24a6:	cd 01       	movw	r24, r26
    24a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24ac:	dc 01       	movw	r26, r24
    24ae:	cb 01       	movw	r24, r22
    24b0:	98 ab       	std	Y+48, r25	; 0x30
    24b2:	8f a7       	std	Y+47, r24	; 0x2f
    24b4:	0f c0       	rjmp	.+30     	; 0x24d4 <SmartHomeMenu+0x13a4>
    24b6:	8c e2       	ldi	r24, 0x2C	; 44
    24b8:	91 e0       	ldi	r25, 0x01	; 1
    24ba:	9e a7       	std	Y+46, r25	; 0x2e
    24bc:	8d a7       	std	Y+45, r24	; 0x2d
    24be:	8d a5       	ldd	r24, Y+45	; 0x2d
    24c0:	9e a5       	ldd	r25, Y+46	; 0x2e
    24c2:	01 97       	sbiw	r24, 0x01	; 1
    24c4:	f1 f7       	brne	.-4      	; 0x24c2 <SmartHomeMenu+0x1392>
    24c6:	9e a7       	std	Y+46, r25	; 0x2e
    24c8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    24cc:	98 a9       	ldd	r25, Y+48	; 0x30
    24ce:	01 97       	sbiw	r24, 0x01	; 1
    24d0:	98 ab       	std	Y+48, r25	; 0x30
    24d2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24d4:	8f a5       	ldd	r24, Y+47	; 0x2f
    24d6:	98 a9       	ldd	r25, Y+48	; 0x30
    24d8:	00 97       	sbiw	r24, 0x00	; 0
    24da:	69 f7       	brne	.-38     	; 0x24b6 <SmartHomeMenu+0x1386>
    24dc:	14 c0       	rjmp	.+40     	; 0x2506 <SmartHomeMenu+0x13d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24de:	69 a9       	ldd	r22, Y+49	; 0x31
    24e0:	7a a9       	ldd	r23, Y+50	; 0x32
    24e2:	8b a9       	ldd	r24, Y+51	; 0x33
    24e4:	9c a9       	ldd	r25, Y+52	; 0x34
    24e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24ea:	dc 01       	movw	r26, r24
    24ec:	cb 01       	movw	r24, r22
    24ee:	98 ab       	std	Y+48, r25	; 0x30
    24f0:	8f a7       	std	Y+47, r24	; 0x2f
    24f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    24f4:	98 a9       	ldd	r25, Y+48	; 0x30
    24f6:	9c a7       	std	Y+44, r25	; 0x2c
    24f8:	8b a7       	std	Y+43, r24	; 0x2b
    24fa:	8b a5       	ldd	r24, Y+43	; 0x2b
    24fc:	9c a5       	ldd	r25, Y+44	; 0x2c
    24fe:	01 97       	sbiw	r24, 0x01	; 1
    2500:	f1 f7       	brne	.-4      	; 0x24fe <SmartHomeMenu+0x13ce>
    2502:	9c a7       	std	Y+44, r25	; 0x2c
    2504:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(2000);
				HDCM_vStop();
    2506:	0e 94 22 28 	call	0x5044	; 0x5044 <HDCM_vStop>
				HLCD_vClearDisplay();
    250a:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Closed");
    250e:	8c e7       	ldi	r24, 0x7C	; 124
    2510:	91 e0       	ldi	r25, 0x01	; 1
    2512:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    2516:	80 e0       	ldi	r24, 0x00	; 0
    2518:	90 e0       	ldi	r25, 0x00	; 0
    251a:	aa e7       	ldi	r26, 0x7A	; 122
    251c:	b4 e4       	ldi	r27, 0x44	; 68
    251e:	8f a3       	std	Y+39, r24	; 0x27
    2520:	98 a7       	std	Y+40, r25	; 0x28
    2522:	a9 a7       	std	Y+41, r26	; 0x29
    2524:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2526:	6f a1       	ldd	r22, Y+39	; 0x27
    2528:	78 a5       	ldd	r23, Y+40	; 0x28
    252a:	89 a5       	ldd	r24, Y+41	; 0x29
    252c:	9a a5       	ldd	r25, Y+42	; 0x2a
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	30 e8       	ldi	r19, 0x80	; 128
    2532:	4b e3       	ldi	r20, 0x3B	; 59
    2534:	55 e4       	ldi	r21, 0x45	; 69
    2536:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	8b a3       	std	Y+35, r24	; 0x23
    2540:	9c a3       	std	Y+36, r25	; 0x24
    2542:	ad a3       	std	Y+37, r26	; 0x25
    2544:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2546:	6b a1       	ldd	r22, Y+35	; 0x23
    2548:	7c a1       	ldd	r23, Y+36	; 0x24
    254a:	8d a1       	ldd	r24, Y+37	; 0x25
    254c:	9e a1       	ldd	r25, Y+38	; 0x26
    254e:	20 e0       	ldi	r18, 0x00	; 0
    2550:	30 e0       	ldi	r19, 0x00	; 0
    2552:	40 e8       	ldi	r20, 0x80	; 128
    2554:	5f e3       	ldi	r21, 0x3F	; 63
    2556:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    255a:	88 23       	and	r24, r24
    255c:	2c f4       	brge	.+10     	; 0x2568 <SmartHomeMenu+0x1438>
		__ticks = 1;
    255e:	81 e0       	ldi	r24, 0x01	; 1
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	9a a3       	std	Y+34, r25	; 0x22
    2564:	89 a3       	std	Y+33, r24	; 0x21
    2566:	3f c0       	rjmp	.+126    	; 0x25e6 <SmartHomeMenu+0x14b6>
	else if (__tmp > 65535)
    2568:	6b a1       	ldd	r22, Y+35	; 0x23
    256a:	7c a1       	ldd	r23, Y+36	; 0x24
    256c:	8d a1       	ldd	r24, Y+37	; 0x25
    256e:	9e a1       	ldd	r25, Y+38	; 0x26
    2570:	20 e0       	ldi	r18, 0x00	; 0
    2572:	3f ef       	ldi	r19, 0xFF	; 255
    2574:	4f e7       	ldi	r20, 0x7F	; 127
    2576:	57 e4       	ldi	r21, 0x47	; 71
    2578:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    257c:	18 16       	cp	r1, r24
    257e:	4c f5       	brge	.+82     	; 0x25d2 <SmartHomeMenu+0x14a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2580:	6f a1       	ldd	r22, Y+39	; 0x27
    2582:	78 a5       	ldd	r23, Y+40	; 0x28
    2584:	89 a5       	ldd	r24, Y+41	; 0x29
    2586:	9a a5       	ldd	r25, Y+42	; 0x2a
    2588:	20 e0       	ldi	r18, 0x00	; 0
    258a:	30 e0       	ldi	r19, 0x00	; 0
    258c:	40 e2       	ldi	r20, 0x20	; 32
    258e:	51 e4       	ldi	r21, 0x41	; 65
    2590:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2594:	dc 01       	movw	r26, r24
    2596:	cb 01       	movw	r24, r22
    2598:	bc 01       	movw	r22, r24
    259a:	cd 01       	movw	r24, r26
    259c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25a0:	dc 01       	movw	r26, r24
    25a2:	cb 01       	movw	r24, r22
    25a4:	9a a3       	std	Y+34, r25	; 0x22
    25a6:	89 a3       	std	Y+33, r24	; 0x21
    25a8:	0f c0       	rjmp	.+30     	; 0x25c8 <SmartHomeMenu+0x1498>
    25aa:	8c e2       	ldi	r24, 0x2C	; 44
    25ac:	91 e0       	ldi	r25, 0x01	; 1
    25ae:	98 a3       	std	Y+32, r25	; 0x20
    25b0:	8f 8f       	std	Y+31, r24	; 0x1f
    25b2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    25b4:	98 a1       	ldd	r25, Y+32	; 0x20
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	f1 f7       	brne	.-4      	; 0x25b6 <SmartHomeMenu+0x1486>
    25ba:	98 a3       	std	Y+32, r25	; 0x20
    25bc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25be:	89 a1       	ldd	r24, Y+33	; 0x21
    25c0:	9a a1       	ldd	r25, Y+34	; 0x22
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	9a a3       	std	Y+34, r25	; 0x22
    25c6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25c8:	89 a1       	ldd	r24, Y+33	; 0x21
    25ca:	9a a1       	ldd	r25, Y+34	; 0x22
    25cc:	00 97       	sbiw	r24, 0x00	; 0
    25ce:	69 f7       	brne	.-38     	; 0x25aa <SmartHomeMenu+0x147a>
    25d0:	14 c0       	rjmp	.+40     	; 0x25fa <SmartHomeMenu+0x14ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25d2:	6b a1       	ldd	r22, Y+35	; 0x23
    25d4:	7c a1       	ldd	r23, Y+36	; 0x24
    25d6:	8d a1       	ldd	r24, Y+37	; 0x25
    25d8:	9e a1       	ldd	r25, Y+38	; 0x26
    25da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25de:	dc 01       	movw	r26, r24
    25e0:	cb 01       	movw	r24, r22
    25e2:	9a a3       	std	Y+34, r25	; 0x22
    25e4:	89 a3       	std	Y+33, r24	; 0x21
    25e6:	89 a1       	ldd	r24, Y+33	; 0x21
    25e8:	9a a1       	ldd	r25, Y+34	; 0x22
    25ea:	9e 8f       	std	Y+30, r25	; 0x1e
    25ec:	8d 8f       	std	Y+29, r24	; 0x1d
    25ee:	8d 8d       	ldd	r24, Y+29	; 0x1d
    25f0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    25f2:	01 97       	sbiw	r24, 0x01	; 1
    25f4:	f1 f7       	brne	.-4      	; 0x25f2 <SmartHomeMenu+0x14c2>
    25f6:	9e 8f       	std	Y+30, r25	; 0x1e
    25f8:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(1000);
				DoorStatus = DOOR_CLOSE;
    25fa:	10 92 c6 02 	sts	0x02C6, r1
    25fe:	fc c0       	rjmp	.+504    	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    2600:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Closed");
    2604:	83 e8       	ldi	r24, 0x83	; 131
    2606:	91 e0       	ldi	r25, 0x01	; 1
    2608:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    260c:	80 e0       	ldi	r24, 0x00	; 0
    260e:	90 e0       	ldi	r25, 0x00	; 0
    2610:	aa e7       	ldi	r26, 0x7A	; 122
    2612:	b4 e4       	ldi	r27, 0x44	; 68
    2614:	89 8f       	std	Y+25, r24	; 0x19
    2616:	9a 8f       	std	Y+26, r25	; 0x1a
    2618:	ab 8f       	std	Y+27, r26	; 0x1b
    261a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    261c:	69 8d       	ldd	r22, Y+25	; 0x19
    261e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2620:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2622:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2624:	20 e0       	ldi	r18, 0x00	; 0
    2626:	30 e8       	ldi	r19, 0x80	; 128
    2628:	4b e3       	ldi	r20, 0x3B	; 59
    262a:	55 e4       	ldi	r21, 0x45	; 69
    262c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2630:	dc 01       	movw	r26, r24
    2632:	cb 01       	movw	r24, r22
    2634:	8d 8b       	std	Y+21, r24	; 0x15
    2636:	9e 8b       	std	Y+22, r25	; 0x16
    2638:	af 8b       	std	Y+23, r26	; 0x17
    263a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    263c:	6d 89       	ldd	r22, Y+21	; 0x15
    263e:	7e 89       	ldd	r23, Y+22	; 0x16
    2640:	8f 89       	ldd	r24, Y+23	; 0x17
    2642:	98 8d       	ldd	r25, Y+24	; 0x18
    2644:	20 e0       	ldi	r18, 0x00	; 0
    2646:	30 e0       	ldi	r19, 0x00	; 0
    2648:	40 e8       	ldi	r20, 0x80	; 128
    264a:	5f e3       	ldi	r21, 0x3F	; 63
    264c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2650:	88 23       	and	r24, r24
    2652:	2c f4       	brge	.+10     	; 0x265e <SmartHomeMenu+0x152e>
		__ticks = 1;
    2654:	81 e0       	ldi	r24, 0x01	; 1
    2656:	90 e0       	ldi	r25, 0x00	; 0
    2658:	9c 8b       	std	Y+20, r25	; 0x14
    265a:	8b 8b       	std	Y+19, r24	; 0x13
    265c:	3f c0       	rjmp	.+126    	; 0x26dc <SmartHomeMenu+0x15ac>
	else if (__tmp > 65535)
    265e:	6d 89       	ldd	r22, Y+21	; 0x15
    2660:	7e 89       	ldd	r23, Y+22	; 0x16
    2662:	8f 89       	ldd	r24, Y+23	; 0x17
    2664:	98 8d       	ldd	r25, Y+24	; 0x18
    2666:	20 e0       	ldi	r18, 0x00	; 0
    2668:	3f ef       	ldi	r19, 0xFF	; 255
    266a:	4f e7       	ldi	r20, 0x7F	; 127
    266c:	57 e4       	ldi	r21, 0x47	; 71
    266e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2672:	18 16       	cp	r1, r24
    2674:	4c f5       	brge	.+82     	; 0x26c8 <SmartHomeMenu+0x1598>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2676:	69 8d       	ldd	r22, Y+25	; 0x19
    2678:	7a 8d       	ldd	r23, Y+26	; 0x1a
    267a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    267c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	40 e2       	ldi	r20, 0x20	; 32
    2684:	51 e4       	ldi	r21, 0x41	; 65
    2686:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    268a:	dc 01       	movw	r26, r24
    268c:	cb 01       	movw	r24, r22
    268e:	bc 01       	movw	r22, r24
    2690:	cd 01       	movw	r24, r26
    2692:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	9c 8b       	std	Y+20, r25	; 0x14
    269c:	8b 8b       	std	Y+19, r24	; 0x13
    269e:	0f c0       	rjmp	.+30     	; 0x26be <SmartHomeMenu+0x158e>
    26a0:	8c e2       	ldi	r24, 0x2C	; 44
    26a2:	91 e0       	ldi	r25, 0x01	; 1
    26a4:	9a 8b       	std	Y+18, r25	; 0x12
    26a6:	89 8b       	std	Y+17, r24	; 0x11
    26a8:	89 89       	ldd	r24, Y+17	; 0x11
    26aa:	9a 89       	ldd	r25, Y+18	; 0x12
    26ac:	01 97       	sbiw	r24, 0x01	; 1
    26ae:	f1 f7       	brne	.-4      	; 0x26ac <SmartHomeMenu+0x157c>
    26b0:	9a 8b       	std	Y+18, r25	; 0x12
    26b2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26b4:	8b 89       	ldd	r24, Y+19	; 0x13
    26b6:	9c 89       	ldd	r25, Y+20	; 0x14
    26b8:	01 97       	sbiw	r24, 0x01	; 1
    26ba:	9c 8b       	std	Y+20, r25	; 0x14
    26bc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26be:	8b 89       	ldd	r24, Y+19	; 0x13
    26c0:	9c 89       	ldd	r25, Y+20	; 0x14
    26c2:	00 97       	sbiw	r24, 0x00	; 0
    26c4:	69 f7       	brne	.-38     	; 0x26a0 <SmartHomeMenu+0x1570>
    26c6:	14 c0       	rjmp	.+40     	; 0x26f0 <SmartHomeMenu+0x15c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c8:	6d 89       	ldd	r22, Y+21	; 0x15
    26ca:	7e 89       	ldd	r23, Y+22	; 0x16
    26cc:	8f 89       	ldd	r24, Y+23	; 0x17
    26ce:	98 8d       	ldd	r25, Y+24	; 0x18
    26d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26d4:	dc 01       	movw	r26, r24
    26d6:	cb 01       	movw	r24, r22
    26d8:	9c 8b       	std	Y+20, r25	; 0x14
    26da:	8b 8b       	std	Y+19, r24	; 0x13
    26dc:	8b 89       	ldd	r24, Y+19	; 0x13
    26de:	9c 89       	ldd	r25, Y+20	; 0x14
    26e0:	98 8b       	std	Y+16, r25	; 0x10
    26e2:	8f 87       	std	Y+15, r24	; 0x0f
    26e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    26e6:	98 89       	ldd	r25, Y+16	; 0x10
    26e8:	01 97       	sbiw	r24, 0x01	; 1
    26ea:	f1 f7       	brne	.-4      	; 0x26e8 <SmartHomeMenu+0x15b8>
    26ec:	98 8b       	std	Y+16, r25	; 0x10
    26ee:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(1000);
				HLCD_vClearDisplay();
    26f0:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    26f4:	81 c0       	rjmp	.+258    	; 0x27f8 <SmartHomeMenu+0x16c8>
			}
			break;


		case '3':
			HLCD_vClearDisplay();
    26f6:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    26fa:	88 ef       	ldi	r24, 0xF8	; 248
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
    2702:	80 e0       	ldi	r24, 0x00	; 0
    2704:	90 e0       	ldi	r25, 0x00	; 0
    2706:	a8 e4       	ldi	r26, 0x48	; 72
    2708:	b3 e4       	ldi	r27, 0x43	; 67
    270a:	8b 87       	std	Y+11, r24	; 0x0b
    270c:	9c 87       	std	Y+12, r25	; 0x0c
    270e:	ad 87       	std	Y+13, r26	; 0x0d
    2710:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2712:	6b 85       	ldd	r22, Y+11	; 0x0b
    2714:	7c 85       	ldd	r23, Y+12	; 0x0c
    2716:	8d 85       	ldd	r24, Y+13	; 0x0d
    2718:	9e 85       	ldd	r25, Y+14	; 0x0e
    271a:	20 e0       	ldi	r18, 0x00	; 0
    271c:	30 e8       	ldi	r19, 0x80	; 128
    271e:	4b e3       	ldi	r20, 0x3B	; 59
    2720:	55 e4       	ldi	r21, 0x45	; 69
    2722:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2726:	dc 01       	movw	r26, r24
    2728:	cb 01       	movw	r24, r22
    272a:	8f 83       	std	Y+7, r24	; 0x07
    272c:	98 87       	std	Y+8, r25	; 0x08
    272e:	a9 87       	std	Y+9, r26	; 0x09
    2730:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2732:	6f 81       	ldd	r22, Y+7	; 0x07
    2734:	78 85       	ldd	r23, Y+8	; 0x08
    2736:	89 85       	ldd	r24, Y+9	; 0x09
    2738:	9a 85       	ldd	r25, Y+10	; 0x0a
    273a:	20 e0       	ldi	r18, 0x00	; 0
    273c:	30 e0       	ldi	r19, 0x00	; 0
    273e:	40 e8       	ldi	r20, 0x80	; 128
    2740:	5f e3       	ldi	r21, 0x3F	; 63
    2742:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2746:	88 23       	and	r24, r24
    2748:	2c f4       	brge	.+10     	; 0x2754 <SmartHomeMenu+0x1624>
		__ticks = 1;
    274a:	81 e0       	ldi	r24, 0x01	; 1
    274c:	90 e0       	ldi	r25, 0x00	; 0
    274e:	9e 83       	std	Y+6, r25	; 0x06
    2750:	8d 83       	std	Y+5, r24	; 0x05
    2752:	3f c0       	rjmp	.+126    	; 0x27d2 <SmartHomeMenu+0x16a2>
	else if (__tmp > 65535)
    2754:	6f 81       	ldd	r22, Y+7	; 0x07
    2756:	78 85       	ldd	r23, Y+8	; 0x08
    2758:	89 85       	ldd	r24, Y+9	; 0x09
    275a:	9a 85       	ldd	r25, Y+10	; 0x0a
    275c:	20 e0       	ldi	r18, 0x00	; 0
    275e:	3f ef       	ldi	r19, 0xFF	; 255
    2760:	4f e7       	ldi	r20, 0x7F	; 127
    2762:	57 e4       	ldi	r21, 0x47	; 71
    2764:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2768:	18 16       	cp	r1, r24
    276a:	4c f5       	brge	.+82     	; 0x27be <SmartHomeMenu+0x168e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    276c:	6b 85       	ldd	r22, Y+11	; 0x0b
    276e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2770:	8d 85       	ldd	r24, Y+13	; 0x0d
    2772:	9e 85       	ldd	r25, Y+14	; 0x0e
    2774:	20 e0       	ldi	r18, 0x00	; 0
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	40 e2       	ldi	r20, 0x20	; 32
    277a:	51 e4       	ldi	r21, 0x41	; 65
    277c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2780:	dc 01       	movw	r26, r24
    2782:	cb 01       	movw	r24, r22
    2784:	bc 01       	movw	r22, r24
    2786:	cd 01       	movw	r24, r26
    2788:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    278c:	dc 01       	movw	r26, r24
    278e:	cb 01       	movw	r24, r22
    2790:	9e 83       	std	Y+6, r25	; 0x06
    2792:	8d 83       	std	Y+5, r24	; 0x05
    2794:	0f c0       	rjmp	.+30     	; 0x27b4 <SmartHomeMenu+0x1684>
    2796:	8c e2       	ldi	r24, 0x2C	; 44
    2798:	91 e0       	ldi	r25, 0x01	; 1
    279a:	9c 83       	std	Y+4, r25	; 0x04
    279c:	8b 83       	std	Y+3, r24	; 0x03
    279e:	8b 81       	ldd	r24, Y+3	; 0x03
    27a0:	9c 81       	ldd	r25, Y+4	; 0x04
    27a2:	01 97       	sbiw	r24, 0x01	; 1
    27a4:	f1 f7       	brne	.-4      	; 0x27a2 <SmartHomeMenu+0x1672>
    27a6:	9c 83       	std	Y+4, r25	; 0x04
    27a8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27aa:	8d 81       	ldd	r24, Y+5	; 0x05
    27ac:	9e 81       	ldd	r25, Y+6	; 0x06
    27ae:	01 97       	sbiw	r24, 0x01	; 1
    27b0:	9e 83       	std	Y+6, r25	; 0x06
    27b2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27b4:	8d 81       	ldd	r24, Y+5	; 0x05
    27b6:	9e 81       	ldd	r25, Y+6	; 0x06
    27b8:	00 97       	sbiw	r24, 0x00	; 0
    27ba:	69 f7       	brne	.-38     	; 0x2796 <SmartHomeMenu+0x1666>
    27bc:	14 c0       	rjmp	.+40     	; 0x27e6 <SmartHomeMenu+0x16b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27be:	6f 81       	ldd	r22, Y+7	; 0x07
    27c0:	78 85       	ldd	r23, Y+8	; 0x08
    27c2:	89 85       	ldd	r24, Y+9	; 0x09
    27c4:	9a 85       	ldd	r25, Y+10	; 0x0a
    27c6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27ca:	dc 01       	movw	r26, r24
    27cc:	cb 01       	movw	r24, r22
    27ce:	9e 83       	std	Y+6, r25	; 0x06
    27d0:	8d 83       	std	Y+5, r24	; 0x05
    27d2:	8d 81       	ldd	r24, Y+5	; 0x05
    27d4:	9e 81       	ldd	r25, Y+6	; 0x06
    27d6:	9a 83       	std	Y+2, r25	; 0x02
    27d8:	89 83       	std	Y+1, r24	; 0x01
    27da:	89 81       	ldd	r24, Y+1	; 0x01
    27dc:	9a 81       	ldd	r25, Y+2	; 0x02
    27de:	01 97       	sbiw	r24, 0x01	; 1
    27e0:	f1 f7       	brne	.-4      	; 0x27de <SmartHomeMenu+0x16ae>
    27e2:	9a 83       	std	Y+2, r25	; 0x02
    27e4:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(200);
			HLCD_vClearDisplay();
    27e6:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
    27ea:	06 c0       	rjmp	.+12     	; 0x27f8 <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    27ec:	0e 94 a0 24 	call	0x4940	; 0x4940 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    27f0:	8d ef       	ldi	r24, 0xFD	; 253
    27f2:	90 e0       	ldi	r25, 0x00	; 0
    27f4:	0e 94 5c 25 	call	0x4ab8	; 0x4ab8 <HLCD_vDisplayString>
		}
		break; // Case 1 Break
	}

}
}
    27f8:	c1 52       	subi	r28, 0x21	; 33
    27fa:	df 4f       	sbci	r29, 0xFF	; 255
    27fc:	0f b6       	in	r0, 0x3f	; 63
    27fe:	f8 94       	cli
    2800:	de bf       	out	0x3e, r29	; 62
    2802:	0f be       	out	0x3f, r0	; 63
    2804:	cd bf       	out	0x3d, r28	; 61
    2806:	cf 91       	pop	r28
    2808:	df 91       	pop	r29
    280a:	1f 91       	pop	r17
    280c:	0f 91       	pop	r16
    280e:	08 95       	ret

00002810 <main>:



void main(void)
{
    2810:	df 93       	push	r29
    2812:	cf 93       	push	r28
    2814:	cd b7       	in	r28, 0x3d	; 61
    2816:	de b7       	in	r29, 0x3e	; 62
	// Init of KEYPAD , LCD , 7-Segment , DC Motor
	HKEYPAD_vInit();
    2818:	0e 94 3d 26 	call	0x4c7a	; 0x4c7a <HKEYPAD_vInit>
	HLCD_vInit();
    281c:	0e 94 26 22 	call	0x444c	; 0x444c <HLCD_vInit>
	HSSD_vInit(SSD_PORT);
    2820:	81 e0       	ldi	r24, 0x01	; 1
    2822:	0e 94 78 1a 	call	0x34f0	; 0x34f0 <HSSD_vInit>
	HDCM_vInit();
    2826:	0e 94 ef 27 	call	0x4fde	; 0x4fde <HDCM_vInit>
	HBUZZER_vInit();
    282a:	0e 94 33 28 	call	0x5066	; 0x5066 <HBUZZER_vInit>

	SmartHomeWelcome();
    282e:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <SmartHomeWelcome>
	SmartHomeLoginPassword(); // enter password and check it
    2832:	0e 94 f6 06 	call	0xdec	; 0xdec <SmartHomeLoginPassword>

	while(1)
	{
		SmartHomeMenu();
    2836:	0e 94 98 08 	call	0x1130	; 0x1130 <SmartHomeMenu>
    283a:	fd cf       	rjmp	.-6      	; 0x2836 <main+0x26>

0000283c <MDIO_vSetPinDir>:




void MDIO_vSetPinDir(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
    283c:	df 93       	push	r29
    283e:	cf 93       	push	r28
    2840:	cd b7       	in	r28, 0x3d	; 61
    2842:	de b7       	in	r29, 0x3e	; 62
    2844:	2d 97       	sbiw	r28, 0x0d	; 13
    2846:	0f b6       	in	r0, 0x3f	; 63
    2848:	f8 94       	cli
    284a:	de bf       	out	0x3e, r29	; 62
    284c:	0f be       	out	0x3f, r0	; 63
    284e:	cd bf       	out	0x3d, r28	; 61
    2850:	89 83       	std	Y+1, r24	; 0x01
    2852:	6a 83       	std	Y+2, r22	; 0x02
    2854:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
    2856:	89 81       	ldd	r24, Y+1	; 0x01
    2858:	84 30       	cpi	r24, 0x04	; 4
    285a:	08 f0       	brcs	.+2      	; 0x285e <MDIO_vSetPinDir+0x22>
    285c:	09 c1       	rjmp	.+530    	; 0x2a70 <MDIO_vSetPinDir+0x234>
    285e:	8a 81       	ldd	r24, Y+2	; 0x02
    2860:	88 30       	cpi	r24, 0x08	; 8
    2862:	08 f0       	brcs	.+2      	; 0x2866 <MDIO_vSetPinDir+0x2a>
    2864:	05 c1       	rjmp	.+522    	; 0x2a70 <MDIO_vSetPinDir+0x234>
    2866:	8b 81       	ldd	r24, Y+3	; 0x03
    2868:	82 30       	cpi	r24, 0x02	; 2
    286a:	08 f0       	brcs	.+2      	; 0x286e <MDIO_vSetPinDir+0x32>
    286c:	01 c1       	rjmp	.+514    	; 0x2a70 <MDIO_vSetPinDir+0x234>
	{
		switch (A_portID)
    286e:	89 81       	ldd	r24, Y+1	; 0x01
    2870:	28 2f       	mov	r18, r24
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	3d 87       	std	Y+13, r19	; 0x0d
    2876:	2c 87       	std	Y+12, r18	; 0x0c
    2878:	8c 85       	ldd	r24, Y+12	; 0x0c
    287a:	9d 85       	ldd	r25, Y+13	; 0x0d
    287c:	81 30       	cpi	r24, 0x01	; 1
    287e:	91 05       	cpc	r25, r1
    2880:	09 f4       	brne	.+2      	; 0x2884 <MDIO_vSetPinDir+0x48>
    2882:	4f c0       	rjmp	.+158    	; 0x2922 <MDIO_vSetPinDir+0xe6>
    2884:	2c 85       	ldd	r18, Y+12	; 0x0c
    2886:	3d 85       	ldd	r19, Y+13	; 0x0d
    2888:	22 30       	cpi	r18, 0x02	; 2
    288a:	31 05       	cpc	r19, r1
    288c:	2c f4       	brge	.+10     	; 0x2898 <MDIO_vSetPinDir+0x5c>
    288e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2890:	9d 85       	ldd	r25, Y+13	; 0x0d
    2892:	00 97       	sbiw	r24, 0x00	; 0
    2894:	71 f0       	breq	.+28     	; 0x28b2 <MDIO_vSetPinDir+0x76>
    2896:	ec c0       	rjmp	.+472    	; 0x2a70 <MDIO_vSetPinDir+0x234>
    2898:	2c 85       	ldd	r18, Y+12	; 0x0c
    289a:	3d 85       	ldd	r19, Y+13	; 0x0d
    289c:	22 30       	cpi	r18, 0x02	; 2
    289e:	31 05       	cpc	r19, r1
    28a0:	09 f4       	brne	.+2      	; 0x28a4 <MDIO_vSetPinDir+0x68>
    28a2:	77 c0       	rjmp	.+238    	; 0x2992 <MDIO_vSetPinDir+0x156>
    28a4:	8c 85       	ldd	r24, Y+12	; 0x0c
    28a6:	9d 85       	ldd	r25, Y+13	; 0x0d
    28a8:	83 30       	cpi	r24, 0x03	; 3
    28aa:	91 05       	cpc	r25, r1
    28ac:	09 f4       	brne	.+2      	; 0x28b0 <MDIO_vSetPinDir+0x74>
    28ae:	a9 c0       	rjmp	.+338    	; 0x2a02 <MDIO_vSetPinDir+0x1c6>
    28b0:	df c0       	rjmp	.+446    	; 0x2a70 <MDIO_vSetPinDir+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
    28b2:	8b 81       	ldd	r24, Y+3	; 0x03
    28b4:	28 2f       	mov	r18, r24
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	3b 87       	std	Y+11, r19	; 0x0b
    28ba:	2a 87       	std	Y+10, r18	; 0x0a
    28bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    28be:	9b 85       	ldd	r25, Y+11	; 0x0b
    28c0:	00 97       	sbiw	r24, 0x00	; 0
    28c2:	31 f0       	breq	.+12     	; 0x28d0 <MDIO_vSetPinDir+0x94>
    28c4:	2a 85       	ldd	r18, Y+10	; 0x0a
    28c6:	3b 85       	ldd	r19, Y+11	; 0x0b
    28c8:	21 30       	cpi	r18, 0x01	; 1
    28ca:	31 05       	cpc	r19, r1
    28cc:	b1 f0       	breq	.+44     	; 0x28fa <MDIO_vSetPinDir+0xbe>
    28ce:	d0 c0       	rjmp	.+416    	; 0x2a70 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
    28d0:	aa e3       	ldi	r26, 0x3A	; 58
    28d2:	b0 e0       	ldi	r27, 0x00	; 0
    28d4:	ea e3       	ldi	r30, 0x3A	; 58
    28d6:	f0 e0       	ldi	r31, 0x00	; 0
    28d8:	80 81       	ld	r24, Z
    28da:	48 2f       	mov	r20, r24
    28dc:	8a 81       	ldd	r24, Y+2	; 0x02
    28de:	28 2f       	mov	r18, r24
    28e0:	30 e0       	ldi	r19, 0x00	; 0
    28e2:	81 e0       	ldi	r24, 0x01	; 1
    28e4:	90 e0       	ldi	r25, 0x00	; 0
    28e6:	02 2e       	mov	r0, r18
    28e8:	02 c0       	rjmp	.+4      	; 0x28ee <MDIO_vSetPinDir+0xb2>
    28ea:	88 0f       	add	r24, r24
    28ec:	99 1f       	adc	r25, r25
    28ee:	0a 94       	dec	r0
    28f0:	e2 f7       	brpl	.-8      	; 0x28ea <MDIO_vSetPinDir+0xae>
    28f2:	80 95       	com	r24
    28f4:	84 23       	and	r24, r20
    28f6:	8c 93       	st	X, r24
    28f8:	bb c0       	rjmp	.+374    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
    28fa:	aa e3       	ldi	r26, 0x3A	; 58
    28fc:	b0 e0       	ldi	r27, 0x00	; 0
    28fe:	ea e3       	ldi	r30, 0x3A	; 58
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	80 81       	ld	r24, Z
    2904:	48 2f       	mov	r20, r24
    2906:	8a 81       	ldd	r24, Y+2	; 0x02
    2908:	28 2f       	mov	r18, r24
    290a:	30 e0       	ldi	r19, 0x00	; 0
    290c:	81 e0       	ldi	r24, 0x01	; 1
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	02 2e       	mov	r0, r18
    2912:	02 c0       	rjmp	.+4      	; 0x2918 <MDIO_vSetPinDir+0xdc>
    2914:	88 0f       	add	r24, r24
    2916:	99 1f       	adc	r25, r25
    2918:	0a 94       	dec	r0
    291a:	e2 f7       	brpl	.-8      	; 0x2914 <MDIO_vSetPinDir+0xd8>
    291c:	84 2b       	or	r24, r20
    291e:	8c 93       	st	X, r24
    2920:	a7 c0       	rjmp	.+334    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
    2922:	8b 81       	ldd	r24, Y+3	; 0x03
    2924:	28 2f       	mov	r18, r24
    2926:	30 e0       	ldi	r19, 0x00	; 0
    2928:	39 87       	std	Y+9, r19	; 0x09
    292a:	28 87       	std	Y+8, r18	; 0x08
    292c:	88 85       	ldd	r24, Y+8	; 0x08
    292e:	99 85       	ldd	r25, Y+9	; 0x09
    2930:	00 97       	sbiw	r24, 0x00	; 0
    2932:	31 f0       	breq	.+12     	; 0x2940 <MDIO_vSetPinDir+0x104>
    2934:	28 85       	ldd	r18, Y+8	; 0x08
    2936:	39 85       	ldd	r19, Y+9	; 0x09
    2938:	21 30       	cpi	r18, 0x01	; 1
    293a:	31 05       	cpc	r19, r1
    293c:	b1 f0       	breq	.+44     	; 0x296a <MDIO_vSetPinDir+0x12e>
    293e:	98 c0       	rjmp	.+304    	; 0x2a70 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
    2940:	a7 e3       	ldi	r26, 0x37	; 55
    2942:	b0 e0       	ldi	r27, 0x00	; 0
    2944:	e7 e3       	ldi	r30, 0x37	; 55
    2946:	f0 e0       	ldi	r31, 0x00	; 0
    2948:	80 81       	ld	r24, Z
    294a:	48 2f       	mov	r20, r24
    294c:	8a 81       	ldd	r24, Y+2	; 0x02
    294e:	28 2f       	mov	r18, r24
    2950:	30 e0       	ldi	r19, 0x00	; 0
    2952:	81 e0       	ldi	r24, 0x01	; 1
    2954:	90 e0       	ldi	r25, 0x00	; 0
    2956:	02 2e       	mov	r0, r18
    2958:	02 c0       	rjmp	.+4      	; 0x295e <MDIO_vSetPinDir+0x122>
    295a:	88 0f       	add	r24, r24
    295c:	99 1f       	adc	r25, r25
    295e:	0a 94       	dec	r0
    2960:	e2 f7       	brpl	.-8      	; 0x295a <MDIO_vSetPinDir+0x11e>
    2962:	80 95       	com	r24
    2964:	84 23       	and	r24, r20
    2966:	8c 93       	st	X, r24
    2968:	83 c0       	rjmp	.+262    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
    296a:	a7 e3       	ldi	r26, 0x37	; 55
    296c:	b0 e0       	ldi	r27, 0x00	; 0
    296e:	e7 e3       	ldi	r30, 0x37	; 55
    2970:	f0 e0       	ldi	r31, 0x00	; 0
    2972:	80 81       	ld	r24, Z
    2974:	48 2f       	mov	r20, r24
    2976:	8a 81       	ldd	r24, Y+2	; 0x02
    2978:	28 2f       	mov	r18, r24
    297a:	30 e0       	ldi	r19, 0x00	; 0
    297c:	81 e0       	ldi	r24, 0x01	; 1
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	02 2e       	mov	r0, r18
    2982:	02 c0       	rjmp	.+4      	; 0x2988 <MDIO_vSetPinDir+0x14c>
    2984:	88 0f       	add	r24, r24
    2986:	99 1f       	adc	r25, r25
    2988:	0a 94       	dec	r0
    298a:	e2 f7       	brpl	.-8      	; 0x2984 <MDIO_vSetPinDir+0x148>
    298c:	84 2b       	or	r24, r20
    298e:	8c 93       	st	X, r24
    2990:	6f c0       	rjmp	.+222    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
    2992:	8b 81       	ldd	r24, Y+3	; 0x03
    2994:	28 2f       	mov	r18, r24
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	3f 83       	std	Y+7, r19	; 0x07
    299a:	2e 83       	std	Y+6, r18	; 0x06
    299c:	8e 81       	ldd	r24, Y+6	; 0x06
    299e:	9f 81       	ldd	r25, Y+7	; 0x07
    29a0:	00 97       	sbiw	r24, 0x00	; 0
    29a2:	31 f0       	breq	.+12     	; 0x29b0 <MDIO_vSetPinDir+0x174>
    29a4:	2e 81       	ldd	r18, Y+6	; 0x06
    29a6:	3f 81       	ldd	r19, Y+7	; 0x07
    29a8:	21 30       	cpi	r18, 0x01	; 1
    29aa:	31 05       	cpc	r19, r1
    29ac:	b1 f0       	breq	.+44     	; 0x29da <MDIO_vSetPinDir+0x19e>
    29ae:	60 c0       	rjmp	.+192    	; 0x2a70 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
    29b0:	a4 e3       	ldi	r26, 0x34	; 52
    29b2:	b0 e0       	ldi	r27, 0x00	; 0
    29b4:	e4 e3       	ldi	r30, 0x34	; 52
    29b6:	f0 e0       	ldi	r31, 0x00	; 0
    29b8:	80 81       	ld	r24, Z
    29ba:	48 2f       	mov	r20, r24
    29bc:	8a 81       	ldd	r24, Y+2	; 0x02
    29be:	28 2f       	mov	r18, r24
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	81 e0       	ldi	r24, 0x01	; 1
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	02 2e       	mov	r0, r18
    29c8:	02 c0       	rjmp	.+4      	; 0x29ce <MDIO_vSetPinDir+0x192>
    29ca:	88 0f       	add	r24, r24
    29cc:	99 1f       	adc	r25, r25
    29ce:	0a 94       	dec	r0
    29d0:	e2 f7       	brpl	.-8      	; 0x29ca <MDIO_vSetPinDir+0x18e>
    29d2:	80 95       	com	r24
    29d4:	84 23       	and	r24, r20
    29d6:	8c 93       	st	X, r24
    29d8:	4b c0       	rjmp	.+150    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
    29da:	a4 e3       	ldi	r26, 0x34	; 52
    29dc:	b0 e0       	ldi	r27, 0x00	; 0
    29de:	e4 e3       	ldi	r30, 0x34	; 52
    29e0:	f0 e0       	ldi	r31, 0x00	; 0
    29e2:	80 81       	ld	r24, Z
    29e4:	48 2f       	mov	r20, r24
    29e6:	8a 81       	ldd	r24, Y+2	; 0x02
    29e8:	28 2f       	mov	r18, r24
    29ea:	30 e0       	ldi	r19, 0x00	; 0
    29ec:	81 e0       	ldi	r24, 0x01	; 1
    29ee:	90 e0       	ldi	r25, 0x00	; 0
    29f0:	02 2e       	mov	r0, r18
    29f2:	02 c0       	rjmp	.+4      	; 0x29f8 <MDIO_vSetPinDir+0x1bc>
    29f4:	88 0f       	add	r24, r24
    29f6:	99 1f       	adc	r25, r25
    29f8:	0a 94       	dec	r0
    29fa:	e2 f7       	brpl	.-8      	; 0x29f4 <MDIO_vSetPinDir+0x1b8>
    29fc:	84 2b       	or	r24, r20
    29fe:	8c 93       	st	X, r24
    2a00:	37 c0       	rjmp	.+110    	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
    2a02:	8b 81       	ldd	r24, Y+3	; 0x03
    2a04:	28 2f       	mov	r18, r24
    2a06:	30 e0       	ldi	r19, 0x00	; 0
    2a08:	3d 83       	std	Y+5, r19	; 0x05
    2a0a:	2c 83       	std	Y+4, r18	; 0x04
    2a0c:	8c 81       	ldd	r24, Y+4	; 0x04
    2a0e:	9d 81       	ldd	r25, Y+5	; 0x05
    2a10:	00 97       	sbiw	r24, 0x00	; 0
    2a12:	31 f0       	breq	.+12     	; 0x2a20 <MDIO_vSetPinDir+0x1e4>
    2a14:	2c 81       	ldd	r18, Y+4	; 0x04
    2a16:	3d 81       	ldd	r19, Y+5	; 0x05
    2a18:	21 30       	cpi	r18, 0x01	; 1
    2a1a:	31 05       	cpc	r19, r1
    2a1c:	b1 f0       	breq	.+44     	; 0x2a4a <MDIO_vSetPinDir+0x20e>
    2a1e:	28 c0       	rjmp	.+80     	; 0x2a70 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
    2a20:	a1 e3       	ldi	r26, 0x31	; 49
    2a22:	b0 e0       	ldi	r27, 0x00	; 0
    2a24:	e1 e3       	ldi	r30, 0x31	; 49
    2a26:	f0 e0       	ldi	r31, 0x00	; 0
    2a28:	80 81       	ld	r24, Z
    2a2a:	48 2f       	mov	r20, r24
    2a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a2e:	28 2f       	mov	r18, r24
    2a30:	30 e0       	ldi	r19, 0x00	; 0
    2a32:	81 e0       	ldi	r24, 0x01	; 1
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	02 2e       	mov	r0, r18
    2a38:	02 c0       	rjmp	.+4      	; 0x2a3e <MDIO_vSetPinDir+0x202>
    2a3a:	88 0f       	add	r24, r24
    2a3c:	99 1f       	adc	r25, r25
    2a3e:	0a 94       	dec	r0
    2a40:	e2 f7       	brpl	.-8      	; 0x2a3a <MDIO_vSetPinDir+0x1fe>
    2a42:	80 95       	com	r24
    2a44:	84 23       	and	r24, r20
    2a46:	8c 93       	st	X, r24
    2a48:	13 c0       	rjmp	.+38     	; 0x2a70 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
    2a4a:	a1 e3       	ldi	r26, 0x31	; 49
    2a4c:	b0 e0       	ldi	r27, 0x00	; 0
    2a4e:	e1 e3       	ldi	r30, 0x31	; 49
    2a50:	f0 e0       	ldi	r31, 0x00	; 0
    2a52:	80 81       	ld	r24, Z
    2a54:	48 2f       	mov	r20, r24
    2a56:	8a 81       	ldd	r24, Y+2	; 0x02
    2a58:	28 2f       	mov	r18, r24
    2a5a:	30 e0       	ldi	r19, 0x00	; 0
    2a5c:	81 e0       	ldi	r24, 0x01	; 1
    2a5e:	90 e0       	ldi	r25, 0x00	; 0
    2a60:	02 2e       	mov	r0, r18
    2a62:	02 c0       	rjmp	.+4      	; 0x2a68 <MDIO_vSetPinDir+0x22c>
    2a64:	88 0f       	add	r24, r24
    2a66:	99 1f       	adc	r25, r25
    2a68:	0a 94       	dec	r0
    2a6a:	e2 f7       	brpl	.-8      	; 0x2a64 <MDIO_vSetPinDir+0x228>
    2a6c:	84 2b       	or	r24, r20
    2a6e:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2a70:	2d 96       	adiw	r28, 0x0d	; 13
    2a72:	0f b6       	in	r0, 0x3f	; 63
    2a74:	f8 94       	cli
    2a76:	de bf       	out	0x3e, r29	; 62
    2a78:	0f be       	out	0x3f, r0	; 63
    2a7a:	cd bf       	out	0x3d, r28	; 61
    2a7c:	cf 91       	pop	r28
    2a7e:	df 91       	pop	r29
    2a80:	08 95       	ret

00002a82 <MDIO_vSetPinVal>:


void MDIO_vSetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
    2a82:	df 93       	push	r29
    2a84:	cf 93       	push	r28
    2a86:	cd b7       	in	r28, 0x3d	; 61
    2a88:	de b7       	in	r29, 0x3e	; 62
    2a8a:	2d 97       	sbiw	r28, 0x0d	; 13
    2a8c:	0f b6       	in	r0, 0x3f	; 63
    2a8e:	f8 94       	cli
    2a90:	de bf       	out	0x3e, r29	; 62
    2a92:	0f be       	out	0x3f, r0	; 63
    2a94:	cd bf       	out	0x3d, r28	; 61
    2a96:	89 83       	std	Y+1, r24	; 0x01
    2a98:	6a 83       	std	Y+2, r22	; 0x02
    2a9a:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_HIGH) )
    2a9c:	89 81       	ldd	r24, Y+1	; 0x01
    2a9e:	84 30       	cpi	r24, 0x04	; 4
    2aa0:	08 f0       	brcs	.+2      	; 0x2aa4 <MDIO_vSetPinVal+0x22>
    2aa2:	09 c1       	rjmp	.+530    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
    2aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    2aa6:	88 30       	cpi	r24, 0x08	; 8
    2aa8:	08 f0       	brcs	.+2      	; 0x2aac <MDIO_vSetPinVal+0x2a>
    2aaa:	05 c1       	rjmp	.+522    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
    2aac:	8b 81       	ldd	r24, Y+3	; 0x03
    2aae:	82 30       	cpi	r24, 0x02	; 2
    2ab0:	08 f0       	brcs	.+2      	; 0x2ab4 <MDIO_vSetPinVal+0x32>
    2ab2:	01 c1       	rjmp	.+514    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
	{
		switch (A_portID)
    2ab4:	89 81       	ldd	r24, Y+1	; 0x01
    2ab6:	28 2f       	mov	r18, r24
    2ab8:	30 e0       	ldi	r19, 0x00	; 0
    2aba:	3d 87       	std	Y+13, r19	; 0x0d
    2abc:	2c 87       	std	Y+12, r18	; 0x0c
    2abe:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ac0:	9d 85       	ldd	r25, Y+13	; 0x0d
    2ac2:	81 30       	cpi	r24, 0x01	; 1
    2ac4:	91 05       	cpc	r25, r1
    2ac6:	09 f4       	brne	.+2      	; 0x2aca <MDIO_vSetPinVal+0x48>
    2ac8:	4f c0       	rjmp	.+158    	; 0x2b68 <MDIO_vSetPinVal+0xe6>
    2aca:	2c 85       	ldd	r18, Y+12	; 0x0c
    2acc:	3d 85       	ldd	r19, Y+13	; 0x0d
    2ace:	22 30       	cpi	r18, 0x02	; 2
    2ad0:	31 05       	cpc	r19, r1
    2ad2:	2c f4       	brge	.+10     	; 0x2ade <MDIO_vSetPinVal+0x5c>
    2ad4:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ad6:	9d 85       	ldd	r25, Y+13	; 0x0d
    2ad8:	00 97       	sbiw	r24, 0x00	; 0
    2ada:	71 f0       	breq	.+28     	; 0x2af8 <MDIO_vSetPinVal+0x76>
    2adc:	ec c0       	rjmp	.+472    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
    2ade:	2c 85       	ldd	r18, Y+12	; 0x0c
    2ae0:	3d 85       	ldd	r19, Y+13	; 0x0d
    2ae2:	22 30       	cpi	r18, 0x02	; 2
    2ae4:	31 05       	cpc	r19, r1
    2ae6:	09 f4       	brne	.+2      	; 0x2aea <MDIO_vSetPinVal+0x68>
    2ae8:	77 c0       	rjmp	.+238    	; 0x2bd8 <MDIO_vSetPinVal+0x156>
    2aea:	8c 85       	ldd	r24, Y+12	; 0x0c
    2aec:	9d 85       	ldd	r25, Y+13	; 0x0d
    2aee:	83 30       	cpi	r24, 0x03	; 3
    2af0:	91 05       	cpc	r25, r1
    2af2:	09 f4       	brne	.+2      	; 0x2af6 <MDIO_vSetPinVal+0x74>
    2af4:	a9 c0       	rjmp	.+338    	; 0x2c48 <MDIO_vSetPinVal+0x1c6>
    2af6:	df c0       	rjmp	.+446    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
		{
		case DIO_PORTA:
			switch (A_pinValue)
    2af8:	8b 81       	ldd	r24, Y+3	; 0x03
    2afa:	28 2f       	mov	r18, r24
    2afc:	30 e0       	ldi	r19, 0x00	; 0
    2afe:	3b 87       	std	Y+11, r19	; 0x0b
    2b00:	2a 87       	std	Y+10, r18	; 0x0a
    2b02:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b04:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b06:	00 97       	sbiw	r24, 0x00	; 0
    2b08:	31 f0       	breq	.+12     	; 0x2b16 <MDIO_vSetPinVal+0x94>
    2b0a:	2a 85       	ldd	r18, Y+10	; 0x0a
    2b0c:	3b 85       	ldd	r19, Y+11	; 0x0b
    2b0e:	21 30       	cpi	r18, 0x01	; 1
    2b10:	31 05       	cpc	r19, r1
    2b12:	b1 f0       	breq	.+44     	; 0x2b40 <MDIO_vSetPinVal+0xbe>
    2b14:	d0 c0       	rjmp	.+416    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTA_REG,A_pinID);
    2b16:	ab e3       	ldi	r26, 0x3B	; 59
    2b18:	b0 e0       	ldi	r27, 0x00	; 0
    2b1a:	eb e3       	ldi	r30, 0x3B	; 59
    2b1c:	f0 e0       	ldi	r31, 0x00	; 0
    2b1e:	80 81       	ld	r24, Z
    2b20:	48 2f       	mov	r20, r24
    2b22:	8a 81       	ldd	r24, Y+2	; 0x02
    2b24:	28 2f       	mov	r18, r24
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	81 e0       	ldi	r24, 0x01	; 1
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	02 2e       	mov	r0, r18
    2b2e:	02 c0       	rjmp	.+4      	; 0x2b34 <MDIO_vSetPinVal+0xb2>
    2b30:	88 0f       	add	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	0a 94       	dec	r0
    2b36:	e2 f7       	brpl	.-8      	; 0x2b30 <MDIO_vSetPinVal+0xae>
    2b38:	80 95       	com	r24
    2b3a:	84 23       	and	r24, r20
    2b3c:	8c 93       	st	X, r24
    2b3e:	bb c0       	rjmp	.+374    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTA_REG,A_pinID);
    2b40:	ab e3       	ldi	r26, 0x3B	; 59
    2b42:	b0 e0       	ldi	r27, 0x00	; 0
    2b44:	eb e3       	ldi	r30, 0x3B	; 59
    2b46:	f0 e0       	ldi	r31, 0x00	; 0
    2b48:	80 81       	ld	r24, Z
    2b4a:	48 2f       	mov	r20, r24
    2b4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b4e:	28 2f       	mov	r18, r24
    2b50:	30 e0       	ldi	r19, 0x00	; 0
    2b52:	81 e0       	ldi	r24, 0x01	; 1
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	02 2e       	mov	r0, r18
    2b58:	02 c0       	rjmp	.+4      	; 0x2b5e <MDIO_vSetPinVal+0xdc>
    2b5a:	88 0f       	add	r24, r24
    2b5c:	99 1f       	adc	r25, r25
    2b5e:	0a 94       	dec	r0
    2b60:	e2 f7       	brpl	.-8      	; 0x2b5a <MDIO_vSetPinVal+0xd8>
    2b62:	84 2b       	or	r24, r20
    2b64:	8c 93       	st	X, r24
    2b66:	a7 c0       	rjmp	.+334    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
    2b68:	8b 81       	ldd	r24, Y+3	; 0x03
    2b6a:	28 2f       	mov	r18, r24
    2b6c:	30 e0       	ldi	r19, 0x00	; 0
    2b6e:	39 87       	std	Y+9, r19	; 0x09
    2b70:	28 87       	std	Y+8, r18	; 0x08
    2b72:	88 85       	ldd	r24, Y+8	; 0x08
    2b74:	99 85       	ldd	r25, Y+9	; 0x09
    2b76:	00 97       	sbiw	r24, 0x00	; 0
    2b78:	31 f0       	breq	.+12     	; 0x2b86 <MDIO_vSetPinVal+0x104>
    2b7a:	28 85       	ldd	r18, Y+8	; 0x08
    2b7c:	39 85       	ldd	r19, Y+9	; 0x09
    2b7e:	21 30       	cpi	r18, 0x01	; 1
    2b80:	31 05       	cpc	r19, r1
    2b82:	b1 f0       	breq	.+44     	; 0x2bb0 <MDIO_vSetPinVal+0x12e>
    2b84:	98 c0       	rjmp	.+304    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTB_REG,A_pinID);
    2b86:	a8 e3       	ldi	r26, 0x38	; 56
    2b88:	b0 e0       	ldi	r27, 0x00	; 0
    2b8a:	e8 e3       	ldi	r30, 0x38	; 56
    2b8c:	f0 e0       	ldi	r31, 0x00	; 0
    2b8e:	80 81       	ld	r24, Z
    2b90:	48 2f       	mov	r20, r24
    2b92:	8a 81       	ldd	r24, Y+2	; 0x02
    2b94:	28 2f       	mov	r18, r24
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	81 e0       	ldi	r24, 0x01	; 1
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	02 2e       	mov	r0, r18
    2b9e:	02 c0       	rjmp	.+4      	; 0x2ba4 <MDIO_vSetPinVal+0x122>
    2ba0:	88 0f       	add	r24, r24
    2ba2:	99 1f       	adc	r25, r25
    2ba4:	0a 94       	dec	r0
    2ba6:	e2 f7       	brpl	.-8      	; 0x2ba0 <MDIO_vSetPinVal+0x11e>
    2ba8:	80 95       	com	r24
    2baa:	84 23       	and	r24, r20
    2bac:	8c 93       	st	X, r24
    2bae:	83 c0       	rjmp	.+262    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTB_REG,A_pinID);
    2bb0:	a8 e3       	ldi	r26, 0x38	; 56
    2bb2:	b0 e0       	ldi	r27, 0x00	; 0
    2bb4:	e8 e3       	ldi	r30, 0x38	; 56
    2bb6:	f0 e0       	ldi	r31, 0x00	; 0
    2bb8:	80 81       	ld	r24, Z
    2bba:	48 2f       	mov	r20, r24
    2bbc:	8a 81       	ldd	r24, Y+2	; 0x02
    2bbe:	28 2f       	mov	r18, r24
    2bc0:	30 e0       	ldi	r19, 0x00	; 0
    2bc2:	81 e0       	ldi	r24, 0x01	; 1
    2bc4:	90 e0       	ldi	r25, 0x00	; 0
    2bc6:	02 2e       	mov	r0, r18
    2bc8:	02 c0       	rjmp	.+4      	; 0x2bce <MDIO_vSetPinVal+0x14c>
    2bca:	88 0f       	add	r24, r24
    2bcc:	99 1f       	adc	r25, r25
    2bce:	0a 94       	dec	r0
    2bd0:	e2 f7       	brpl	.-8      	; 0x2bca <MDIO_vSetPinVal+0x148>
    2bd2:	84 2b       	or	r24, r20
    2bd4:	8c 93       	st	X, r24
    2bd6:	6f c0       	rjmp	.+222    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
    2bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bda:	28 2f       	mov	r18, r24
    2bdc:	30 e0       	ldi	r19, 0x00	; 0
    2bde:	3f 83       	std	Y+7, r19	; 0x07
    2be0:	2e 83       	std	Y+6, r18	; 0x06
    2be2:	8e 81       	ldd	r24, Y+6	; 0x06
    2be4:	9f 81       	ldd	r25, Y+7	; 0x07
    2be6:	00 97       	sbiw	r24, 0x00	; 0
    2be8:	31 f0       	breq	.+12     	; 0x2bf6 <MDIO_vSetPinVal+0x174>
    2bea:	2e 81       	ldd	r18, Y+6	; 0x06
    2bec:	3f 81       	ldd	r19, Y+7	; 0x07
    2bee:	21 30       	cpi	r18, 0x01	; 1
    2bf0:	31 05       	cpc	r19, r1
    2bf2:	b1 f0       	breq	.+44     	; 0x2c20 <MDIO_vSetPinVal+0x19e>
    2bf4:	60 c0       	rjmp	.+192    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTC_REG,A_pinID);
    2bf6:	a5 e3       	ldi	r26, 0x35	; 53
    2bf8:	b0 e0       	ldi	r27, 0x00	; 0
    2bfa:	e5 e3       	ldi	r30, 0x35	; 53
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	80 81       	ld	r24, Z
    2c00:	48 2f       	mov	r20, r24
    2c02:	8a 81       	ldd	r24, Y+2	; 0x02
    2c04:	28 2f       	mov	r18, r24
    2c06:	30 e0       	ldi	r19, 0x00	; 0
    2c08:	81 e0       	ldi	r24, 0x01	; 1
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	02 2e       	mov	r0, r18
    2c0e:	02 c0       	rjmp	.+4      	; 0x2c14 <MDIO_vSetPinVal+0x192>
    2c10:	88 0f       	add	r24, r24
    2c12:	99 1f       	adc	r25, r25
    2c14:	0a 94       	dec	r0
    2c16:	e2 f7       	brpl	.-8      	; 0x2c10 <MDIO_vSetPinVal+0x18e>
    2c18:	80 95       	com	r24
    2c1a:	84 23       	and	r24, r20
    2c1c:	8c 93       	st	X, r24
    2c1e:	4b c0       	rjmp	.+150    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTC_REG,A_pinID);
    2c20:	a5 e3       	ldi	r26, 0x35	; 53
    2c22:	b0 e0       	ldi	r27, 0x00	; 0
    2c24:	e5 e3       	ldi	r30, 0x35	; 53
    2c26:	f0 e0       	ldi	r31, 0x00	; 0
    2c28:	80 81       	ld	r24, Z
    2c2a:	48 2f       	mov	r20, r24
    2c2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c2e:	28 2f       	mov	r18, r24
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	81 e0       	ldi	r24, 0x01	; 1
    2c34:	90 e0       	ldi	r25, 0x00	; 0
    2c36:	02 2e       	mov	r0, r18
    2c38:	02 c0       	rjmp	.+4      	; 0x2c3e <MDIO_vSetPinVal+0x1bc>
    2c3a:	88 0f       	add	r24, r24
    2c3c:	99 1f       	adc	r25, r25
    2c3e:	0a 94       	dec	r0
    2c40:	e2 f7       	brpl	.-8      	; 0x2c3a <MDIO_vSetPinVal+0x1b8>
    2c42:	84 2b       	or	r24, r20
    2c44:	8c 93       	st	X, r24
    2c46:	37 c0       	rjmp	.+110    	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
    2c48:	8b 81       	ldd	r24, Y+3	; 0x03
    2c4a:	28 2f       	mov	r18, r24
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	3d 83       	std	Y+5, r19	; 0x05
    2c50:	2c 83       	std	Y+4, r18	; 0x04
    2c52:	8c 81       	ldd	r24, Y+4	; 0x04
    2c54:	9d 81       	ldd	r25, Y+5	; 0x05
    2c56:	00 97       	sbiw	r24, 0x00	; 0
    2c58:	31 f0       	breq	.+12     	; 0x2c66 <MDIO_vSetPinVal+0x1e4>
    2c5a:	2c 81       	ldd	r18, Y+4	; 0x04
    2c5c:	3d 81       	ldd	r19, Y+5	; 0x05
    2c5e:	21 30       	cpi	r18, 0x01	; 1
    2c60:	31 05       	cpc	r19, r1
    2c62:	b1 f0       	breq	.+44     	; 0x2c90 <MDIO_vSetPinVal+0x20e>
    2c64:	28 c0       	rjmp	.+80     	; 0x2cb6 <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTD_REG,A_pinID);
    2c66:	a2 e3       	ldi	r26, 0x32	; 50
    2c68:	b0 e0       	ldi	r27, 0x00	; 0
    2c6a:	e2 e3       	ldi	r30, 0x32	; 50
    2c6c:	f0 e0       	ldi	r31, 0x00	; 0
    2c6e:	80 81       	ld	r24, Z
    2c70:	48 2f       	mov	r20, r24
    2c72:	8a 81       	ldd	r24, Y+2	; 0x02
    2c74:	28 2f       	mov	r18, r24
    2c76:	30 e0       	ldi	r19, 0x00	; 0
    2c78:	81 e0       	ldi	r24, 0x01	; 1
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	02 2e       	mov	r0, r18
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <MDIO_vSetPinVal+0x202>
    2c80:	88 0f       	add	r24, r24
    2c82:	99 1f       	adc	r25, r25
    2c84:	0a 94       	dec	r0
    2c86:	e2 f7       	brpl	.-8      	; 0x2c80 <MDIO_vSetPinVal+0x1fe>
    2c88:	80 95       	com	r24
    2c8a:	84 23       	and	r24, r20
    2c8c:	8c 93       	st	X, r24
    2c8e:	13 c0       	rjmp	.+38     	; 0x2cb6 <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTD_REG,A_pinID);
    2c90:	a2 e3       	ldi	r26, 0x32	; 50
    2c92:	b0 e0       	ldi	r27, 0x00	; 0
    2c94:	e2 e3       	ldi	r30, 0x32	; 50
    2c96:	f0 e0       	ldi	r31, 0x00	; 0
    2c98:	80 81       	ld	r24, Z
    2c9a:	48 2f       	mov	r20, r24
    2c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9e:	28 2f       	mov	r18, r24
    2ca0:	30 e0       	ldi	r19, 0x00	; 0
    2ca2:	81 e0       	ldi	r24, 0x01	; 1
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	02 2e       	mov	r0, r18
    2ca8:	02 c0       	rjmp	.+4      	; 0x2cae <MDIO_vSetPinVal+0x22c>
    2caa:	88 0f       	add	r24, r24
    2cac:	99 1f       	adc	r25, r25
    2cae:	0a 94       	dec	r0
    2cb0:	e2 f7       	brpl	.-8      	; 0x2caa <MDIO_vSetPinVal+0x228>
    2cb2:	84 2b       	or	r24, r20
    2cb4:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2cb6:	2d 96       	adiw	r28, 0x0d	; 13
    2cb8:	0f b6       	in	r0, 0x3f	; 63
    2cba:	f8 94       	cli
    2cbc:	de bf       	out	0x3e, r29	; 62
    2cbe:	0f be       	out	0x3f, r0	; 63
    2cc0:	cd bf       	out	0x3d, r28	; 61
    2cc2:	cf 91       	pop	r28
    2cc4:	df 91       	pop	r29
    2cc6:	08 95       	ret

00002cc8 <MDIO_GetPinVal>:




DIO_VALUE_e MDIO_GetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    2cc8:	df 93       	push	r29
    2cca:	cf 93       	push	r28
    2ccc:	00 d0       	rcall	.+0      	; 0x2cce <MDIO_GetPinVal+0x6>
    2cce:	00 d0       	rcall	.+0      	; 0x2cd0 <MDIO_GetPinVal+0x8>
    2cd0:	0f 92       	push	r0
    2cd2:	cd b7       	in	r28, 0x3d	; 61
    2cd4:	de b7       	in	r29, 0x3e	; 62
    2cd6:	8a 83       	std	Y+2, r24	; 0x02
    2cd8:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    2cda:	8a 81       	ldd	r24, Y+2	; 0x02
    2cdc:	84 30       	cpi	r24, 0x04	; 4
    2cde:	08 f0       	brcs	.+2      	; 0x2ce2 <MDIO_GetPinVal+0x1a>
    2ce0:	6b c0       	rjmp	.+214    	; 0x2db8 <MDIO_GetPinVal+0xf0>
    2ce2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ce4:	88 30       	cpi	r24, 0x08	; 8
    2ce6:	08 f0       	brcs	.+2      	; 0x2cea <MDIO_GetPinVal+0x22>
    2ce8:	67 c0       	rjmp	.+206    	; 0x2db8 <MDIO_GetPinVal+0xf0>
	{
		switch (A_portID)
    2cea:	8a 81       	ldd	r24, Y+2	; 0x02
    2cec:	28 2f       	mov	r18, r24
    2cee:	30 e0       	ldi	r19, 0x00	; 0
    2cf0:	3d 83       	std	Y+5, r19	; 0x05
    2cf2:	2c 83       	std	Y+4, r18	; 0x04
    2cf4:	4c 81       	ldd	r20, Y+4	; 0x04
    2cf6:	5d 81       	ldd	r21, Y+5	; 0x05
    2cf8:	41 30       	cpi	r20, 0x01	; 1
    2cfa:	51 05       	cpc	r21, r1
    2cfc:	41 f1       	breq	.+80     	; 0x2d4e <MDIO_GetPinVal+0x86>
    2cfe:	8c 81       	ldd	r24, Y+4	; 0x04
    2d00:	9d 81       	ldd	r25, Y+5	; 0x05
    2d02:	82 30       	cpi	r24, 0x02	; 2
    2d04:	91 05       	cpc	r25, r1
    2d06:	34 f4       	brge	.+12     	; 0x2d14 <MDIO_GetPinVal+0x4c>
    2d08:	2c 81       	ldd	r18, Y+4	; 0x04
    2d0a:	3d 81       	ldd	r19, Y+5	; 0x05
    2d0c:	21 15       	cp	r18, r1
    2d0e:	31 05       	cpc	r19, r1
    2d10:	61 f0       	breq	.+24     	; 0x2d2a <MDIO_GetPinVal+0x62>
    2d12:	52 c0       	rjmp	.+164    	; 0x2db8 <MDIO_GetPinVal+0xf0>
    2d14:	4c 81       	ldd	r20, Y+4	; 0x04
    2d16:	5d 81       	ldd	r21, Y+5	; 0x05
    2d18:	42 30       	cpi	r20, 0x02	; 2
    2d1a:	51 05       	cpc	r21, r1
    2d1c:	51 f1       	breq	.+84     	; 0x2d72 <MDIO_GetPinVal+0xaa>
    2d1e:	8c 81       	ldd	r24, Y+4	; 0x04
    2d20:	9d 81       	ldd	r25, Y+5	; 0x05
    2d22:	83 30       	cpi	r24, 0x03	; 3
    2d24:	91 05       	cpc	r25, r1
    2d26:	b9 f1       	breq	.+110    	; 0x2d96 <MDIO_GetPinVal+0xce>
    2d28:	47 c0       	rjmp	.+142    	; 0x2db8 <MDIO_GetPinVal+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
    2d2a:	e9 e3       	ldi	r30, 0x39	; 57
    2d2c:	f0 e0       	ldi	r31, 0x00	; 0
    2d2e:	80 81       	ld	r24, Z
    2d30:	28 2f       	mov	r18, r24
    2d32:	30 e0       	ldi	r19, 0x00	; 0
    2d34:	8b 81       	ldd	r24, Y+3	; 0x03
    2d36:	88 2f       	mov	r24, r24
    2d38:	90 e0       	ldi	r25, 0x00	; 0
    2d3a:	a9 01       	movw	r20, r18
    2d3c:	02 c0       	rjmp	.+4      	; 0x2d42 <MDIO_GetPinVal+0x7a>
    2d3e:	55 95       	asr	r21
    2d40:	47 95       	ror	r20
    2d42:	8a 95       	dec	r24
    2d44:	e2 f7       	brpl	.-8      	; 0x2d3e <MDIO_GetPinVal+0x76>
    2d46:	ca 01       	movw	r24, r20
    2d48:	81 70       	andi	r24, 0x01	; 1
    2d4a:	89 83       	std	Y+1, r24	; 0x01
    2d4c:	35 c0       	rjmp	.+106    	; 0x2db8 <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
    2d4e:	e6 e3       	ldi	r30, 0x36	; 54
    2d50:	f0 e0       	ldi	r31, 0x00	; 0
    2d52:	80 81       	ld	r24, Z
    2d54:	28 2f       	mov	r18, r24
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	8b 81       	ldd	r24, Y+3	; 0x03
    2d5a:	88 2f       	mov	r24, r24
    2d5c:	90 e0       	ldi	r25, 0x00	; 0
    2d5e:	a9 01       	movw	r20, r18
    2d60:	02 c0       	rjmp	.+4      	; 0x2d66 <MDIO_GetPinVal+0x9e>
    2d62:	55 95       	asr	r21
    2d64:	47 95       	ror	r20
    2d66:	8a 95       	dec	r24
    2d68:	e2 f7       	brpl	.-8      	; 0x2d62 <MDIO_GetPinVal+0x9a>
    2d6a:	ca 01       	movw	r24, r20
    2d6c:	81 70       	andi	r24, 0x01	; 1
    2d6e:	89 83       	std	Y+1, r24	; 0x01
    2d70:	23 c0       	rjmp	.+70     	; 0x2db8 <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
    2d72:	e3 e3       	ldi	r30, 0x33	; 51
    2d74:	f0 e0       	ldi	r31, 0x00	; 0
    2d76:	80 81       	ld	r24, Z
    2d78:	28 2f       	mov	r18, r24
    2d7a:	30 e0       	ldi	r19, 0x00	; 0
    2d7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d7e:	88 2f       	mov	r24, r24
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	a9 01       	movw	r20, r18
    2d84:	02 c0       	rjmp	.+4      	; 0x2d8a <MDIO_GetPinVal+0xc2>
    2d86:	55 95       	asr	r21
    2d88:	47 95       	ror	r20
    2d8a:	8a 95       	dec	r24
    2d8c:	e2 f7       	brpl	.-8      	; 0x2d86 <MDIO_GetPinVal+0xbe>
    2d8e:	ca 01       	movw	r24, r20
    2d90:	81 70       	andi	r24, 0x01	; 1
    2d92:	89 83       	std	Y+1, r24	; 0x01
    2d94:	11 c0       	rjmp	.+34     	; 0x2db8 <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
    2d96:	e0 e3       	ldi	r30, 0x30	; 48
    2d98:	f0 e0       	ldi	r31, 0x00	; 0
    2d9a:	80 81       	ld	r24, Z
    2d9c:	28 2f       	mov	r18, r24
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	8b 81       	ldd	r24, Y+3	; 0x03
    2da2:	88 2f       	mov	r24, r24
    2da4:	90 e0       	ldi	r25, 0x00	; 0
    2da6:	a9 01       	movw	r20, r18
    2da8:	02 c0       	rjmp	.+4      	; 0x2dae <MDIO_GetPinVal+0xe6>
    2daa:	55 95       	asr	r21
    2dac:	47 95       	ror	r20
    2dae:	8a 95       	dec	r24
    2db0:	e2 f7       	brpl	.-8      	; 0x2daa <MDIO_GetPinVal+0xe2>
    2db2:	ca 01       	movw	r24, r20
    2db4:	81 70       	andi	r24, 0x01	; 1
    2db6:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
    2db8:	89 81       	ldd	r24, Y+1	; 0x01
}
    2dba:	0f 90       	pop	r0
    2dbc:	0f 90       	pop	r0
    2dbe:	0f 90       	pop	r0
    2dc0:	0f 90       	pop	r0
    2dc2:	0f 90       	pop	r0
    2dc4:	cf 91       	pop	r28
    2dc6:	df 91       	pop	r29
    2dc8:	08 95       	ret

00002dca <MDIO_vTogglePinVal>:

void MDIO_vTogglePinVal (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    2dca:	df 93       	push	r29
    2dcc:	cf 93       	push	r28
    2dce:	00 d0       	rcall	.+0      	; 0x2dd0 <MDIO_vTogglePinVal+0x6>
    2dd0:	00 d0       	rcall	.+0      	; 0x2dd2 <MDIO_vTogglePinVal+0x8>
    2dd2:	cd b7       	in	r28, 0x3d	; 61
    2dd4:	de b7       	in	r29, 0x3e	; 62
    2dd6:	89 83       	std	Y+1, r24	; 0x01
    2dd8:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    2dda:	89 81       	ldd	r24, Y+1	; 0x01
    2ddc:	84 30       	cpi	r24, 0x04	; 4
    2dde:	08 f0       	brcs	.+2      	; 0x2de2 <MDIO_vTogglePinVal+0x18>
    2de0:	72 c0       	rjmp	.+228    	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
    2de2:	8a 81       	ldd	r24, Y+2	; 0x02
    2de4:	88 30       	cpi	r24, 0x08	; 8
    2de6:	08 f0       	brcs	.+2      	; 0x2dea <MDIO_vTogglePinVal+0x20>
    2de8:	6e c0       	rjmp	.+220    	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
	{
		switch (A_portID)
    2dea:	89 81       	ldd	r24, Y+1	; 0x01
    2dec:	28 2f       	mov	r18, r24
    2dee:	30 e0       	ldi	r19, 0x00	; 0
    2df0:	3c 83       	std	Y+4, r19	; 0x04
    2df2:	2b 83       	std	Y+3, r18	; 0x03
    2df4:	8b 81       	ldd	r24, Y+3	; 0x03
    2df6:	9c 81       	ldd	r25, Y+4	; 0x04
    2df8:	81 30       	cpi	r24, 0x01	; 1
    2dfa:	91 05       	cpc	r25, r1
    2dfc:	49 f1       	breq	.+82     	; 0x2e50 <MDIO_vTogglePinVal+0x86>
    2dfe:	2b 81       	ldd	r18, Y+3	; 0x03
    2e00:	3c 81       	ldd	r19, Y+4	; 0x04
    2e02:	22 30       	cpi	r18, 0x02	; 2
    2e04:	31 05       	cpc	r19, r1
    2e06:	2c f4       	brge	.+10     	; 0x2e12 <MDIO_vTogglePinVal+0x48>
    2e08:	8b 81       	ldd	r24, Y+3	; 0x03
    2e0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e0c:	00 97       	sbiw	r24, 0x00	; 0
    2e0e:	61 f0       	breq	.+24     	; 0x2e28 <MDIO_vTogglePinVal+0x5e>
    2e10:	5a c0       	rjmp	.+180    	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
    2e12:	2b 81       	ldd	r18, Y+3	; 0x03
    2e14:	3c 81       	ldd	r19, Y+4	; 0x04
    2e16:	22 30       	cpi	r18, 0x02	; 2
    2e18:	31 05       	cpc	r19, r1
    2e1a:	71 f1       	breq	.+92     	; 0x2e78 <MDIO_vTogglePinVal+0xae>
    2e1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2e20:	83 30       	cpi	r24, 0x03	; 3
    2e22:	91 05       	cpc	r25, r1
    2e24:	e9 f1       	breq	.+122    	; 0x2ea0 <MDIO_vTogglePinVal+0xd6>
    2e26:	4f c0       	rjmp	.+158    	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
    2e28:	ab e3       	ldi	r26, 0x3B	; 59
    2e2a:	b0 e0       	ldi	r27, 0x00	; 0
    2e2c:	eb e3       	ldi	r30, 0x3B	; 59
    2e2e:	f0 e0       	ldi	r31, 0x00	; 0
    2e30:	80 81       	ld	r24, Z
    2e32:	48 2f       	mov	r20, r24
    2e34:	8a 81       	ldd	r24, Y+2	; 0x02
    2e36:	28 2f       	mov	r18, r24
    2e38:	30 e0       	ldi	r19, 0x00	; 0
    2e3a:	81 e0       	ldi	r24, 0x01	; 1
    2e3c:	90 e0       	ldi	r25, 0x00	; 0
    2e3e:	02 2e       	mov	r0, r18
    2e40:	02 c0       	rjmp	.+4      	; 0x2e46 <MDIO_vTogglePinVal+0x7c>
    2e42:	88 0f       	add	r24, r24
    2e44:	99 1f       	adc	r25, r25
    2e46:	0a 94       	dec	r0
    2e48:	e2 f7       	brpl	.-8      	; 0x2e42 <MDIO_vTogglePinVal+0x78>
    2e4a:	84 27       	eor	r24, r20
    2e4c:	8c 93       	st	X, r24
    2e4e:	3b c0       	rjmp	.+118    	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
    2e50:	a8 e3       	ldi	r26, 0x38	; 56
    2e52:	b0 e0       	ldi	r27, 0x00	; 0
    2e54:	e8 e3       	ldi	r30, 0x38	; 56
    2e56:	f0 e0       	ldi	r31, 0x00	; 0
    2e58:	80 81       	ld	r24, Z
    2e5a:	48 2f       	mov	r20, r24
    2e5c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e5e:	28 2f       	mov	r18, r24
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	81 e0       	ldi	r24, 0x01	; 1
    2e64:	90 e0       	ldi	r25, 0x00	; 0
    2e66:	02 2e       	mov	r0, r18
    2e68:	02 c0       	rjmp	.+4      	; 0x2e6e <MDIO_vTogglePinVal+0xa4>
    2e6a:	88 0f       	add	r24, r24
    2e6c:	99 1f       	adc	r25, r25
    2e6e:	0a 94       	dec	r0
    2e70:	e2 f7       	brpl	.-8      	; 0x2e6a <MDIO_vTogglePinVal+0xa0>
    2e72:	84 27       	eor	r24, r20
    2e74:	8c 93       	st	X, r24
    2e76:	27 c0       	rjmp	.+78     	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
    2e78:	a5 e3       	ldi	r26, 0x35	; 53
    2e7a:	b0 e0       	ldi	r27, 0x00	; 0
    2e7c:	e5 e3       	ldi	r30, 0x35	; 53
    2e7e:	f0 e0       	ldi	r31, 0x00	; 0
    2e80:	80 81       	ld	r24, Z
    2e82:	48 2f       	mov	r20, r24
    2e84:	8a 81       	ldd	r24, Y+2	; 0x02
    2e86:	28 2f       	mov	r18, r24
    2e88:	30 e0       	ldi	r19, 0x00	; 0
    2e8a:	81 e0       	ldi	r24, 0x01	; 1
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	02 2e       	mov	r0, r18
    2e90:	02 c0       	rjmp	.+4      	; 0x2e96 <MDIO_vTogglePinVal+0xcc>
    2e92:	88 0f       	add	r24, r24
    2e94:	99 1f       	adc	r25, r25
    2e96:	0a 94       	dec	r0
    2e98:	e2 f7       	brpl	.-8      	; 0x2e92 <MDIO_vTogglePinVal+0xc8>
    2e9a:	84 27       	eor	r24, r20
    2e9c:	8c 93       	st	X, r24
    2e9e:	13 c0       	rjmp	.+38     	; 0x2ec6 <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
    2ea0:	a2 e3       	ldi	r26, 0x32	; 50
    2ea2:	b0 e0       	ldi	r27, 0x00	; 0
    2ea4:	e2 e3       	ldi	r30, 0x32	; 50
    2ea6:	f0 e0       	ldi	r31, 0x00	; 0
    2ea8:	80 81       	ld	r24, Z
    2eaa:	48 2f       	mov	r20, r24
    2eac:	8a 81       	ldd	r24, Y+2	; 0x02
    2eae:	28 2f       	mov	r18, r24
    2eb0:	30 e0       	ldi	r19, 0x00	; 0
    2eb2:	81 e0       	ldi	r24, 0x01	; 1
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	02 2e       	mov	r0, r18
    2eb8:	02 c0       	rjmp	.+4      	; 0x2ebe <MDIO_vTogglePinVal+0xf4>
    2eba:	88 0f       	add	r24, r24
    2ebc:	99 1f       	adc	r25, r25
    2ebe:	0a 94       	dec	r0
    2ec0:	e2 f7       	brpl	.-8      	; 0x2eba <MDIO_vTogglePinVal+0xf0>
    2ec2:	84 27       	eor	r24, r20
    2ec4:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2ec6:	0f 90       	pop	r0
    2ec8:	0f 90       	pop	r0
    2eca:	0f 90       	pop	r0
    2ecc:	0f 90       	pop	r0
    2ece:	cf 91       	pop	r28
    2ed0:	df 91       	pop	r29
    2ed2:	08 95       	ret

00002ed4 <MDIO_vSetPortDir>:


void MDIO_vSetPortDir (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
    2ed4:	df 93       	push	r29
    2ed6:	cf 93       	push	r28
    2ed8:	00 d0       	rcall	.+0      	; 0x2eda <MDIO_vSetPortDir+0x6>
    2eda:	00 d0       	rcall	.+0      	; 0x2edc <MDIO_vSetPortDir+0x8>
    2edc:	cd b7       	in	r28, 0x3d	; 61
    2ede:	de b7       	in	r29, 0x3e	; 62
    2ee0:	89 83       	std	Y+1, r24	; 0x01
    2ee2:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    2ee4:	89 81       	ldd	r24, Y+1	; 0x01
    2ee6:	84 30       	cpi	r24, 0x04	; 4
    2ee8:	90 f5       	brcc	.+100    	; 0x2f4e <MDIO_vSetPortDir+0x7a>
	{
		switch (A_portID)
    2eea:	89 81       	ldd	r24, Y+1	; 0x01
    2eec:	28 2f       	mov	r18, r24
    2eee:	30 e0       	ldi	r19, 0x00	; 0
    2ef0:	3c 83       	std	Y+4, r19	; 0x04
    2ef2:	2b 83       	std	Y+3, r18	; 0x03
    2ef4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef6:	9c 81       	ldd	r25, Y+4	; 0x04
    2ef8:	81 30       	cpi	r24, 0x01	; 1
    2efa:	91 05       	cpc	r25, r1
    2efc:	d1 f0       	breq	.+52     	; 0x2f32 <MDIO_vSetPortDir+0x5e>
    2efe:	2b 81       	ldd	r18, Y+3	; 0x03
    2f00:	3c 81       	ldd	r19, Y+4	; 0x04
    2f02:	22 30       	cpi	r18, 0x02	; 2
    2f04:	31 05       	cpc	r19, r1
    2f06:	2c f4       	brge	.+10     	; 0x2f12 <MDIO_vSetPortDir+0x3e>
    2f08:	8b 81       	ldd	r24, Y+3	; 0x03
    2f0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f0c:	00 97       	sbiw	r24, 0x00	; 0
    2f0e:	61 f0       	breq	.+24     	; 0x2f28 <MDIO_vSetPortDir+0x54>
    2f10:	1e c0       	rjmp	.+60     	; 0x2f4e <MDIO_vSetPortDir+0x7a>
    2f12:	2b 81       	ldd	r18, Y+3	; 0x03
    2f14:	3c 81       	ldd	r19, Y+4	; 0x04
    2f16:	22 30       	cpi	r18, 0x02	; 2
    2f18:	31 05       	cpc	r19, r1
    2f1a:	81 f0       	breq	.+32     	; 0x2f3c <MDIO_vSetPortDir+0x68>
    2f1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2f20:	83 30       	cpi	r24, 0x03	; 3
    2f22:	91 05       	cpc	r25, r1
    2f24:	81 f0       	breq	.+32     	; 0x2f46 <MDIO_vSetPortDir+0x72>
    2f26:	13 c0       	rjmp	.+38     	; 0x2f4e <MDIO_vSetPortDir+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
    2f28:	ea e3       	ldi	r30, 0x3A	; 58
    2f2a:	f0 e0       	ldi	r31, 0x00	; 0
    2f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f2e:	80 83       	st	Z, r24
    2f30:	0e c0       	rjmp	.+28     	; 0x2f4e <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
    2f32:	e7 e3       	ldi	r30, 0x37	; 55
    2f34:	f0 e0       	ldi	r31, 0x00	; 0
    2f36:	8a 81       	ldd	r24, Y+2	; 0x02
    2f38:	80 83       	st	Z, r24
    2f3a:	09 c0       	rjmp	.+18     	; 0x2f4e <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
    2f3c:	e4 e3       	ldi	r30, 0x34	; 52
    2f3e:	f0 e0       	ldi	r31, 0x00	; 0
    2f40:	8a 81       	ldd	r24, Y+2	; 0x02
    2f42:	80 83       	st	Z, r24
    2f44:	04 c0       	rjmp	.+8      	; 0x2f4e <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
    2f46:	e1 e3       	ldi	r30, 0x31	; 49
    2f48:	f0 e0       	ldi	r31, 0x00	; 0
    2f4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f4c:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    2f4e:	0f 90       	pop	r0
    2f50:	0f 90       	pop	r0
    2f52:	0f 90       	pop	r0
    2f54:	0f 90       	pop	r0
    2f56:	cf 91       	pop	r28
    2f58:	df 91       	pop	r29
    2f5a:	08 95       	ret

00002f5c <MDIO_vSetPortVal>:

void MDIO_vSetPortVal (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
    2f5c:	df 93       	push	r29
    2f5e:	cf 93       	push	r28
    2f60:	00 d0       	rcall	.+0      	; 0x2f62 <MDIO_vSetPortVal+0x6>
    2f62:	00 d0       	rcall	.+0      	; 0x2f64 <MDIO_vSetPortVal+0x8>
    2f64:	cd b7       	in	r28, 0x3d	; 61
    2f66:	de b7       	in	r29, 0x3e	; 62
    2f68:	89 83       	std	Y+1, r24	; 0x01
    2f6a:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    2f6c:	89 81       	ldd	r24, Y+1	; 0x01
    2f6e:	84 30       	cpi	r24, 0x04	; 4
    2f70:	90 f5       	brcc	.+100    	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
	{
		switch (A_portID)
    2f72:	89 81       	ldd	r24, Y+1	; 0x01
    2f74:	28 2f       	mov	r18, r24
    2f76:	30 e0       	ldi	r19, 0x00	; 0
    2f78:	3c 83       	std	Y+4, r19	; 0x04
    2f7a:	2b 83       	std	Y+3, r18	; 0x03
    2f7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f7e:	9c 81       	ldd	r25, Y+4	; 0x04
    2f80:	81 30       	cpi	r24, 0x01	; 1
    2f82:	91 05       	cpc	r25, r1
    2f84:	d1 f0       	breq	.+52     	; 0x2fba <MDIO_vSetPortVal+0x5e>
    2f86:	2b 81       	ldd	r18, Y+3	; 0x03
    2f88:	3c 81       	ldd	r19, Y+4	; 0x04
    2f8a:	22 30       	cpi	r18, 0x02	; 2
    2f8c:	31 05       	cpc	r19, r1
    2f8e:	2c f4       	brge	.+10     	; 0x2f9a <MDIO_vSetPortVal+0x3e>
    2f90:	8b 81       	ldd	r24, Y+3	; 0x03
    2f92:	9c 81       	ldd	r25, Y+4	; 0x04
    2f94:	00 97       	sbiw	r24, 0x00	; 0
    2f96:	61 f0       	breq	.+24     	; 0x2fb0 <MDIO_vSetPortVal+0x54>
    2f98:	1e c0       	rjmp	.+60     	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
    2f9a:	2b 81       	ldd	r18, Y+3	; 0x03
    2f9c:	3c 81       	ldd	r19, Y+4	; 0x04
    2f9e:	22 30       	cpi	r18, 0x02	; 2
    2fa0:	31 05       	cpc	r19, r1
    2fa2:	81 f0       	breq	.+32     	; 0x2fc4 <MDIO_vSetPortVal+0x68>
    2fa4:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa6:	9c 81       	ldd	r25, Y+4	; 0x04
    2fa8:	83 30       	cpi	r24, 0x03	; 3
    2faa:	91 05       	cpc	r25, r1
    2fac:	81 f0       	breq	.+32     	; 0x2fce <MDIO_vSetPortVal+0x72>
    2fae:	13 c0       	rjmp	.+38     	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
    2fb0:	eb e3       	ldi	r30, 0x3B	; 59
    2fb2:	f0 e0       	ldi	r31, 0x00	; 0
    2fb4:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb6:	80 83       	st	Z, r24
    2fb8:	0e c0       	rjmp	.+28     	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
    2fba:	e8 e3       	ldi	r30, 0x38	; 56
    2fbc:	f0 e0       	ldi	r31, 0x00	; 0
    2fbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc0:	80 83       	st	Z, r24
    2fc2:	09 c0       	rjmp	.+18     	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
    2fc4:	e5 e3       	ldi	r30, 0x35	; 53
    2fc6:	f0 e0       	ldi	r31, 0x00	; 0
    2fc8:	8a 81       	ldd	r24, Y+2	; 0x02
    2fca:	80 83       	st	Z, r24
    2fcc:	04 c0       	rjmp	.+8      	; 0x2fd6 <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
    2fce:	e2 e3       	ldi	r30, 0x32	; 50
    2fd0:	f0 e0       	ldi	r31, 0x00	; 0
    2fd2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fd4:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    2fd6:	0f 90       	pop	r0
    2fd8:	0f 90       	pop	r0
    2fda:	0f 90       	pop	r0
    2fdc:	0f 90       	pop	r0
    2fde:	cf 91       	pop	r28
    2fe0:	df 91       	pop	r29
    2fe2:	08 95       	ret

00002fe4 <MDIO_vInit>:


void MDIO_vInit()
{
    2fe4:	df 93       	push	r29
    2fe6:	cf 93       	push	r28
    2fe8:	cd b7       	in	r28, 0x3d	; 61
    2fea:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
    2fec:	ea e3       	ldi	r30, 0x3A	; 58
    2fee:	f0 e0       	ldi	r31, 0x00	; 0
    2ff0:	10 82       	st	Z, r1
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
    2ff2:	e7 e3       	ldi	r30, 0x37	; 55
    2ff4:	f0 e0       	ldi	r31, 0x00	; 0
    2ff6:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
    2ff8:	e4 e3       	ldi	r30, 0x34	; 52
    2ffa:	f0 e0       	ldi	r31, 0x00	; 0
    2ffc:	87 e0       	ldi	r24, 0x07	; 7
    2ffe:	80 83       	st	Z, r24
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
    3000:	e1 e3       	ldi	r30, 0x31	; 49
    3002:	f0 e0       	ldi	r31, 0x00	; 0
    3004:	8f ef       	ldi	r24, 0xFF	; 255
    3006:	80 83       	st	Z, r24
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
    3008:	eb e3       	ldi	r30, 0x3B	; 59
    300a:	f0 e0       	ldi	r31, 0x00	; 0
    300c:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
    300e:	e8 e3       	ldi	r30, 0x38	; 56
    3010:	f0 e0       	ldi	r31, 0x00	; 0
    3012:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
    3014:	e5 e3       	ldi	r30, 0x35	; 53
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
    301a:	e2 e3       	ldi	r30, 0x32	; 50
    301c:	f0 e0       	ldi	r31, 0x00	; 0
    301e:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
    3020:	cf 91       	pop	r28
    3022:	df 91       	pop	r29
    3024:	08 95       	ret

00003026 <HSTEPPER_vInit>:

#define F_CPU 12000000UL


void HSTEPPER_vInit(void)
{
    3026:	df 93       	push	r29
    3028:	cf 93       	push	r28
    302a:	cd b7       	in	r28, 0x3d	; 61
    302c:	de b7       	in	r29, 0x3e	; 62
//	u8 pinMask = (1 << STPR_PIN0) | (1 << STPR_PIN1) | (1 << STPR_PIN2) | (1 << STPR_PIN3);
//	MDIO_vSetPortDir(STPR_PORT , pinMask);

	MDIO_vSetPinDir(STPR_PORT , STPR_PIN0 , DIO_OUTPUT);
    302e:	82 e0       	ldi	r24, 0x02	; 2
    3030:	60 e0       	ldi	r22, 0x00	; 0
    3032:	41 e0       	ldi	r20, 0x01	; 1
    3034:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN1 , DIO_OUTPUT);
    3038:	82 e0       	ldi	r24, 0x02	; 2
    303a:	61 e0       	ldi	r22, 0x01	; 1
    303c:	41 e0       	ldi	r20, 0x01	; 1
    303e:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN2 , DIO_OUTPUT);
    3042:	82 e0       	ldi	r24, 0x02	; 2
    3044:	62 e0       	ldi	r22, 0x02	; 2
    3046:	41 e0       	ldi	r20, 0x01	; 1
    3048:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN3 , DIO_OUTPUT);
    304c:	82 e0       	ldi	r24, 0x02	; 2
    304e:	63 e0       	ldi	r22, 0x03	; 3
    3050:	41 e0       	ldi	r20, 0x01	; 1
    3052:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
}
    3056:	cf 91       	pop	r28
    3058:	df 91       	pop	r29
    305a:	08 95       	ret

0000305c <HSTEPPER_vRotate>:

void HSTEPPER_vRotate(u16 A_u16Angle)
{
    305c:	df 93       	push	r29
    305e:	cf 93       	push	r28
    3060:	cd b7       	in	r28, 0x3d	; 61
    3062:	de b7       	in	r29, 0x3e	; 62
    3064:	ee 97       	sbiw	r28, 0x3e	; 62
    3066:	0f b6       	in	r0, 0x3f	; 63
    3068:	f8 94       	cli
    306a:	de bf       	out	0x3e, r29	; 62
    306c:	0f be       	out	0x3f, r0	; 63
    306e:	cd bf       	out	0x3d, r28	; 61
    3070:	9e af       	std	Y+62, r25	; 0x3e
    3072:	8d af       	std	Y+61, r24	; 0x3d

u16 Iteration = (512 * A_u16Angle) / 360;
    3074:	8d ad       	ldd	r24, Y+61	; 0x3d
    3076:	9e ad       	ldd	r25, Y+62	; 0x3e
    3078:	98 2f       	mov	r25, r24
    307a:	88 27       	eor	r24, r24
    307c:	99 0f       	add	r25, r25
    307e:	28 e6       	ldi	r18, 0x68	; 104
    3080:	31 e0       	ldi	r19, 0x01	; 1
    3082:	b9 01       	movw	r22, r18
    3084:	0e 94 57 28 	call	0x50ae	; 0x50ae <__udivmodhi4>
    3088:	cb 01       	movw	r24, r22
    308a:	9c af       	std	Y+60, r25	; 0x3c
    308c:	8b af       	std	Y+59, r24	; 0x3b

    for(u16 i = 0; i < Iteration; i++)
    308e:	1a ae       	std	Y+58, r1	; 0x3a
    3090:	19 ae       	std	Y+57, r1	; 0x39
    3092:	1d c2       	rjmp	.+1082   	; 0x34ce <HSTEPPER_vRotate+0x472>
    {
        // Step 1
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_LOW);
    3094:	82 e0       	ldi	r24, 0x02	; 2
    3096:	60 e0       	ldi	r22, 0x00	; 0
    3098:	40 e0       	ldi	r20, 0x00	; 0
    309a:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    309e:	82 e0       	ldi	r24, 0x02	; 2
    30a0:	61 e0       	ldi	r22, 0x01	; 1
    30a2:	41 e0       	ldi	r20, 0x01	; 1
    30a4:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    30a8:	82 e0       	ldi	r24, 0x02	; 2
    30aa:	62 e0       	ldi	r22, 0x02	; 2
    30ac:	41 e0       	ldi	r20, 0x01	; 1
    30ae:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    30b2:	82 e0       	ldi	r24, 0x02	; 2
    30b4:	63 e0       	ldi	r22, 0x03	; 3
    30b6:	41 e0       	ldi	r20, 0x01	; 1
    30b8:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    30bc:	80 e0       	ldi	r24, 0x00	; 0
    30be:	90 e0       	ldi	r25, 0x00	; 0
    30c0:	a0 e2       	ldi	r26, 0x20	; 32
    30c2:	b1 e4       	ldi	r27, 0x41	; 65
    30c4:	8d ab       	std	Y+53, r24	; 0x35
    30c6:	9e ab       	std	Y+54, r25	; 0x36
    30c8:	af ab       	std	Y+55, r26	; 0x37
    30ca:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30cc:	6d a9       	ldd	r22, Y+53	; 0x35
    30ce:	7e a9       	ldd	r23, Y+54	; 0x36
    30d0:	8f a9       	ldd	r24, Y+55	; 0x37
    30d2:	98 ad       	ldd	r25, Y+56	; 0x38
    30d4:	20 e0       	ldi	r18, 0x00	; 0
    30d6:	30 e8       	ldi	r19, 0x80	; 128
    30d8:	4b e3       	ldi	r20, 0x3B	; 59
    30da:	55 e4       	ldi	r21, 0x45	; 69
    30dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    30e0:	dc 01       	movw	r26, r24
    30e2:	cb 01       	movw	r24, r22
    30e4:	89 ab       	std	Y+49, r24	; 0x31
    30e6:	9a ab       	std	Y+50, r25	; 0x32
    30e8:	ab ab       	std	Y+51, r26	; 0x33
    30ea:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    30ec:	69 a9       	ldd	r22, Y+49	; 0x31
    30ee:	7a a9       	ldd	r23, Y+50	; 0x32
    30f0:	8b a9       	ldd	r24, Y+51	; 0x33
    30f2:	9c a9       	ldd	r25, Y+52	; 0x34
    30f4:	20 e0       	ldi	r18, 0x00	; 0
    30f6:	30 e0       	ldi	r19, 0x00	; 0
    30f8:	40 e8       	ldi	r20, 0x80	; 128
    30fa:	5f e3       	ldi	r21, 0x3F	; 63
    30fc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3100:	88 23       	and	r24, r24
    3102:	2c f4       	brge	.+10     	; 0x310e <HSTEPPER_vRotate+0xb2>
		__ticks = 1;
    3104:	81 e0       	ldi	r24, 0x01	; 1
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	98 ab       	std	Y+48, r25	; 0x30
    310a:	8f a7       	std	Y+47, r24	; 0x2f
    310c:	3f c0       	rjmp	.+126    	; 0x318c <HSTEPPER_vRotate+0x130>
	else if (__tmp > 65535)
    310e:	69 a9       	ldd	r22, Y+49	; 0x31
    3110:	7a a9       	ldd	r23, Y+50	; 0x32
    3112:	8b a9       	ldd	r24, Y+51	; 0x33
    3114:	9c a9       	ldd	r25, Y+52	; 0x34
    3116:	20 e0       	ldi	r18, 0x00	; 0
    3118:	3f ef       	ldi	r19, 0xFF	; 255
    311a:	4f e7       	ldi	r20, 0x7F	; 127
    311c:	57 e4       	ldi	r21, 0x47	; 71
    311e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3122:	18 16       	cp	r1, r24
    3124:	4c f5       	brge	.+82     	; 0x3178 <HSTEPPER_vRotate+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3126:	6d a9       	ldd	r22, Y+53	; 0x35
    3128:	7e a9       	ldd	r23, Y+54	; 0x36
    312a:	8f a9       	ldd	r24, Y+55	; 0x37
    312c:	98 ad       	ldd	r25, Y+56	; 0x38
    312e:	20 e0       	ldi	r18, 0x00	; 0
    3130:	30 e0       	ldi	r19, 0x00	; 0
    3132:	40 e2       	ldi	r20, 0x20	; 32
    3134:	51 e4       	ldi	r21, 0x41	; 65
    3136:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    313a:	dc 01       	movw	r26, r24
    313c:	cb 01       	movw	r24, r22
    313e:	bc 01       	movw	r22, r24
    3140:	cd 01       	movw	r24, r26
    3142:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3146:	dc 01       	movw	r26, r24
    3148:	cb 01       	movw	r24, r22
    314a:	98 ab       	std	Y+48, r25	; 0x30
    314c:	8f a7       	std	Y+47, r24	; 0x2f
    314e:	0f c0       	rjmp	.+30     	; 0x316e <HSTEPPER_vRotate+0x112>
    3150:	8c e2       	ldi	r24, 0x2C	; 44
    3152:	91 e0       	ldi	r25, 0x01	; 1
    3154:	9e a7       	std	Y+46, r25	; 0x2e
    3156:	8d a7       	std	Y+45, r24	; 0x2d
    3158:	8d a5       	ldd	r24, Y+45	; 0x2d
    315a:	9e a5       	ldd	r25, Y+46	; 0x2e
    315c:	01 97       	sbiw	r24, 0x01	; 1
    315e:	f1 f7       	brne	.-4      	; 0x315c <HSTEPPER_vRotate+0x100>
    3160:	9e a7       	std	Y+46, r25	; 0x2e
    3162:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3164:	8f a5       	ldd	r24, Y+47	; 0x2f
    3166:	98 a9       	ldd	r25, Y+48	; 0x30
    3168:	01 97       	sbiw	r24, 0x01	; 1
    316a:	98 ab       	std	Y+48, r25	; 0x30
    316c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    316e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3170:	98 a9       	ldd	r25, Y+48	; 0x30
    3172:	00 97       	sbiw	r24, 0x00	; 0
    3174:	69 f7       	brne	.-38     	; 0x3150 <HSTEPPER_vRotate+0xf4>
    3176:	14 c0       	rjmp	.+40     	; 0x31a0 <HSTEPPER_vRotate+0x144>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3178:	69 a9       	ldd	r22, Y+49	; 0x31
    317a:	7a a9       	ldd	r23, Y+50	; 0x32
    317c:	8b a9       	ldd	r24, Y+51	; 0x33
    317e:	9c a9       	ldd	r25, Y+52	; 0x34
    3180:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3184:	dc 01       	movw	r26, r24
    3186:	cb 01       	movw	r24, r22
    3188:	98 ab       	std	Y+48, r25	; 0x30
    318a:	8f a7       	std	Y+47, r24	; 0x2f
    318c:	8f a5       	ldd	r24, Y+47	; 0x2f
    318e:	98 a9       	ldd	r25, Y+48	; 0x30
    3190:	9c a7       	std	Y+44, r25	; 0x2c
    3192:	8b a7       	std	Y+43, r24	; 0x2b
    3194:	8b a5       	ldd	r24, Y+43	; 0x2b
    3196:	9c a5       	ldd	r25, Y+44	; 0x2c
    3198:	01 97       	sbiw	r24, 0x01	; 1
    319a:	f1 f7       	brne	.-4      	; 0x3198 <HSTEPPER_vRotate+0x13c>
    319c:	9c a7       	std	Y+44, r25	; 0x2c
    319e:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(10);

        // Step 2
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    31a0:	82 e0       	ldi	r24, 0x02	; 2
    31a2:	60 e0       	ldi	r22, 0x00	; 0
    31a4:	41 e0       	ldi	r20, 0x01	; 1
    31a6:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_LOW);
    31aa:	82 e0       	ldi	r24, 0x02	; 2
    31ac:	61 e0       	ldi	r22, 0x01	; 1
    31ae:	40 e0       	ldi	r20, 0x00	; 0
    31b0:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    31b4:	82 e0       	ldi	r24, 0x02	; 2
    31b6:	62 e0       	ldi	r22, 0x02	; 2
    31b8:	41 e0       	ldi	r20, 0x01	; 1
    31ba:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    31be:	82 e0       	ldi	r24, 0x02	; 2
    31c0:	63 e0       	ldi	r22, 0x03	; 3
    31c2:	41 e0       	ldi	r20, 0x01	; 1
    31c4:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    31c8:	80 e0       	ldi	r24, 0x00	; 0
    31ca:	90 e0       	ldi	r25, 0x00	; 0
    31cc:	a0 e2       	ldi	r26, 0x20	; 32
    31ce:	b1 e4       	ldi	r27, 0x41	; 65
    31d0:	8f a3       	std	Y+39, r24	; 0x27
    31d2:	98 a7       	std	Y+40, r25	; 0x28
    31d4:	a9 a7       	std	Y+41, r26	; 0x29
    31d6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31d8:	6f a1       	ldd	r22, Y+39	; 0x27
    31da:	78 a5       	ldd	r23, Y+40	; 0x28
    31dc:	89 a5       	ldd	r24, Y+41	; 0x29
    31de:	9a a5       	ldd	r25, Y+42	; 0x2a
    31e0:	20 e0       	ldi	r18, 0x00	; 0
    31e2:	30 e8       	ldi	r19, 0x80	; 128
    31e4:	4b e3       	ldi	r20, 0x3B	; 59
    31e6:	55 e4       	ldi	r21, 0x45	; 69
    31e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31ec:	dc 01       	movw	r26, r24
    31ee:	cb 01       	movw	r24, r22
    31f0:	8b a3       	std	Y+35, r24	; 0x23
    31f2:	9c a3       	std	Y+36, r25	; 0x24
    31f4:	ad a3       	std	Y+37, r26	; 0x25
    31f6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    31f8:	6b a1       	ldd	r22, Y+35	; 0x23
    31fa:	7c a1       	ldd	r23, Y+36	; 0x24
    31fc:	8d a1       	ldd	r24, Y+37	; 0x25
    31fe:	9e a1       	ldd	r25, Y+38	; 0x26
    3200:	20 e0       	ldi	r18, 0x00	; 0
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	40 e8       	ldi	r20, 0x80	; 128
    3206:	5f e3       	ldi	r21, 0x3F	; 63
    3208:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    320c:	88 23       	and	r24, r24
    320e:	2c f4       	brge	.+10     	; 0x321a <HSTEPPER_vRotate+0x1be>
		__ticks = 1;
    3210:	81 e0       	ldi	r24, 0x01	; 1
    3212:	90 e0       	ldi	r25, 0x00	; 0
    3214:	9a a3       	std	Y+34, r25	; 0x22
    3216:	89 a3       	std	Y+33, r24	; 0x21
    3218:	3f c0       	rjmp	.+126    	; 0x3298 <HSTEPPER_vRotate+0x23c>
	else if (__tmp > 65535)
    321a:	6b a1       	ldd	r22, Y+35	; 0x23
    321c:	7c a1       	ldd	r23, Y+36	; 0x24
    321e:	8d a1       	ldd	r24, Y+37	; 0x25
    3220:	9e a1       	ldd	r25, Y+38	; 0x26
    3222:	20 e0       	ldi	r18, 0x00	; 0
    3224:	3f ef       	ldi	r19, 0xFF	; 255
    3226:	4f e7       	ldi	r20, 0x7F	; 127
    3228:	57 e4       	ldi	r21, 0x47	; 71
    322a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    322e:	18 16       	cp	r1, r24
    3230:	4c f5       	brge	.+82     	; 0x3284 <HSTEPPER_vRotate+0x228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3232:	6f a1       	ldd	r22, Y+39	; 0x27
    3234:	78 a5       	ldd	r23, Y+40	; 0x28
    3236:	89 a5       	ldd	r24, Y+41	; 0x29
    3238:	9a a5       	ldd	r25, Y+42	; 0x2a
    323a:	20 e0       	ldi	r18, 0x00	; 0
    323c:	30 e0       	ldi	r19, 0x00	; 0
    323e:	40 e2       	ldi	r20, 0x20	; 32
    3240:	51 e4       	ldi	r21, 0x41	; 65
    3242:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3246:	dc 01       	movw	r26, r24
    3248:	cb 01       	movw	r24, r22
    324a:	bc 01       	movw	r22, r24
    324c:	cd 01       	movw	r24, r26
    324e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3252:	dc 01       	movw	r26, r24
    3254:	cb 01       	movw	r24, r22
    3256:	9a a3       	std	Y+34, r25	; 0x22
    3258:	89 a3       	std	Y+33, r24	; 0x21
    325a:	0f c0       	rjmp	.+30     	; 0x327a <HSTEPPER_vRotate+0x21e>
    325c:	8c e2       	ldi	r24, 0x2C	; 44
    325e:	91 e0       	ldi	r25, 0x01	; 1
    3260:	98 a3       	std	Y+32, r25	; 0x20
    3262:	8f 8f       	std	Y+31, r24	; 0x1f
    3264:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3266:	98 a1       	ldd	r25, Y+32	; 0x20
    3268:	01 97       	sbiw	r24, 0x01	; 1
    326a:	f1 f7       	brne	.-4      	; 0x3268 <HSTEPPER_vRotate+0x20c>
    326c:	98 a3       	std	Y+32, r25	; 0x20
    326e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3270:	89 a1       	ldd	r24, Y+33	; 0x21
    3272:	9a a1       	ldd	r25, Y+34	; 0x22
    3274:	01 97       	sbiw	r24, 0x01	; 1
    3276:	9a a3       	std	Y+34, r25	; 0x22
    3278:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    327a:	89 a1       	ldd	r24, Y+33	; 0x21
    327c:	9a a1       	ldd	r25, Y+34	; 0x22
    327e:	00 97       	sbiw	r24, 0x00	; 0
    3280:	69 f7       	brne	.-38     	; 0x325c <HSTEPPER_vRotate+0x200>
    3282:	14 c0       	rjmp	.+40     	; 0x32ac <HSTEPPER_vRotate+0x250>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3284:	6b a1       	ldd	r22, Y+35	; 0x23
    3286:	7c a1       	ldd	r23, Y+36	; 0x24
    3288:	8d a1       	ldd	r24, Y+37	; 0x25
    328a:	9e a1       	ldd	r25, Y+38	; 0x26
    328c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3290:	dc 01       	movw	r26, r24
    3292:	cb 01       	movw	r24, r22
    3294:	9a a3       	std	Y+34, r25	; 0x22
    3296:	89 a3       	std	Y+33, r24	; 0x21
    3298:	89 a1       	ldd	r24, Y+33	; 0x21
    329a:	9a a1       	ldd	r25, Y+34	; 0x22
    329c:	9e 8f       	std	Y+30, r25	; 0x1e
    329e:	8d 8f       	std	Y+29, r24	; 0x1d
    32a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    32a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    32a4:	01 97       	sbiw	r24, 0x01	; 1
    32a6:	f1 f7       	brne	.-4      	; 0x32a4 <HSTEPPER_vRotate+0x248>
    32a8:	9e 8f       	std	Y+30, r25	; 0x1e
    32aa:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(10);

        // Step 3
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    32ac:	82 e0       	ldi	r24, 0x02	; 2
    32ae:	60 e0       	ldi	r22, 0x00	; 0
    32b0:	41 e0       	ldi	r20, 0x01	; 1
    32b2:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    32b6:	82 e0       	ldi	r24, 0x02	; 2
    32b8:	61 e0       	ldi	r22, 0x01	; 1
    32ba:	41 e0       	ldi	r20, 0x01	; 1
    32bc:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_LOW);
    32c0:	82 e0       	ldi	r24, 0x02	; 2
    32c2:	62 e0       	ldi	r22, 0x02	; 2
    32c4:	40 e0       	ldi	r20, 0x00	; 0
    32c6:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    32ca:	82 e0       	ldi	r24, 0x02	; 2
    32cc:	63 e0       	ldi	r22, 0x03	; 3
    32ce:	41 e0       	ldi	r20, 0x01	; 1
    32d0:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    32d4:	80 e0       	ldi	r24, 0x00	; 0
    32d6:	90 e0       	ldi	r25, 0x00	; 0
    32d8:	a0 e2       	ldi	r26, 0x20	; 32
    32da:	b1 e4       	ldi	r27, 0x41	; 65
    32dc:	89 8f       	std	Y+25, r24	; 0x19
    32de:	9a 8f       	std	Y+26, r25	; 0x1a
    32e0:	ab 8f       	std	Y+27, r26	; 0x1b
    32e2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32e4:	69 8d       	ldd	r22, Y+25	; 0x19
    32e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32ec:	20 e0       	ldi	r18, 0x00	; 0
    32ee:	30 e8       	ldi	r19, 0x80	; 128
    32f0:	4b e3       	ldi	r20, 0x3B	; 59
    32f2:	55 e4       	ldi	r21, 0x45	; 69
    32f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    32f8:	dc 01       	movw	r26, r24
    32fa:	cb 01       	movw	r24, r22
    32fc:	8d 8b       	std	Y+21, r24	; 0x15
    32fe:	9e 8b       	std	Y+22, r25	; 0x16
    3300:	af 8b       	std	Y+23, r26	; 0x17
    3302:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3304:	6d 89       	ldd	r22, Y+21	; 0x15
    3306:	7e 89       	ldd	r23, Y+22	; 0x16
    3308:	8f 89       	ldd	r24, Y+23	; 0x17
    330a:	98 8d       	ldd	r25, Y+24	; 0x18
    330c:	20 e0       	ldi	r18, 0x00	; 0
    330e:	30 e0       	ldi	r19, 0x00	; 0
    3310:	40 e8       	ldi	r20, 0x80	; 128
    3312:	5f e3       	ldi	r21, 0x3F	; 63
    3314:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3318:	88 23       	and	r24, r24
    331a:	2c f4       	brge	.+10     	; 0x3326 <HSTEPPER_vRotate+0x2ca>
		__ticks = 1;
    331c:	81 e0       	ldi	r24, 0x01	; 1
    331e:	90 e0       	ldi	r25, 0x00	; 0
    3320:	9c 8b       	std	Y+20, r25	; 0x14
    3322:	8b 8b       	std	Y+19, r24	; 0x13
    3324:	3f c0       	rjmp	.+126    	; 0x33a4 <HSTEPPER_vRotate+0x348>
	else if (__tmp > 65535)
    3326:	6d 89       	ldd	r22, Y+21	; 0x15
    3328:	7e 89       	ldd	r23, Y+22	; 0x16
    332a:	8f 89       	ldd	r24, Y+23	; 0x17
    332c:	98 8d       	ldd	r25, Y+24	; 0x18
    332e:	20 e0       	ldi	r18, 0x00	; 0
    3330:	3f ef       	ldi	r19, 0xFF	; 255
    3332:	4f e7       	ldi	r20, 0x7F	; 127
    3334:	57 e4       	ldi	r21, 0x47	; 71
    3336:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    333a:	18 16       	cp	r1, r24
    333c:	4c f5       	brge	.+82     	; 0x3390 <HSTEPPER_vRotate+0x334>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    333e:	69 8d       	ldd	r22, Y+25	; 0x19
    3340:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3342:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3344:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3346:	20 e0       	ldi	r18, 0x00	; 0
    3348:	30 e0       	ldi	r19, 0x00	; 0
    334a:	40 e2       	ldi	r20, 0x20	; 32
    334c:	51 e4       	ldi	r21, 0x41	; 65
    334e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3352:	dc 01       	movw	r26, r24
    3354:	cb 01       	movw	r24, r22
    3356:	bc 01       	movw	r22, r24
    3358:	cd 01       	movw	r24, r26
    335a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    335e:	dc 01       	movw	r26, r24
    3360:	cb 01       	movw	r24, r22
    3362:	9c 8b       	std	Y+20, r25	; 0x14
    3364:	8b 8b       	std	Y+19, r24	; 0x13
    3366:	0f c0       	rjmp	.+30     	; 0x3386 <HSTEPPER_vRotate+0x32a>
    3368:	8c e2       	ldi	r24, 0x2C	; 44
    336a:	91 e0       	ldi	r25, 0x01	; 1
    336c:	9a 8b       	std	Y+18, r25	; 0x12
    336e:	89 8b       	std	Y+17, r24	; 0x11
    3370:	89 89       	ldd	r24, Y+17	; 0x11
    3372:	9a 89       	ldd	r25, Y+18	; 0x12
    3374:	01 97       	sbiw	r24, 0x01	; 1
    3376:	f1 f7       	brne	.-4      	; 0x3374 <HSTEPPER_vRotate+0x318>
    3378:	9a 8b       	std	Y+18, r25	; 0x12
    337a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    337c:	8b 89       	ldd	r24, Y+19	; 0x13
    337e:	9c 89       	ldd	r25, Y+20	; 0x14
    3380:	01 97       	sbiw	r24, 0x01	; 1
    3382:	9c 8b       	std	Y+20, r25	; 0x14
    3384:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3386:	8b 89       	ldd	r24, Y+19	; 0x13
    3388:	9c 89       	ldd	r25, Y+20	; 0x14
    338a:	00 97       	sbiw	r24, 0x00	; 0
    338c:	69 f7       	brne	.-38     	; 0x3368 <HSTEPPER_vRotate+0x30c>
    338e:	14 c0       	rjmp	.+40     	; 0x33b8 <HSTEPPER_vRotate+0x35c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3390:	6d 89       	ldd	r22, Y+21	; 0x15
    3392:	7e 89       	ldd	r23, Y+22	; 0x16
    3394:	8f 89       	ldd	r24, Y+23	; 0x17
    3396:	98 8d       	ldd	r25, Y+24	; 0x18
    3398:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    339c:	dc 01       	movw	r26, r24
    339e:	cb 01       	movw	r24, r22
    33a0:	9c 8b       	std	Y+20, r25	; 0x14
    33a2:	8b 8b       	std	Y+19, r24	; 0x13
    33a4:	8b 89       	ldd	r24, Y+19	; 0x13
    33a6:	9c 89       	ldd	r25, Y+20	; 0x14
    33a8:	98 8b       	std	Y+16, r25	; 0x10
    33aa:	8f 87       	std	Y+15, r24	; 0x0f
    33ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    33ae:	98 89       	ldd	r25, Y+16	; 0x10
    33b0:	01 97       	sbiw	r24, 0x01	; 1
    33b2:	f1 f7       	brne	.-4      	; 0x33b0 <HSTEPPER_vRotate+0x354>
    33b4:	98 8b       	std	Y+16, r25	; 0x10
    33b6:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(10);

        // Step 4
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    33b8:	82 e0       	ldi	r24, 0x02	; 2
    33ba:	60 e0       	ldi	r22, 0x00	; 0
    33bc:	41 e0       	ldi	r20, 0x01	; 1
    33be:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    33c2:	82 e0       	ldi	r24, 0x02	; 2
    33c4:	61 e0       	ldi	r22, 0x01	; 1
    33c6:	41 e0       	ldi	r20, 0x01	; 1
    33c8:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    33cc:	82 e0       	ldi	r24, 0x02	; 2
    33ce:	62 e0       	ldi	r22, 0x02	; 2
    33d0:	41 e0       	ldi	r20, 0x01	; 1
    33d2:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_LOW);
    33d6:	82 e0       	ldi	r24, 0x02	; 2
    33d8:	63 e0       	ldi	r22, 0x03	; 3
    33da:	40 e0       	ldi	r20, 0x00	; 0
    33dc:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    33e0:	80 e0       	ldi	r24, 0x00	; 0
    33e2:	90 e0       	ldi	r25, 0x00	; 0
    33e4:	a0 e2       	ldi	r26, 0x20	; 32
    33e6:	b1 e4       	ldi	r27, 0x41	; 65
    33e8:	8b 87       	std	Y+11, r24	; 0x0b
    33ea:	9c 87       	std	Y+12, r25	; 0x0c
    33ec:	ad 87       	std	Y+13, r26	; 0x0d
    33ee:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    33f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    33f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    33f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    33f8:	20 e0       	ldi	r18, 0x00	; 0
    33fa:	30 e8       	ldi	r19, 0x80	; 128
    33fc:	4b e3       	ldi	r20, 0x3B	; 59
    33fe:	55 e4       	ldi	r21, 0x45	; 69
    3400:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	8f 83       	std	Y+7, r24	; 0x07
    340a:	98 87       	std	Y+8, r25	; 0x08
    340c:	a9 87       	std	Y+9, r26	; 0x09
    340e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3410:	6f 81       	ldd	r22, Y+7	; 0x07
    3412:	78 85       	ldd	r23, Y+8	; 0x08
    3414:	89 85       	ldd	r24, Y+9	; 0x09
    3416:	9a 85       	ldd	r25, Y+10	; 0x0a
    3418:	20 e0       	ldi	r18, 0x00	; 0
    341a:	30 e0       	ldi	r19, 0x00	; 0
    341c:	40 e8       	ldi	r20, 0x80	; 128
    341e:	5f e3       	ldi	r21, 0x3F	; 63
    3420:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3424:	88 23       	and	r24, r24
    3426:	2c f4       	brge	.+10     	; 0x3432 <HSTEPPER_vRotate+0x3d6>
		__ticks = 1;
    3428:	81 e0       	ldi	r24, 0x01	; 1
    342a:	90 e0       	ldi	r25, 0x00	; 0
    342c:	9e 83       	std	Y+6, r25	; 0x06
    342e:	8d 83       	std	Y+5, r24	; 0x05
    3430:	3f c0       	rjmp	.+126    	; 0x34b0 <HSTEPPER_vRotate+0x454>
	else if (__tmp > 65535)
    3432:	6f 81       	ldd	r22, Y+7	; 0x07
    3434:	78 85       	ldd	r23, Y+8	; 0x08
    3436:	89 85       	ldd	r24, Y+9	; 0x09
    3438:	9a 85       	ldd	r25, Y+10	; 0x0a
    343a:	20 e0       	ldi	r18, 0x00	; 0
    343c:	3f ef       	ldi	r19, 0xFF	; 255
    343e:	4f e7       	ldi	r20, 0x7F	; 127
    3440:	57 e4       	ldi	r21, 0x47	; 71
    3442:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3446:	18 16       	cp	r1, r24
    3448:	4c f5       	brge	.+82     	; 0x349c <HSTEPPER_vRotate+0x440>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    344a:	6b 85       	ldd	r22, Y+11	; 0x0b
    344c:	7c 85       	ldd	r23, Y+12	; 0x0c
    344e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3450:	9e 85       	ldd	r25, Y+14	; 0x0e
    3452:	20 e0       	ldi	r18, 0x00	; 0
    3454:	30 e0       	ldi	r19, 0x00	; 0
    3456:	40 e2       	ldi	r20, 0x20	; 32
    3458:	51 e4       	ldi	r21, 0x41	; 65
    345a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    345e:	dc 01       	movw	r26, r24
    3460:	cb 01       	movw	r24, r22
    3462:	bc 01       	movw	r22, r24
    3464:	cd 01       	movw	r24, r26
    3466:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    346a:	dc 01       	movw	r26, r24
    346c:	cb 01       	movw	r24, r22
    346e:	9e 83       	std	Y+6, r25	; 0x06
    3470:	8d 83       	std	Y+5, r24	; 0x05
    3472:	0f c0       	rjmp	.+30     	; 0x3492 <HSTEPPER_vRotate+0x436>
    3474:	8c e2       	ldi	r24, 0x2C	; 44
    3476:	91 e0       	ldi	r25, 0x01	; 1
    3478:	9c 83       	std	Y+4, r25	; 0x04
    347a:	8b 83       	std	Y+3, r24	; 0x03
    347c:	8b 81       	ldd	r24, Y+3	; 0x03
    347e:	9c 81       	ldd	r25, Y+4	; 0x04
    3480:	01 97       	sbiw	r24, 0x01	; 1
    3482:	f1 f7       	brne	.-4      	; 0x3480 <HSTEPPER_vRotate+0x424>
    3484:	9c 83       	std	Y+4, r25	; 0x04
    3486:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3488:	8d 81       	ldd	r24, Y+5	; 0x05
    348a:	9e 81       	ldd	r25, Y+6	; 0x06
    348c:	01 97       	sbiw	r24, 0x01	; 1
    348e:	9e 83       	std	Y+6, r25	; 0x06
    3490:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3492:	8d 81       	ldd	r24, Y+5	; 0x05
    3494:	9e 81       	ldd	r25, Y+6	; 0x06
    3496:	00 97       	sbiw	r24, 0x00	; 0
    3498:	69 f7       	brne	.-38     	; 0x3474 <HSTEPPER_vRotate+0x418>
    349a:	14 c0       	rjmp	.+40     	; 0x34c4 <HSTEPPER_vRotate+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    349c:	6f 81       	ldd	r22, Y+7	; 0x07
    349e:	78 85       	ldd	r23, Y+8	; 0x08
    34a0:	89 85       	ldd	r24, Y+9	; 0x09
    34a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    34a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34a8:	dc 01       	movw	r26, r24
    34aa:	cb 01       	movw	r24, r22
    34ac:	9e 83       	std	Y+6, r25	; 0x06
    34ae:	8d 83       	std	Y+5, r24	; 0x05
    34b0:	8d 81       	ldd	r24, Y+5	; 0x05
    34b2:	9e 81       	ldd	r25, Y+6	; 0x06
    34b4:	9a 83       	std	Y+2, r25	; 0x02
    34b6:	89 83       	std	Y+1, r24	; 0x01
    34b8:	89 81       	ldd	r24, Y+1	; 0x01
    34ba:	9a 81       	ldd	r25, Y+2	; 0x02
    34bc:	01 97       	sbiw	r24, 0x01	; 1
    34be:	f1 f7       	brne	.-4      	; 0x34bc <HSTEPPER_vRotate+0x460>
    34c0:	9a 83       	std	Y+2, r25	; 0x02
    34c2:	89 83       	std	Y+1, r24	; 0x01
void HSTEPPER_vRotate(u16 A_u16Angle)
{

u16 Iteration = (512 * A_u16Angle) / 360;

    for(u16 i = 0; i < Iteration; i++)
    34c4:	89 ad       	ldd	r24, Y+57	; 0x39
    34c6:	9a ad       	ldd	r25, Y+58	; 0x3a
    34c8:	01 96       	adiw	r24, 0x01	; 1
    34ca:	9a af       	std	Y+58, r25	; 0x3a
    34cc:	89 af       	std	Y+57, r24	; 0x39
    34ce:	29 ad       	ldd	r18, Y+57	; 0x39
    34d0:	3a ad       	ldd	r19, Y+58	; 0x3a
    34d2:	8b ad       	ldd	r24, Y+59	; 0x3b
    34d4:	9c ad       	ldd	r25, Y+60	; 0x3c
    34d6:	28 17       	cp	r18, r24
    34d8:	39 07       	cpc	r19, r25
    34da:	08 f4       	brcc	.+2      	; 0x34de <HSTEPPER_vRotate+0x482>
    34dc:	db cd       	rjmp	.-1098   	; 0x3094 <HSTEPPER_vRotate+0x38>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_LOW);
        _delay_ms(10);
    }
}
    34de:	ee 96       	adiw	r28, 0x3e	; 62
    34e0:	0f b6       	in	r0, 0x3f	; 63
    34e2:	f8 94       	cli
    34e4:	de bf       	out	0x3e, r29	; 62
    34e6:	0f be       	out	0x3f, r0	; 63
    34e8:	cd bf       	out	0x3d, r28	; 61
    34ea:	cf 91       	pop	r28
    34ec:	df 91       	pop	r29
    34ee:	08 95       	ret

000034f0 <HSSD_vInit>:




void HSSD_vInit(DIO_PORT_e A_PortID)
{
    34f0:	df 93       	push	r29
    34f2:	cf 93       	push	r28
    34f4:	00 d0       	rcall	.+0      	; 0x34f6 <HSSD_vInit+0x6>
    34f6:	0f 92       	push	r0
    34f8:	cd b7       	in	r28, 0x3d	; 61
    34fa:	de b7       	in	r29, 0x3e	; 62
    34fc:	89 83       	std	Y+1, r24	; 0x01
	if((A_PortID <= DIO_PORTD))
    34fe:	89 81       	ldd	r24, Y+1	; 0x01
    3500:	84 30       	cpi	r24, 0x04	; 4
    3502:	08 f0       	brcs	.+2      	; 0x3506 <HSSD_vInit+0x16>
    3504:	42 c0       	rjmp	.+132    	; 0x358a <HSSD_vInit+0x9a>
	{
		switch(A_PortID)
    3506:	89 81       	ldd	r24, Y+1	; 0x01
    3508:	28 2f       	mov	r18, r24
    350a:	30 e0       	ldi	r19, 0x00	; 0
    350c:	3b 83       	std	Y+3, r19	; 0x03
    350e:	2a 83       	std	Y+2, r18	; 0x02
    3510:	8a 81       	ldd	r24, Y+2	; 0x02
    3512:	9b 81       	ldd	r25, Y+3	; 0x03
    3514:	81 30       	cpi	r24, 0x01	; 1
    3516:	91 05       	cpc	r25, r1
    3518:	f1 f0       	breq	.+60     	; 0x3556 <HSSD_vInit+0x66>
    351a:	2a 81       	ldd	r18, Y+2	; 0x02
    351c:	3b 81       	ldd	r19, Y+3	; 0x03
    351e:	22 30       	cpi	r18, 0x02	; 2
    3520:	31 05       	cpc	r19, r1
    3522:	2c f4       	brge	.+10     	; 0x352e <HSSD_vInit+0x3e>
    3524:	8a 81       	ldd	r24, Y+2	; 0x02
    3526:	9b 81       	ldd	r25, Y+3	; 0x03
    3528:	00 97       	sbiw	r24, 0x00	; 0
    352a:	61 f0       	breq	.+24     	; 0x3544 <HSSD_vInit+0x54>
    352c:	2e c0       	rjmp	.+92     	; 0x358a <HSSD_vInit+0x9a>
    352e:	2a 81       	ldd	r18, Y+2	; 0x02
    3530:	3b 81       	ldd	r19, Y+3	; 0x03
    3532:	22 30       	cpi	r18, 0x02	; 2
    3534:	31 05       	cpc	r19, r1
    3536:	c1 f0       	breq	.+48     	; 0x3568 <HSSD_vInit+0x78>
    3538:	8a 81       	ldd	r24, Y+2	; 0x02
    353a:	9b 81       	ldd	r25, Y+3	; 0x03
    353c:	83 30       	cpi	r24, 0x03	; 3
    353e:	91 05       	cpc	r25, r1
    3540:	e1 f0       	breq	.+56     	; 0x357a <HSSD_vInit+0x8a>
    3542:	23 c0       	rjmp	.+70     	; 0x358a <HSSD_vInit+0x9a>
		{
		case DIO_PORTA:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    3544:	89 81       	ldd	r24, Y+1	; 0x01
    3546:	6f ef       	ldi	r22, 0xFF	; 255
    3548:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    354c:	89 81       	ldd	r24, Y+1	; 0x01
    354e:	6f ef       	ldi	r22, 0xFF	; 255
    3550:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    3554:	1a c0       	rjmp	.+52     	; 0x358a <HSSD_vInit+0x9a>
			break;
		case DIO_PORTB:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    3556:	89 81       	ldd	r24, Y+1	; 0x01
    3558:	6f ef       	ldi	r22, 0xFF	; 255
    355a:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    355e:	89 81       	ldd	r24, Y+1	; 0x01
    3560:	6f ef       	ldi	r22, 0xFF	; 255
    3562:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    3566:	11 c0       	rjmp	.+34     	; 0x358a <HSSD_vInit+0x9a>
			break;
		case DIO_PORTC:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    3568:	89 81       	ldd	r24, Y+1	; 0x01
    356a:	6f ef       	ldi	r22, 0xFF	; 255
    356c:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3570:	89 81       	ldd	r24, Y+1	; 0x01
    3572:	6f ef       	ldi	r22, 0xFF	; 255
    3574:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    3578:	08 c0       	rjmp	.+16     	; 0x358a <HSSD_vInit+0x9a>
			break;
		case DIO_PORTD:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    357a:	89 81       	ldd	r24, Y+1	; 0x01
    357c:	6f ef       	ldi	r22, 0xFF	; 255
    357e:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3582:	89 81       	ldd	r24, Y+1	; 0x01
    3584:	6f ef       	ldi	r22, 0xFF	; 255
    3586:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
			break;
		}
	}
}
    358a:	0f 90       	pop	r0
    358c:	0f 90       	pop	r0
    358e:	0f 90       	pop	r0
    3590:	cf 91       	pop	r28
    3592:	df 91       	pop	r29
    3594:	08 95       	ret

00003596 <HSSD_vDisplayNumber>:

void HSSD_vDisplayNumber(DIO_PORT_e A_PortID, u8 A_u8NumberValue)
{
    3596:	df 93       	push	r29
    3598:	cf 93       	push	r28
    359a:	00 d0       	rcall	.+0      	; 0x359c <HSSD_vDisplayNumber+0x6>
    359c:	00 d0       	rcall	.+0      	; 0x359e <HSSD_vDisplayNumber+0x8>
    359e:	cd b7       	in	r28, 0x3d	; 61
    35a0:	de b7       	in	r29, 0x3e	; 62
    35a2:	89 83       	std	Y+1, r24	; 0x01
    35a4:	6a 83       	std	Y+2, r22	; 0x02
	if(A_PortID <= DIO_PORTD)
    35a6:	89 81       	ldd	r24, Y+1	; 0x01
    35a8:	84 30       	cpi	r24, 0x04	; 4
    35aa:	90 f5       	brcc	.+100    	; 0x3610 <HSSD_vDisplayNumber+0x7a>
	{
		switch(A_PortID)
    35ac:	89 81       	ldd	r24, Y+1	; 0x01
    35ae:	28 2f       	mov	r18, r24
    35b0:	30 e0       	ldi	r19, 0x00	; 0
    35b2:	3c 83       	std	Y+4, r19	; 0x04
    35b4:	2b 83       	std	Y+3, r18	; 0x03
    35b6:	8b 81       	ldd	r24, Y+3	; 0x03
    35b8:	9c 81       	ldd	r25, Y+4	; 0x04
    35ba:	81 30       	cpi	r24, 0x01	; 1
    35bc:	91 05       	cpc	r25, r1
    35be:	d1 f0       	breq	.+52     	; 0x35f4 <HSSD_vDisplayNumber+0x5e>
    35c0:	2b 81       	ldd	r18, Y+3	; 0x03
    35c2:	3c 81       	ldd	r19, Y+4	; 0x04
    35c4:	22 30       	cpi	r18, 0x02	; 2
    35c6:	31 05       	cpc	r19, r1
    35c8:	2c f4       	brge	.+10     	; 0x35d4 <HSSD_vDisplayNumber+0x3e>
    35ca:	8b 81       	ldd	r24, Y+3	; 0x03
    35cc:	9c 81       	ldd	r25, Y+4	; 0x04
    35ce:	00 97       	sbiw	r24, 0x00	; 0
    35d0:	61 f0       	breq	.+24     	; 0x35ea <HSSD_vDisplayNumber+0x54>
    35d2:	1e c0       	rjmp	.+60     	; 0x3610 <HSSD_vDisplayNumber+0x7a>
    35d4:	2b 81       	ldd	r18, Y+3	; 0x03
    35d6:	3c 81       	ldd	r19, Y+4	; 0x04
    35d8:	22 30       	cpi	r18, 0x02	; 2
    35da:	31 05       	cpc	r19, r1
    35dc:	81 f0       	breq	.+32     	; 0x35fe <HSSD_vDisplayNumber+0x68>
    35de:	8b 81       	ldd	r24, Y+3	; 0x03
    35e0:	9c 81       	ldd	r25, Y+4	; 0x04
    35e2:	83 30       	cpi	r24, 0x03	; 3
    35e4:	91 05       	cpc	r25, r1
    35e6:	81 f0       	breq	.+32     	; 0x3608 <HSSD_vDisplayNumber+0x72>
    35e8:	13 c0       	rjmp	.+38     	; 0x3610 <HSSD_vDisplayNumber+0x7a>
		{
		case DIO_PORTA:
			MDIO_vSetPortVal(A_PortID , A_u8NumberValue);
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	6a 81       	ldd	r22, Y+2	; 0x02
    35ee:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    35f2:	0e c0       	rjmp	.+28     	; 0x3610 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTB:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    35f4:	89 81       	ldd	r24, Y+1	; 0x01
    35f6:	6a 81       	ldd	r22, Y+2	; 0x02
    35f8:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    35fc:	09 c0       	rjmp	.+18     	; 0x3610 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTC:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    35fe:	89 81       	ldd	r24, Y+1	; 0x01
    3600:	6a 81       	ldd	r22, Y+2	; 0x02
    3602:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
    3606:	04 c0       	rjmp	.+8      	; 0x3610 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTD:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    3608:	89 81       	ldd	r24, Y+1	; 0x01
    360a:	6a 81       	ldd	r22, Y+2	; 0x02
    360c:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
			break;
		}
	}
}
    3610:	0f 90       	pop	r0
    3612:	0f 90       	pop	r0
    3614:	0f 90       	pop	r0
    3616:	0f 90       	pop	r0
    3618:	cf 91       	pop	r28
    361a:	df 91       	pop	r29
    361c:	08 95       	ret

0000361e <HSSD_vDisplayNumberAscending>:
void HSSD_vDisplayNumberAscending(DIO_PORT_e A_PortID , u16 A_u16TimetoWait)
{
    361e:	df 93       	push	r29
    3620:	cf 93       	push	r28
    3622:	cd b7       	in	r28, 0x3d	; 61
    3624:	de b7       	in	r29, 0x3e	; 62
    3626:	c0 55       	subi	r28, 0x50	; 80
    3628:	d0 40       	sbci	r29, 0x00	; 0
    362a:	0f b6       	in	r0, 0x3f	; 63
    362c:	f8 94       	cli
    362e:	de bf       	out	0x3e, r29	; 62
    3630:	0f be       	out	0x3f, r0	; 63
    3632:	cd bf       	out	0x3d, r28	; 61
    3634:	fe 01       	movw	r30, r28
    3636:	e9 5b       	subi	r30, 0xB9	; 185
    3638:	ff 4f       	sbci	r31, 0xFF	; 255
    363a:	80 83       	st	Z, r24
    363c:	fe 01       	movw	r30, r28
    363e:	e8 5b       	subi	r30, 0xB8	; 184
    3640:	ff 4f       	sbci	r31, 0xFF	; 255
    3642:	71 83       	std	Z+1, r23	; 0x01
    3644:	60 83       	st	Z, r22
	u8 SSD_u8ArrOfNumbers [10]= {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    3646:	9e 01       	movw	r18, r28
    3648:	23 5c       	subi	r18, 0xC3	; 195
    364a:	3f 4f       	sbci	r19, 0xFF	; 255
    364c:	2e 96       	adiw	r28, 0x0e	; 14
    364e:	3f af       	std	Y+63, r19	; 0x3f
    3650:	2e af       	std	Y+62, r18	; 0x3e
    3652:	2e 97       	sbiw	r28, 0x0e	; 14
    3654:	8a ea       	ldi	r24, 0xAA	; 170
    3656:	92 e0       	ldi	r25, 0x02	; 2
    3658:	60 96       	adiw	r28, 0x10	; 16
    365a:	9f af       	std	Y+63, r25	; 0x3f
    365c:	8e af       	std	Y+62, r24	; 0x3e
    365e:	60 97       	sbiw	r28, 0x10	; 16
    3660:	9a e0       	ldi	r25, 0x0A	; 10
    3662:	61 96       	adiw	r28, 0x11	; 17
    3664:	9f af       	std	Y+63, r25	; 0x3f
    3666:	61 97       	sbiw	r28, 0x11	; 17
    3668:	60 96       	adiw	r28, 0x10	; 16
    366a:	ee ad       	ldd	r30, Y+62	; 0x3e
    366c:	ff ad       	ldd	r31, Y+63	; 0x3f
    366e:	60 97       	sbiw	r28, 0x10	; 16
    3670:	00 80       	ld	r0, Z
    3672:	60 96       	adiw	r28, 0x10	; 16
    3674:	2e ad       	ldd	r18, Y+62	; 0x3e
    3676:	3f ad       	ldd	r19, Y+63	; 0x3f
    3678:	60 97       	sbiw	r28, 0x10	; 16
    367a:	2f 5f       	subi	r18, 0xFF	; 255
    367c:	3f 4f       	sbci	r19, 0xFF	; 255
    367e:	60 96       	adiw	r28, 0x10	; 16
    3680:	3f af       	std	Y+63, r19	; 0x3f
    3682:	2e af       	std	Y+62, r18	; 0x3e
    3684:	60 97       	sbiw	r28, 0x10	; 16
    3686:	2e 96       	adiw	r28, 0x0e	; 14
    3688:	ee ad       	ldd	r30, Y+62	; 0x3e
    368a:	ff ad       	ldd	r31, Y+63	; 0x3f
    368c:	2e 97       	sbiw	r28, 0x0e	; 14
    368e:	00 82       	st	Z, r0
    3690:	2e 96       	adiw	r28, 0x0e	; 14
    3692:	2e ad       	ldd	r18, Y+62	; 0x3e
    3694:	3f ad       	ldd	r19, Y+63	; 0x3f
    3696:	2e 97       	sbiw	r28, 0x0e	; 14
    3698:	2f 5f       	subi	r18, 0xFF	; 255
    369a:	3f 4f       	sbci	r19, 0xFF	; 255
    369c:	2e 96       	adiw	r28, 0x0e	; 14
    369e:	3f af       	std	Y+63, r19	; 0x3f
    36a0:	2e af       	std	Y+62, r18	; 0x3e
    36a2:	2e 97       	sbiw	r28, 0x0e	; 14
    36a4:	61 96       	adiw	r28, 0x11	; 17
    36a6:	3f ad       	ldd	r19, Y+63	; 0x3f
    36a8:	61 97       	sbiw	r28, 0x11	; 17
    36aa:	31 50       	subi	r19, 0x01	; 1
    36ac:	61 96       	adiw	r28, 0x11	; 17
    36ae:	3f af       	std	Y+63, r19	; 0x3f
    36b0:	61 97       	sbiw	r28, 0x11	; 17
    36b2:	61 96       	adiw	r28, 0x11	; 17
    36b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    36b6:	61 97       	sbiw	r28, 0x11	; 17
    36b8:	88 23       	and	r24, r24
    36ba:	b1 f6       	brne	.-84     	; 0x3668 <HSSD_vDisplayNumberAscending+0x4a>
	if(A_PortID <= DIO_PORTD)
    36bc:	fe 01       	movw	r30, r28
    36be:	e9 5b       	subi	r30, 0xB9	; 185
    36c0:	ff 4f       	sbci	r31, 0xFF	; 255
    36c2:	80 81       	ld	r24, Z
    36c4:	84 30       	cpi	r24, 0x04	; 4
    36c6:	08 f0       	brcs	.+2      	; 0x36ca <HSSD_vDisplayNumberAscending+0xac>
    36c8:	7c c2       	rjmp	.+1272   	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
	{
		switch(A_PortID)
    36ca:	fe 01       	movw	r30, r28
    36cc:	e9 5b       	subi	r30, 0xB9	; 185
    36ce:	ff 4f       	sbci	r31, 0xFF	; 255
    36d0:	80 81       	ld	r24, Z
    36d2:	e8 2f       	mov	r30, r24
    36d4:	f0 e0       	ldi	r31, 0x00	; 0
    36d6:	2c 96       	adiw	r28, 0x0c	; 12
    36d8:	ff af       	std	Y+63, r31	; 0x3f
    36da:	ee af       	std	Y+62, r30	; 0x3e
    36dc:	2c 97       	sbiw	r28, 0x0c	; 12
    36de:	2c 96       	adiw	r28, 0x0c	; 12
    36e0:	2e ad       	ldd	r18, Y+62	; 0x3e
    36e2:	3f ad       	ldd	r19, Y+63	; 0x3f
    36e4:	2c 97       	sbiw	r28, 0x0c	; 12
    36e6:	21 30       	cpi	r18, 0x01	; 1
    36e8:	31 05       	cpc	r19, r1
    36ea:	09 f4       	brne	.+2      	; 0x36ee <HSSD_vDisplayNumberAscending+0xd0>
    36ec:	b2 c0       	rjmp	.+356    	; 0x3852 <HSSD_vDisplayNumberAscending+0x234>
    36ee:	2c 96       	adiw	r28, 0x0c	; 12
    36f0:	8e ad       	ldd	r24, Y+62	; 0x3e
    36f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    36f4:	2c 97       	sbiw	r28, 0x0c	; 12
    36f6:	82 30       	cpi	r24, 0x02	; 2
    36f8:	91 05       	cpc	r25, r1
    36fa:	3c f4       	brge	.+14     	; 0x370a <HSSD_vDisplayNumberAscending+0xec>
    36fc:	2c 96       	adiw	r28, 0x0c	; 12
    36fe:	ee ad       	ldd	r30, Y+62	; 0x3e
    3700:	ff ad       	ldd	r31, Y+63	; 0x3f
    3702:	2c 97       	sbiw	r28, 0x0c	; 12
    3704:	30 97       	sbiw	r30, 0x00	; 0
    3706:	91 f0       	breq	.+36     	; 0x372c <HSSD_vDisplayNumberAscending+0x10e>
    3708:	5c c2       	rjmp	.+1208   	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
    370a:	2c 96       	adiw	r28, 0x0c	; 12
    370c:	2e ad       	ldd	r18, Y+62	; 0x3e
    370e:	3f ad       	ldd	r19, Y+63	; 0x3f
    3710:	2c 97       	sbiw	r28, 0x0c	; 12
    3712:	22 30       	cpi	r18, 0x02	; 2
    3714:	31 05       	cpc	r19, r1
    3716:	09 f4       	brne	.+2      	; 0x371a <HSSD_vDisplayNumberAscending+0xfc>
    3718:	2f c1       	rjmp	.+606    	; 0x3978 <HSSD_vDisplayNumberAscending+0x35a>
    371a:	2c 96       	adiw	r28, 0x0c	; 12
    371c:	8e ad       	ldd	r24, Y+62	; 0x3e
    371e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3720:	2c 97       	sbiw	r28, 0x0c	; 12
    3722:	83 30       	cpi	r24, 0x03	; 3
    3724:	91 05       	cpc	r25, r1
    3726:	09 f4       	brne	.+2      	; 0x372a <HSSD_vDisplayNumberAscending+0x10c>
    3728:	ba c1       	rjmp	.+884    	; 0x3a9e <HSSD_vDisplayNumberAscending+0x480>
    372a:	4b c2       	rjmp	.+1174   	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
		{
		case DIO_PORTA:
			for(u8 i =0 ; i <= 9; i++)
    372c:	1c ae       	std	Y+60, r1	; 0x3c
    372e:	8c c0       	rjmp	.+280    	; 0x3848 <HSSD_vDisplayNumberAscending+0x22a>
			{
				HSSD_vDisplayNumber(DIO_PORTA, SSD_u8ArrOfNumbers[i]);
    3730:	8c ad       	ldd	r24, Y+60	; 0x3c
    3732:	28 2f       	mov	r18, r24
    3734:	30 e0       	ldi	r19, 0x00	; 0
    3736:	ce 01       	movw	r24, r28
    3738:	cd 96       	adiw	r24, 0x3d	; 61
    373a:	fc 01       	movw	r30, r24
    373c:	e2 0f       	add	r30, r18
    373e:	f3 1f       	adc	r31, r19
    3740:	90 81       	ld	r25, Z
    3742:	80 e0       	ldi	r24, 0x00	; 0
    3744:	69 2f       	mov	r22, r25
    3746:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    374a:	fe 01       	movw	r30, r28
    374c:	e8 5b       	subi	r30, 0xB8	; 184
    374e:	ff 4f       	sbci	r31, 0xFF	; 255
    3750:	80 81       	ld	r24, Z
    3752:	91 81       	ldd	r25, Z+1	; 0x01
    3754:	cc 01       	movw	r24, r24
    3756:	a0 e0       	ldi	r26, 0x00	; 0
    3758:	b0 e0       	ldi	r27, 0x00	; 0
    375a:	bc 01       	movw	r22, r24
    375c:	cd 01       	movw	r24, r26
    375e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3762:	dc 01       	movw	r26, r24
    3764:	cb 01       	movw	r24, r22
    3766:	8d ab       	std	Y+53, r24	; 0x35
    3768:	9e ab       	std	Y+54, r25	; 0x36
    376a:	af ab       	std	Y+55, r26	; 0x37
    376c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    376e:	6d a9       	ldd	r22, Y+53	; 0x35
    3770:	7e a9       	ldd	r23, Y+54	; 0x36
    3772:	8f a9       	ldd	r24, Y+55	; 0x37
    3774:	98 ad       	ldd	r25, Y+56	; 0x38
    3776:	20 e0       	ldi	r18, 0x00	; 0
    3778:	30 e8       	ldi	r19, 0x80	; 128
    377a:	4b e3       	ldi	r20, 0x3B	; 59
    377c:	55 e4       	ldi	r21, 0x45	; 69
    377e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3782:	dc 01       	movw	r26, r24
    3784:	cb 01       	movw	r24, r22
    3786:	89 ab       	std	Y+49, r24	; 0x31
    3788:	9a ab       	std	Y+50, r25	; 0x32
    378a:	ab ab       	std	Y+51, r26	; 0x33
    378c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    378e:	69 a9       	ldd	r22, Y+49	; 0x31
    3790:	7a a9       	ldd	r23, Y+50	; 0x32
    3792:	8b a9       	ldd	r24, Y+51	; 0x33
    3794:	9c a9       	ldd	r25, Y+52	; 0x34
    3796:	20 e0       	ldi	r18, 0x00	; 0
    3798:	30 e0       	ldi	r19, 0x00	; 0
    379a:	40 e8       	ldi	r20, 0x80	; 128
    379c:	5f e3       	ldi	r21, 0x3F	; 63
    379e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    37a2:	88 23       	and	r24, r24
    37a4:	2c f4       	brge	.+10     	; 0x37b0 <HSSD_vDisplayNumberAscending+0x192>
		__ticks = 1;
    37a6:	81 e0       	ldi	r24, 0x01	; 1
    37a8:	90 e0       	ldi	r25, 0x00	; 0
    37aa:	98 ab       	std	Y+48, r25	; 0x30
    37ac:	8f a7       	std	Y+47, r24	; 0x2f
    37ae:	3f c0       	rjmp	.+126    	; 0x382e <HSSD_vDisplayNumberAscending+0x210>
	else if (__tmp > 65535)
    37b0:	69 a9       	ldd	r22, Y+49	; 0x31
    37b2:	7a a9       	ldd	r23, Y+50	; 0x32
    37b4:	8b a9       	ldd	r24, Y+51	; 0x33
    37b6:	9c a9       	ldd	r25, Y+52	; 0x34
    37b8:	20 e0       	ldi	r18, 0x00	; 0
    37ba:	3f ef       	ldi	r19, 0xFF	; 255
    37bc:	4f e7       	ldi	r20, 0x7F	; 127
    37be:	57 e4       	ldi	r21, 0x47	; 71
    37c0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    37c4:	18 16       	cp	r1, r24
    37c6:	4c f5       	brge	.+82     	; 0x381a <HSSD_vDisplayNumberAscending+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37c8:	6d a9       	ldd	r22, Y+53	; 0x35
    37ca:	7e a9       	ldd	r23, Y+54	; 0x36
    37cc:	8f a9       	ldd	r24, Y+55	; 0x37
    37ce:	98 ad       	ldd	r25, Y+56	; 0x38
    37d0:	20 e0       	ldi	r18, 0x00	; 0
    37d2:	30 e0       	ldi	r19, 0x00	; 0
    37d4:	40 e2       	ldi	r20, 0x20	; 32
    37d6:	51 e4       	ldi	r21, 0x41	; 65
    37d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37dc:	dc 01       	movw	r26, r24
    37de:	cb 01       	movw	r24, r22
    37e0:	bc 01       	movw	r22, r24
    37e2:	cd 01       	movw	r24, r26
    37e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37e8:	dc 01       	movw	r26, r24
    37ea:	cb 01       	movw	r24, r22
    37ec:	98 ab       	std	Y+48, r25	; 0x30
    37ee:	8f a7       	std	Y+47, r24	; 0x2f
    37f0:	0f c0       	rjmp	.+30     	; 0x3810 <HSSD_vDisplayNumberAscending+0x1f2>
    37f2:	8c e2       	ldi	r24, 0x2C	; 44
    37f4:	91 e0       	ldi	r25, 0x01	; 1
    37f6:	9e a7       	std	Y+46, r25	; 0x2e
    37f8:	8d a7       	std	Y+45, r24	; 0x2d
    37fa:	8d a5       	ldd	r24, Y+45	; 0x2d
    37fc:	9e a5       	ldd	r25, Y+46	; 0x2e
    37fe:	01 97       	sbiw	r24, 0x01	; 1
    3800:	f1 f7       	brne	.-4      	; 0x37fe <HSSD_vDisplayNumberAscending+0x1e0>
    3802:	9e a7       	std	Y+46, r25	; 0x2e
    3804:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3806:	8f a5       	ldd	r24, Y+47	; 0x2f
    3808:	98 a9       	ldd	r25, Y+48	; 0x30
    380a:	01 97       	sbiw	r24, 0x01	; 1
    380c:	98 ab       	std	Y+48, r25	; 0x30
    380e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3810:	8f a5       	ldd	r24, Y+47	; 0x2f
    3812:	98 a9       	ldd	r25, Y+48	; 0x30
    3814:	00 97       	sbiw	r24, 0x00	; 0
    3816:	69 f7       	brne	.-38     	; 0x37f2 <HSSD_vDisplayNumberAscending+0x1d4>
    3818:	14 c0       	rjmp	.+40     	; 0x3842 <HSSD_vDisplayNumberAscending+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    381a:	69 a9       	ldd	r22, Y+49	; 0x31
    381c:	7a a9       	ldd	r23, Y+50	; 0x32
    381e:	8b a9       	ldd	r24, Y+51	; 0x33
    3820:	9c a9       	ldd	r25, Y+52	; 0x34
    3822:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3826:	dc 01       	movw	r26, r24
    3828:	cb 01       	movw	r24, r22
    382a:	98 ab       	std	Y+48, r25	; 0x30
    382c:	8f a7       	std	Y+47, r24	; 0x2f
    382e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3830:	98 a9       	ldd	r25, Y+48	; 0x30
    3832:	9c a7       	std	Y+44, r25	; 0x2c
    3834:	8b a7       	std	Y+43, r24	; 0x2b
    3836:	8b a5       	ldd	r24, Y+43	; 0x2b
    3838:	9c a5       	ldd	r25, Y+44	; 0x2c
    383a:	01 97       	sbiw	r24, 0x01	; 1
    383c:	f1 f7       	brne	.-4      	; 0x383a <HSSD_vDisplayNumberAscending+0x21c>
    383e:	9c a7       	std	Y+44, r25	; 0x2c
    3840:	8b a7       	std	Y+43, r24	; 0x2b
	if(A_PortID <= DIO_PORTD)
	{
		switch(A_PortID)
		{
		case DIO_PORTA:
			for(u8 i =0 ; i <= 9; i++)
    3842:	8c ad       	ldd	r24, Y+60	; 0x3c
    3844:	8f 5f       	subi	r24, 0xFF	; 255
    3846:	8c af       	std	Y+60, r24	; 0x3c
    3848:	8c ad       	ldd	r24, Y+60	; 0x3c
    384a:	8a 30       	cpi	r24, 0x0A	; 10
    384c:	08 f4       	brcc	.+2      	; 0x3850 <HSSD_vDisplayNumberAscending+0x232>
    384e:	70 cf       	rjmp	.-288    	; 0x3730 <HSSD_vDisplayNumberAscending+0x112>
    3850:	b8 c1       	rjmp	.+880    	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>

			}
			break;

		case DIO_PORTB:
			for(u8 i =0 ; i <= 9; i++)
    3852:	1b ae       	std	Y+59, r1	; 0x3b
    3854:	8c c0       	rjmp	.+280    	; 0x396e <HSSD_vDisplayNumberAscending+0x350>
			{
				HSSD_vDisplayNumber(DIO_PORTB, SSD_u8ArrOfNumbers[i]);
    3856:	8b ad       	ldd	r24, Y+59	; 0x3b
    3858:	28 2f       	mov	r18, r24
    385a:	30 e0       	ldi	r19, 0x00	; 0
    385c:	ce 01       	movw	r24, r28
    385e:	cd 96       	adiw	r24, 0x3d	; 61
    3860:	fc 01       	movw	r30, r24
    3862:	e2 0f       	add	r30, r18
    3864:	f3 1f       	adc	r31, r19
    3866:	90 81       	ld	r25, Z
    3868:	81 e0       	ldi	r24, 0x01	; 1
    386a:	69 2f       	mov	r22, r25
    386c:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3870:	fe 01       	movw	r30, r28
    3872:	e8 5b       	subi	r30, 0xB8	; 184
    3874:	ff 4f       	sbci	r31, 0xFF	; 255
    3876:	80 81       	ld	r24, Z
    3878:	91 81       	ldd	r25, Z+1	; 0x01
    387a:	cc 01       	movw	r24, r24
    387c:	a0 e0       	ldi	r26, 0x00	; 0
    387e:	b0 e0       	ldi	r27, 0x00	; 0
    3880:	bc 01       	movw	r22, r24
    3882:	cd 01       	movw	r24, r26
    3884:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3888:	dc 01       	movw	r26, r24
    388a:	cb 01       	movw	r24, r22
    388c:	8f a3       	std	Y+39, r24	; 0x27
    388e:	98 a7       	std	Y+40, r25	; 0x28
    3890:	a9 a7       	std	Y+41, r26	; 0x29
    3892:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3894:	6f a1       	ldd	r22, Y+39	; 0x27
    3896:	78 a5       	ldd	r23, Y+40	; 0x28
    3898:	89 a5       	ldd	r24, Y+41	; 0x29
    389a:	9a a5       	ldd	r25, Y+42	; 0x2a
    389c:	20 e0       	ldi	r18, 0x00	; 0
    389e:	30 e8       	ldi	r19, 0x80	; 128
    38a0:	4b e3       	ldi	r20, 0x3B	; 59
    38a2:	55 e4       	ldi	r21, 0x45	; 69
    38a4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    38a8:	dc 01       	movw	r26, r24
    38aa:	cb 01       	movw	r24, r22
    38ac:	8b a3       	std	Y+35, r24	; 0x23
    38ae:	9c a3       	std	Y+36, r25	; 0x24
    38b0:	ad a3       	std	Y+37, r26	; 0x25
    38b2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    38b4:	6b a1       	ldd	r22, Y+35	; 0x23
    38b6:	7c a1       	ldd	r23, Y+36	; 0x24
    38b8:	8d a1       	ldd	r24, Y+37	; 0x25
    38ba:	9e a1       	ldd	r25, Y+38	; 0x26
    38bc:	20 e0       	ldi	r18, 0x00	; 0
    38be:	30 e0       	ldi	r19, 0x00	; 0
    38c0:	40 e8       	ldi	r20, 0x80	; 128
    38c2:	5f e3       	ldi	r21, 0x3F	; 63
    38c4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    38c8:	88 23       	and	r24, r24
    38ca:	2c f4       	brge	.+10     	; 0x38d6 <HSSD_vDisplayNumberAscending+0x2b8>
		__ticks = 1;
    38cc:	81 e0       	ldi	r24, 0x01	; 1
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	9a a3       	std	Y+34, r25	; 0x22
    38d2:	89 a3       	std	Y+33, r24	; 0x21
    38d4:	3f c0       	rjmp	.+126    	; 0x3954 <HSSD_vDisplayNumberAscending+0x336>
	else if (__tmp > 65535)
    38d6:	6b a1       	ldd	r22, Y+35	; 0x23
    38d8:	7c a1       	ldd	r23, Y+36	; 0x24
    38da:	8d a1       	ldd	r24, Y+37	; 0x25
    38dc:	9e a1       	ldd	r25, Y+38	; 0x26
    38de:	20 e0       	ldi	r18, 0x00	; 0
    38e0:	3f ef       	ldi	r19, 0xFF	; 255
    38e2:	4f e7       	ldi	r20, 0x7F	; 127
    38e4:	57 e4       	ldi	r21, 0x47	; 71
    38e6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    38ea:	18 16       	cp	r1, r24
    38ec:	4c f5       	brge	.+82     	; 0x3940 <HSSD_vDisplayNumberAscending+0x322>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38ee:	6f a1       	ldd	r22, Y+39	; 0x27
    38f0:	78 a5       	ldd	r23, Y+40	; 0x28
    38f2:	89 a5       	ldd	r24, Y+41	; 0x29
    38f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    38f6:	20 e0       	ldi	r18, 0x00	; 0
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	40 e2       	ldi	r20, 0x20	; 32
    38fc:	51 e4       	ldi	r21, 0x41	; 65
    38fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3902:	dc 01       	movw	r26, r24
    3904:	cb 01       	movw	r24, r22
    3906:	bc 01       	movw	r22, r24
    3908:	cd 01       	movw	r24, r26
    390a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    390e:	dc 01       	movw	r26, r24
    3910:	cb 01       	movw	r24, r22
    3912:	9a a3       	std	Y+34, r25	; 0x22
    3914:	89 a3       	std	Y+33, r24	; 0x21
    3916:	0f c0       	rjmp	.+30     	; 0x3936 <HSSD_vDisplayNumberAscending+0x318>
    3918:	8c e2       	ldi	r24, 0x2C	; 44
    391a:	91 e0       	ldi	r25, 0x01	; 1
    391c:	98 a3       	std	Y+32, r25	; 0x20
    391e:	8f 8f       	std	Y+31, r24	; 0x1f
    3920:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3922:	98 a1       	ldd	r25, Y+32	; 0x20
    3924:	01 97       	sbiw	r24, 0x01	; 1
    3926:	f1 f7       	brne	.-4      	; 0x3924 <HSSD_vDisplayNumberAscending+0x306>
    3928:	98 a3       	std	Y+32, r25	; 0x20
    392a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    392c:	89 a1       	ldd	r24, Y+33	; 0x21
    392e:	9a a1       	ldd	r25, Y+34	; 0x22
    3930:	01 97       	sbiw	r24, 0x01	; 1
    3932:	9a a3       	std	Y+34, r25	; 0x22
    3934:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3936:	89 a1       	ldd	r24, Y+33	; 0x21
    3938:	9a a1       	ldd	r25, Y+34	; 0x22
    393a:	00 97       	sbiw	r24, 0x00	; 0
    393c:	69 f7       	brne	.-38     	; 0x3918 <HSSD_vDisplayNumberAscending+0x2fa>
    393e:	14 c0       	rjmp	.+40     	; 0x3968 <HSSD_vDisplayNumberAscending+0x34a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3940:	6b a1       	ldd	r22, Y+35	; 0x23
    3942:	7c a1       	ldd	r23, Y+36	; 0x24
    3944:	8d a1       	ldd	r24, Y+37	; 0x25
    3946:	9e a1       	ldd	r25, Y+38	; 0x26
    3948:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    394c:	dc 01       	movw	r26, r24
    394e:	cb 01       	movw	r24, r22
    3950:	9a a3       	std	Y+34, r25	; 0x22
    3952:	89 a3       	std	Y+33, r24	; 0x21
    3954:	89 a1       	ldd	r24, Y+33	; 0x21
    3956:	9a a1       	ldd	r25, Y+34	; 0x22
    3958:	9e 8f       	std	Y+30, r25	; 0x1e
    395a:	8d 8f       	std	Y+29, r24	; 0x1d
    395c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    395e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3960:	01 97       	sbiw	r24, 0x01	; 1
    3962:	f1 f7       	brne	.-4      	; 0x3960 <HSSD_vDisplayNumberAscending+0x342>
    3964:	9e 8f       	std	Y+30, r25	; 0x1e
    3966:	8d 8f       	std	Y+29, r24	; 0x1d

			}
			break;

		case DIO_PORTB:
			for(u8 i =0 ; i <= 9; i++)
    3968:	8b ad       	ldd	r24, Y+59	; 0x3b
    396a:	8f 5f       	subi	r24, 0xFF	; 255
    396c:	8b af       	std	Y+59, r24	; 0x3b
    396e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3970:	8a 30       	cpi	r24, 0x0A	; 10
    3972:	08 f4       	brcc	.+2      	; 0x3976 <HSSD_vDisplayNumberAscending+0x358>
    3974:	70 cf       	rjmp	.-288    	; 0x3856 <HSSD_vDisplayNumberAscending+0x238>
    3976:	25 c1       	rjmp	.+586    	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
				_delay_ms(A_u16TimetoWait);
			};
			break;

		case DIO_PORTC:
			for(u8 i =0 ; i <= 9; i++)
    3978:	1a ae       	std	Y+58, r1	; 0x3a
    397a:	8c c0       	rjmp	.+280    	; 0x3a94 <HSSD_vDisplayNumberAscending+0x476>
			{
				HSSD_vDisplayNumber(DIO_PORTC, SSD_u8ArrOfNumbers[i]);
    397c:	8a ad       	ldd	r24, Y+58	; 0x3a
    397e:	28 2f       	mov	r18, r24
    3980:	30 e0       	ldi	r19, 0x00	; 0
    3982:	ce 01       	movw	r24, r28
    3984:	cd 96       	adiw	r24, 0x3d	; 61
    3986:	fc 01       	movw	r30, r24
    3988:	e2 0f       	add	r30, r18
    398a:	f3 1f       	adc	r31, r19
    398c:	90 81       	ld	r25, Z
    398e:	82 e0       	ldi	r24, 0x02	; 2
    3990:	69 2f       	mov	r22, r25
    3992:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3996:	fe 01       	movw	r30, r28
    3998:	e8 5b       	subi	r30, 0xB8	; 184
    399a:	ff 4f       	sbci	r31, 0xFF	; 255
    399c:	80 81       	ld	r24, Z
    399e:	91 81       	ldd	r25, Z+1	; 0x01
    39a0:	cc 01       	movw	r24, r24
    39a2:	a0 e0       	ldi	r26, 0x00	; 0
    39a4:	b0 e0       	ldi	r27, 0x00	; 0
    39a6:	bc 01       	movw	r22, r24
    39a8:	cd 01       	movw	r24, r26
    39aa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	89 8f       	std	Y+25, r24	; 0x19
    39b4:	9a 8f       	std	Y+26, r25	; 0x1a
    39b6:	ab 8f       	std	Y+27, r26	; 0x1b
    39b8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39ba:	69 8d       	ldd	r22, Y+25	; 0x19
    39bc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    39be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    39c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    39c2:	20 e0       	ldi	r18, 0x00	; 0
    39c4:	30 e8       	ldi	r19, 0x80	; 128
    39c6:	4b e3       	ldi	r20, 0x3B	; 59
    39c8:	55 e4       	ldi	r21, 0x45	; 69
    39ca:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    39ce:	dc 01       	movw	r26, r24
    39d0:	cb 01       	movw	r24, r22
    39d2:	8d 8b       	std	Y+21, r24	; 0x15
    39d4:	9e 8b       	std	Y+22, r25	; 0x16
    39d6:	af 8b       	std	Y+23, r26	; 0x17
    39d8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    39da:	6d 89       	ldd	r22, Y+21	; 0x15
    39dc:	7e 89       	ldd	r23, Y+22	; 0x16
    39de:	8f 89       	ldd	r24, Y+23	; 0x17
    39e0:	98 8d       	ldd	r25, Y+24	; 0x18
    39e2:	20 e0       	ldi	r18, 0x00	; 0
    39e4:	30 e0       	ldi	r19, 0x00	; 0
    39e6:	40 e8       	ldi	r20, 0x80	; 128
    39e8:	5f e3       	ldi	r21, 0x3F	; 63
    39ea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    39ee:	88 23       	and	r24, r24
    39f0:	2c f4       	brge	.+10     	; 0x39fc <HSSD_vDisplayNumberAscending+0x3de>
		__ticks = 1;
    39f2:	81 e0       	ldi	r24, 0x01	; 1
    39f4:	90 e0       	ldi	r25, 0x00	; 0
    39f6:	9c 8b       	std	Y+20, r25	; 0x14
    39f8:	8b 8b       	std	Y+19, r24	; 0x13
    39fa:	3f c0       	rjmp	.+126    	; 0x3a7a <HSSD_vDisplayNumberAscending+0x45c>
	else if (__tmp > 65535)
    39fc:	6d 89       	ldd	r22, Y+21	; 0x15
    39fe:	7e 89       	ldd	r23, Y+22	; 0x16
    3a00:	8f 89       	ldd	r24, Y+23	; 0x17
    3a02:	98 8d       	ldd	r25, Y+24	; 0x18
    3a04:	20 e0       	ldi	r18, 0x00	; 0
    3a06:	3f ef       	ldi	r19, 0xFF	; 255
    3a08:	4f e7       	ldi	r20, 0x7F	; 127
    3a0a:	57 e4       	ldi	r21, 0x47	; 71
    3a0c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3a10:	18 16       	cp	r1, r24
    3a12:	4c f5       	brge	.+82     	; 0x3a66 <HSSD_vDisplayNumberAscending+0x448>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a14:	69 8d       	ldd	r22, Y+25	; 0x19
    3a16:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a1c:	20 e0       	ldi	r18, 0x00	; 0
    3a1e:	30 e0       	ldi	r19, 0x00	; 0
    3a20:	40 e2       	ldi	r20, 0x20	; 32
    3a22:	51 e4       	ldi	r21, 0x41	; 65
    3a24:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3a28:	dc 01       	movw	r26, r24
    3a2a:	cb 01       	movw	r24, r22
    3a2c:	bc 01       	movw	r22, r24
    3a2e:	cd 01       	movw	r24, r26
    3a30:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a34:	dc 01       	movw	r26, r24
    3a36:	cb 01       	movw	r24, r22
    3a38:	9c 8b       	std	Y+20, r25	; 0x14
    3a3a:	8b 8b       	std	Y+19, r24	; 0x13
    3a3c:	0f c0       	rjmp	.+30     	; 0x3a5c <HSSD_vDisplayNumberAscending+0x43e>
    3a3e:	8c e2       	ldi	r24, 0x2C	; 44
    3a40:	91 e0       	ldi	r25, 0x01	; 1
    3a42:	9a 8b       	std	Y+18, r25	; 0x12
    3a44:	89 8b       	std	Y+17, r24	; 0x11
    3a46:	89 89       	ldd	r24, Y+17	; 0x11
    3a48:	9a 89       	ldd	r25, Y+18	; 0x12
    3a4a:	01 97       	sbiw	r24, 0x01	; 1
    3a4c:	f1 f7       	brne	.-4      	; 0x3a4a <HSSD_vDisplayNumberAscending+0x42c>
    3a4e:	9a 8b       	std	Y+18, r25	; 0x12
    3a50:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a52:	8b 89       	ldd	r24, Y+19	; 0x13
    3a54:	9c 89       	ldd	r25, Y+20	; 0x14
    3a56:	01 97       	sbiw	r24, 0x01	; 1
    3a58:	9c 8b       	std	Y+20, r25	; 0x14
    3a5a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a5c:	8b 89       	ldd	r24, Y+19	; 0x13
    3a5e:	9c 89       	ldd	r25, Y+20	; 0x14
    3a60:	00 97       	sbiw	r24, 0x00	; 0
    3a62:	69 f7       	brne	.-38     	; 0x3a3e <HSSD_vDisplayNumberAscending+0x420>
    3a64:	14 c0       	rjmp	.+40     	; 0x3a8e <HSSD_vDisplayNumberAscending+0x470>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a66:	6d 89       	ldd	r22, Y+21	; 0x15
    3a68:	7e 89       	ldd	r23, Y+22	; 0x16
    3a6a:	8f 89       	ldd	r24, Y+23	; 0x17
    3a6c:	98 8d       	ldd	r25, Y+24	; 0x18
    3a6e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a72:	dc 01       	movw	r26, r24
    3a74:	cb 01       	movw	r24, r22
    3a76:	9c 8b       	std	Y+20, r25	; 0x14
    3a78:	8b 8b       	std	Y+19, r24	; 0x13
    3a7a:	8b 89       	ldd	r24, Y+19	; 0x13
    3a7c:	9c 89       	ldd	r25, Y+20	; 0x14
    3a7e:	98 8b       	std	Y+16, r25	; 0x10
    3a80:	8f 87       	std	Y+15, r24	; 0x0f
    3a82:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a84:	98 89       	ldd	r25, Y+16	; 0x10
    3a86:	01 97       	sbiw	r24, 0x01	; 1
    3a88:	f1 f7       	brne	.-4      	; 0x3a86 <HSSD_vDisplayNumberAscending+0x468>
    3a8a:	98 8b       	std	Y+16, r25	; 0x10
    3a8c:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(A_u16TimetoWait);
			};
			break;

		case DIO_PORTC:
			for(u8 i =0 ; i <= 9; i++)
    3a8e:	8a ad       	ldd	r24, Y+58	; 0x3a
    3a90:	8f 5f       	subi	r24, 0xFF	; 255
    3a92:	8a af       	std	Y+58, r24	; 0x3a
    3a94:	8a ad       	ldd	r24, Y+58	; 0x3a
    3a96:	8a 30       	cpi	r24, 0x0A	; 10
    3a98:	08 f4       	brcc	.+2      	; 0x3a9c <HSSD_vDisplayNumberAscending+0x47e>
    3a9a:	70 cf       	rjmp	.-288    	; 0x397c <HSSD_vDisplayNumberAscending+0x35e>
    3a9c:	92 c0       	rjmp	.+292    	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(u8 i =0 ; i <= 9; i++)
    3a9e:	19 ae       	std	Y+57, r1	; 0x39
    3aa0:	8c c0       	rjmp	.+280    	; 0x3bba <HSSD_vDisplayNumberAscending+0x59c>
			{
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
    3aa2:	89 ad       	ldd	r24, Y+57	; 0x39
    3aa4:	28 2f       	mov	r18, r24
    3aa6:	30 e0       	ldi	r19, 0x00	; 0
    3aa8:	ce 01       	movw	r24, r28
    3aaa:	cd 96       	adiw	r24, 0x3d	; 61
    3aac:	fc 01       	movw	r30, r24
    3aae:	e2 0f       	add	r30, r18
    3ab0:	f3 1f       	adc	r31, r19
    3ab2:	90 81       	ld	r25, Z
    3ab4:	83 e0       	ldi	r24, 0x03	; 3
    3ab6:	69 2f       	mov	r22, r25
    3ab8:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3abc:	fe 01       	movw	r30, r28
    3abe:	e8 5b       	subi	r30, 0xB8	; 184
    3ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac2:	80 81       	ld	r24, Z
    3ac4:	91 81       	ldd	r25, Z+1	; 0x01
    3ac6:	cc 01       	movw	r24, r24
    3ac8:	a0 e0       	ldi	r26, 0x00	; 0
    3aca:	b0 e0       	ldi	r27, 0x00	; 0
    3acc:	bc 01       	movw	r22, r24
    3ace:	cd 01       	movw	r24, r26
    3ad0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3ad4:	dc 01       	movw	r26, r24
    3ad6:	cb 01       	movw	r24, r22
    3ad8:	8b 87       	std	Y+11, r24	; 0x0b
    3ada:	9c 87       	std	Y+12, r25	; 0x0c
    3adc:	ad 87       	std	Y+13, r26	; 0x0d
    3ade:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ae0:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ae2:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ae4:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ae6:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ae8:	20 e0       	ldi	r18, 0x00	; 0
    3aea:	30 e8       	ldi	r19, 0x80	; 128
    3aec:	4b e3       	ldi	r20, 0x3B	; 59
    3aee:	55 e4       	ldi	r21, 0x45	; 69
    3af0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3af4:	dc 01       	movw	r26, r24
    3af6:	cb 01       	movw	r24, r22
    3af8:	8f 83       	std	Y+7, r24	; 0x07
    3afa:	98 87       	std	Y+8, r25	; 0x08
    3afc:	a9 87       	std	Y+9, r26	; 0x09
    3afe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b00:	6f 81       	ldd	r22, Y+7	; 0x07
    3b02:	78 85       	ldd	r23, Y+8	; 0x08
    3b04:	89 85       	ldd	r24, Y+9	; 0x09
    3b06:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b08:	20 e0       	ldi	r18, 0x00	; 0
    3b0a:	30 e0       	ldi	r19, 0x00	; 0
    3b0c:	40 e8       	ldi	r20, 0x80	; 128
    3b0e:	5f e3       	ldi	r21, 0x3F	; 63
    3b10:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3b14:	88 23       	and	r24, r24
    3b16:	2c f4       	brge	.+10     	; 0x3b22 <HSSD_vDisplayNumberAscending+0x504>
		__ticks = 1;
    3b18:	81 e0       	ldi	r24, 0x01	; 1
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	9e 83       	std	Y+6, r25	; 0x06
    3b1e:	8d 83       	std	Y+5, r24	; 0x05
    3b20:	3f c0       	rjmp	.+126    	; 0x3ba0 <HSSD_vDisplayNumberAscending+0x582>
	else if (__tmp > 65535)
    3b22:	6f 81       	ldd	r22, Y+7	; 0x07
    3b24:	78 85       	ldd	r23, Y+8	; 0x08
    3b26:	89 85       	ldd	r24, Y+9	; 0x09
    3b28:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b2a:	20 e0       	ldi	r18, 0x00	; 0
    3b2c:	3f ef       	ldi	r19, 0xFF	; 255
    3b2e:	4f e7       	ldi	r20, 0x7F	; 127
    3b30:	57 e4       	ldi	r21, 0x47	; 71
    3b32:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3b36:	18 16       	cp	r1, r24
    3b38:	4c f5       	brge	.+82     	; 0x3b8c <HSSD_vDisplayNumberAscending+0x56e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b3a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b3c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b40:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b42:	20 e0       	ldi	r18, 0x00	; 0
    3b44:	30 e0       	ldi	r19, 0x00	; 0
    3b46:	40 e2       	ldi	r20, 0x20	; 32
    3b48:	51 e4       	ldi	r21, 0x41	; 65
    3b4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b4e:	dc 01       	movw	r26, r24
    3b50:	cb 01       	movw	r24, r22
    3b52:	bc 01       	movw	r22, r24
    3b54:	cd 01       	movw	r24, r26
    3b56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b5a:	dc 01       	movw	r26, r24
    3b5c:	cb 01       	movw	r24, r22
    3b5e:	9e 83       	std	Y+6, r25	; 0x06
    3b60:	8d 83       	std	Y+5, r24	; 0x05
    3b62:	0f c0       	rjmp	.+30     	; 0x3b82 <HSSD_vDisplayNumberAscending+0x564>
    3b64:	8c e2       	ldi	r24, 0x2C	; 44
    3b66:	91 e0       	ldi	r25, 0x01	; 1
    3b68:	9c 83       	std	Y+4, r25	; 0x04
    3b6a:	8b 83       	std	Y+3, r24	; 0x03
    3b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    3b6e:	9c 81       	ldd	r25, Y+4	; 0x04
    3b70:	01 97       	sbiw	r24, 0x01	; 1
    3b72:	f1 f7       	brne	.-4      	; 0x3b70 <HSSD_vDisplayNumberAscending+0x552>
    3b74:	9c 83       	std	Y+4, r25	; 0x04
    3b76:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b78:	8d 81       	ldd	r24, Y+5	; 0x05
    3b7a:	9e 81       	ldd	r25, Y+6	; 0x06
    3b7c:	01 97       	sbiw	r24, 0x01	; 1
    3b7e:	9e 83       	std	Y+6, r25	; 0x06
    3b80:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b82:	8d 81       	ldd	r24, Y+5	; 0x05
    3b84:	9e 81       	ldd	r25, Y+6	; 0x06
    3b86:	00 97       	sbiw	r24, 0x00	; 0
    3b88:	69 f7       	brne	.-38     	; 0x3b64 <HSSD_vDisplayNumberAscending+0x546>
    3b8a:	14 c0       	rjmp	.+40     	; 0x3bb4 <HSSD_vDisplayNumberAscending+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b8c:	6f 81       	ldd	r22, Y+7	; 0x07
    3b8e:	78 85       	ldd	r23, Y+8	; 0x08
    3b90:	89 85       	ldd	r24, Y+9	; 0x09
    3b92:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b98:	dc 01       	movw	r26, r24
    3b9a:	cb 01       	movw	r24, r22
    3b9c:	9e 83       	std	Y+6, r25	; 0x06
    3b9e:	8d 83       	std	Y+5, r24	; 0x05
    3ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    3ba2:	9e 81       	ldd	r25, Y+6	; 0x06
    3ba4:	9a 83       	std	Y+2, r25	; 0x02
    3ba6:	89 83       	std	Y+1, r24	; 0x01
    3ba8:	89 81       	ldd	r24, Y+1	; 0x01
    3baa:	9a 81       	ldd	r25, Y+2	; 0x02
    3bac:	01 97       	sbiw	r24, 0x01	; 1
    3bae:	f1 f7       	brne	.-4      	; 0x3bac <HSSD_vDisplayNumberAscending+0x58e>
    3bb0:	9a 83       	std	Y+2, r25	; 0x02
    3bb2:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(u8 i =0 ; i <= 9; i++)
    3bb4:	89 ad       	ldd	r24, Y+57	; 0x39
    3bb6:	8f 5f       	subi	r24, 0xFF	; 255
    3bb8:	89 af       	std	Y+57, r24	; 0x39
    3bba:	89 ad       	ldd	r24, Y+57	; 0x39
    3bbc:	8a 30       	cpi	r24, 0x0A	; 10
    3bbe:	08 f4       	brcc	.+2      	; 0x3bc2 <HSSD_vDisplayNumberAscending+0x5a4>
    3bc0:	70 cf       	rjmp	.-288    	; 0x3aa2 <HSSD_vDisplayNumberAscending+0x484>
				_delay_ms(A_u16TimetoWait);
			}
			break;
		}
	}
}
    3bc2:	c0 5b       	subi	r28, 0xB0	; 176
    3bc4:	df 4f       	sbci	r29, 0xFF	; 255
    3bc6:	0f b6       	in	r0, 0x3f	; 63
    3bc8:	f8 94       	cli
    3bca:	de bf       	out	0x3e, r29	; 62
    3bcc:	0f be       	out	0x3f, r0	; 63
    3bce:	cd bf       	out	0x3d, r28	; 61
    3bd0:	cf 91       	pop	r28
    3bd2:	df 91       	pop	r29
    3bd4:	08 95       	ret

00003bd6 <HSSD_vCountDown>:


void HSSD_vCountDown(DIO_PORT_e A_PortID ,s8 A_u8Time , u16 A_u16TimetoWait)
{
    3bd6:	df 93       	push	r29
    3bd8:	cf 93       	push	r28
    3bda:	cd b7       	in	r28, 0x3d	; 61
    3bdc:	de b7       	in	r29, 0x3e	; 62
    3bde:	c1 55       	subi	r28, 0x51	; 81
    3be0:	d0 40       	sbci	r29, 0x00	; 0
    3be2:	0f b6       	in	r0, 0x3f	; 63
    3be4:	f8 94       	cli
    3be6:	de bf       	out	0x3e, r29	; 62
    3be8:	0f be       	out	0x3f, r0	; 63
    3bea:	cd bf       	out	0x3d, r28	; 61
    3bec:	fe 01       	movw	r30, r28
    3bee:	e9 5b       	subi	r30, 0xB9	; 185
    3bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf2:	80 83       	st	Z, r24
    3bf4:	fe 01       	movw	r30, r28
    3bf6:	e8 5b       	subi	r30, 0xB8	; 184
    3bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfa:	60 83       	st	Z, r22
    3bfc:	fe 01       	movw	r30, r28
    3bfe:	e7 5b       	subi	r30, 0xB7	; 183
    3c00:	ff 4f       	sbci	r31, 0xFF	; 255
    3c02:	51 83       	std	Z+1, r21	; 0x01
    3c04:	40 83       	st	Z, r20
	u8 SSD_u8ArrOfNumbers [10]= {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    3c06:	9e 01       	movw	r18, r28
    3c08:	23 5c       	subi	r18, 0xC3	; 195
    3c0a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c0c:	2f 96       	adiw	r28, 0x0f	; 15
    3c0e:	3f af       	std	Y+63, r19	; 0x3f
    3c10:	2e af       	std	Y+62, r18	; 0x3e
    3c12:	2f 97       	sbiw	r28, 0x0f	; 15
    3c14:	84 eb       	ldi	r24, 0xB4	; 180
    3c16:	92 e0       	ldi	r25, 0x02	; 2
    3c18:	61 96       	adiw	r28, 0x11	; 17
    3c1a:	9f af       	std	Y+63, r25	; 0x3f
    3c1c:	8e af       	std	Y+62, r24	; 0x3e
    3c1e:	61 97       	sbiw	r28, 0x11	; 17
    3c20:	9a e0       	ldi	r25, 0x0A	; 10
    3c22:	62 96       	adiw	r28, 0x12	; 18
    3c24:	9f af       	std	Y+63, r25	; 0x3f
    3c26:	62 97       	sbiw	r28, 0x12	; 18
    3c28:	61 96       	adiw	r28, 0x11	; 17
    3c2a:	ee ad       	ldd	r30, Y+62	; 0x3e
    3c2c:	ff ad       	ldd	r31, Y+63	; 0x3f
    3c2e:	61 97       	sbiw	r28, 0x11	; 17
    3c30:	00 80       	ld	r0, Z
    3c32:	61 96       	adiw	r28, 0x11	; 17
    3c34:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c36:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c38:	61 97       	sbiw	r28, 0x11	; 17
    3c3a:	2f 5f       	subi	r18, 0xFF	; 255
    3c3c:	3f 4f       	sbci	r19, 0xFF	; 255
    3c3e:	61 96       	adiw	r28, 0x11	; 17
    3c40:	3f af       	std	Y+63, r19	; 0x3f
    3c42:	2e af       	std	Y+62, r18	; 0x3e
    3c44:	61 97       	sbiw	r28, 0x11	; 17
    3c46:	2f 96       	adiw	r28, 0x0f	; 15
    3c48:	ee ad       	ldd	r30, Y+62	; 0x3e
    3c4a:	ff ad       	ldd	r31, Y+63	; 0x3f
    3c4c:	2f 97       	sbiw	r28, 0x0f	; 15
    3c4e:	00 82       	st	Z, r0
    3c50:	2f 96       	adiw	r28, 0x0f	; 15
    3c52:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c54:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c56:	2f 97       	sbiw	r28, 0x0f	; 15
    3c58:	2f 5f       	subi	r18, 0xFF	; 255
    3c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c5c:	2f 96       	adiw	r28, 0x0f	; 15
    3c5e:	3f af       	std	Y+63, r19	; 0x3f
    3c60:	2e af       	std	Y+62, r18	; 0x3e
    3c62:	2f 97       	sbiw	r28, 0x0f	; 15
    3c64:	62 96       	adiw	r28, 0x12	; 18
    3c66:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c68:	62 97       	sbiw	r28, 0x12	; 18
    3c6a:	31 50       	subi	r19, 0x01	; 1
    3c6c:	62 96       	adiw	r28, 0x12	; 18
    3c6e:	3f af       	std	Y+63, r19	; 0x3f
    3c70:	62 97       	sbiw	r28, 0x12	; 18
    3c72:	62 96       	adiw	r28, 0x12	; 18
    3c74:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c76:	62 97       	sbiw	r28, 0x12	; 18
    3c78:	88 23       	and	r24, r24
    3c7a:	b1 f6       	brne	.-84     	; 0x3c28 <HSSD_vCountDown+0x52>

	if(A_PortID <= DIO_PORTD)
    3c7c:	fe 01       	movw	r30, r28
    3c7e:	e9 5b       	subi	r30, 0xB9	; 185
    3c80:	ff 4f       	sbci	r31, 0xFF	; 255
    3c82:	80 81       	ld	r24, Z
    3c84:	84 30       	cpi	r24, 0x04	; 4
    3c86:	08 f0       	brcs	.+2      	; 0x3c8a <HSSD_vCountDown+0xb4>
    3c88:	9b c2       	rjmp	.+1334   	; 0x41c0 <HSSD_vCountDown+0x5ea>
	{
		switch(A_PortID)
    3c8a:	fe 01       	movw	r30, r28
    3c8c:	e9 5b       	subi	r30, 0xB9	; 185
    3c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c90:	80 81       	ld	r24, Z
    3c92:	e8 2f       	mov	r30, r24
    3c94:	f0 e0       	ldi	r31, 0x00	; 0
    3c96:	2d 96       	adiw	r28, 0x0d	; 13
    3c98:	ff af       	std	Y+63, r31	; 0x3f
    3c9a:	ee af       	std	Y+62, r30	; 0x3e
    3c9c:	2d 97       	sbiw	r28, 0x0d	; 13
    3c9e:	2d 96       	adiw	r28, 0x0d	; 13
    3ca0:	2e ad       	ldd	r18, Y+62	; 0x3e
    3ca2:	3f ad       	ldd	r19, Y+63	; 0x3f
    3ca4:	2d 97       	sbiw	r28, 0x0d	; 13
    3ca6:	21 30       	cpi	r18, 0x01	; 1
    3ca8:	31 05       	cpc	r19, r1
    3caa:	09 f4       	brne	.+2      	; 0x3cae <HSSD_vCountDown+0xd8>
    3cac:	b8 c0       	rjmp	.+368    	; 0x3e1e <HSSD_vCountDown+0x248>
    3cae:	2d 96       	adiw	r28, 0x0d	; 13
    3cb0:	8e ad       	ldd	r24, Y+62	; 0x3e
    3cb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cb4:	2d 97       	sbiw	r28, 0x0d	; 13
    3cb6:	82 30       	cpi	r24, 0x02	; 2
    3cb8:	91 05       	cpc	r25, r1
    3cba:	3c f4       	brge	.+14     	; 0x3cca <HSSD_vCountDown+0xf4>
    3cbc:	2d 96       	adiw	r28, 0x0d	; 13
    3cbe:	ee ad       	ldd	r30, Y+62	; 0x3e
    3cc0:	ff ad       	ldd	r31, Y+63	; 0x3f
    3cc2:	2d 97       	sbiw	r28, 0x0d	; 13
    3cc4:	30 97       	sbiw	r30, 0x00	; 0
    3cc6:	91 f0       	breq	.+36     	; 0x3cec <HSSD_vCountDown+0x116>
    3cc8:	74 c2       	rjmp	.+1256   	; 0x41b2 <HSSD_vCountDown+0x5dc>
    3cca:	2d 96       	adiw	r28, 0x0d	; 13
    3ccc:	2e ad       	ldd	r18, Y+62	; 0x3e
    3cce:	3f ad       	ldd	r19, Y+63	; 0x3f
    3cd0:	2d 97       	sbiw	r28, 0x0d	; 13
    3cd2:	22 30       	cpi	r18, 0x02	; 2
    3cd4:	31 05       	cpc	r19, r1
    3cd6:	09 f4       	brne	.+2      	; 0x3cda <HSSD_vCountDown+0x104>
    3cd8:	3b c1       	rjmp	.+630    	; 0x3f50 <HSSD_vCountDown+0x37a>
    3cda:	2d 96       	adiw	r28, 0x0d	; 13
    3cdc:	8e ad       	ldd	r24, Y+62	; 0x3e
    3cde:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ce0:	2d 97       	sbiw	r28, 0x0d	; 13
    3ce2:	83 30       	cpi	r24, 0x03	; 3
    3ce4:	91 05       	cpc	r25, r1
    3ce6:	09 f4       	brne	.+2      	; 0x3cea <HSSD_vCountDown+0x114>
    3ce8:	cc c1       	rjmp	.+920    	; 0x4082 <HSSD_vCountDown+0x4ac>
    3cea:	63 c2       	rjmp	.+1222   	; 0x41b2 <HSSD_vCountDown+0x5dc>
		{
		case DIO_PORTA:
			for(s8 i=A_u8Time; i >= 0; i--)
    3cec:	fe 01       	movw	r30, r28
    3cee:	e8 5b       	subi	r30, 0xB8	; 184
    3cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf2:	80 81       	ld	r24, Z
    3cf4:	8c af       	std	Y+60, r24	; 0x3c
    3cf6:	8e c0       	rjmp	.+284    	; 0x3e14 <HSSD_vCountDown+0x23e>
			{
				HSSD_vDisplayNumber(DIO_PORTA, SSD_u8ArrOfNumbers[i]);
    3cf8:	8c ad       	ldd	r24, Y+60	; 0x3c
    3cfa:	28 2f       	mov	r18, r24
    3cfc:	33 27       	eor	r19, r19
    3cfe:	27 fd       	sbrc	r18, 7
    3d00:	30 95       	com	r19
    3d02:	ce 01       	movw	r24, r28
    3d04:	cd 96       	adiw	r24, 0x3d	; 61
    3d06:	fc 01       	movw	r30, r24
    3d08:	e2 0f       	add	r30, r18
    3d0a:	f3 1f       	adc	r31, r19
    3d0c:	90 81       	ld	r25, Z
    3d0e:	80 e0       	ldi	r24, 0x00	; 0
    3d10:	69 2f       	mov	r22, r25
    3d12:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3d16:	fe 01       	movw	r30, r28
    3d18:	e7 5b       	subi	r30, 0xB7	; 183
    3d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d1c:	80 81       	ld	r24, Z
    3d1e:	91 81       	ldd	r25, Z+1	; 0x01
    3d20:	cc 01       	movw	r24, r24
    3d22:	a0 e0       	ldi	r26, 0x00	; 0
    3d24:	b0 e0       	ldi	r27, 0x00	; 0
    3d26:	bc 01       	movw	r22, r24
    3d28:	cd 01       	movw	r24, r26
    3d2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3d2e:	dc 01       	movw	r26, r24
    3d30:	cb 01       	movw	r24, r22
    3d32:	8d ab       	std	Y+53, r24	; 0x35
    3d34:	9e ab       	std	Y+54, r25	; 0x36
    3d36:	af ab       	std	Y+55, r26	; 0x37
    3d38:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d3a:	6d a9       	ldd	r22, Y+53	; 0x35
    3d3c:	7e a9       	ldd	r23, Y+54	; 0x36
    3d3e:	8f a9       	ldd	r24, Y+55	; 0x37
    3d40:	98 ad       	ldd	r25, Y+56	; 0x38
    3d42:	20 e0       	ldi	r18, 0x00	; 0
    3d44:	30 e8       	ldi	r19, 0x80	; 128
    3d46:	4b e3       	ldi	r20, 0x3B	; 59
    3d48:	55 e4       	ldi	r21, 0x45	; 69
    3d4a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d4e:	dc 01       	movw	r26, r24
    3d50:	cb 01       	movw	r24, r22
    3d52:	89 ab       	std	Y+49, r24	; 0x31
    3d54:	9a ab       	std	Y+50, r25	; 0x32
    3d56:	ab ab       	std	Y+51, r26	; 0x33
    3d58:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3d5a:	69 a9       	ldd	r22, Y+49	; 0x31
    3d5c:	7a a9       	ldd	r23, Y+50	; 0x32
    3d5e:	8b a9       	ldd	r24, Y+51	; 0x33
    3d60:	9c a9       	ldd	r25, Y+52	; 0x34
    3d62:	20 e0       	ldi	r18, 0x00	; 0
    3d64:	30 e0       	ldi	r19, 0x00	; 0
    3d66:	40 e8       	ldi	r20, 0x80	; 128
    3d68:	5f e3       	ldi	r21, 0x3F	; 63
    3d6a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3d6e:	88 23       	and	r24, r24
    3d70:	2c f4       	brge	.+10     	; 0x3d7c <HSSD_vCountDown+0x1a6>
		__ticks = 1;
    3d72:	81 e0       	ldi	r24, 0x01	; 1
    3d74:	90 e0       	ldi	r25, 0x00	; 0
    3d76:	98 ab       	std	Y+48, r25	; 0x30
    3d78:	8f a7       	std	Y+47, r24	; 0x2f
    3d7a:	3f c0       	rjmp	.+126    	; 0x3dfa <HSSD_vCountDown+0x224>
	else if (__tmp > 65535)
    3d7c:	69 a9       	ldd	r22, Y+49	; 0x31
    3d7e:	7a a9       	ldd	r23, Y+50	; 0x32
    3d80:	8b a9       	ldd	r24, Y+51	; 0x33
    3d82:	9c a9       	ldd	r25, Y+52	; 0x34
    3d84:	20 e0       	ldi	r18, 0x00	; 0
    3d86:	3f ef       	ldi	r19, 0xFF	; 255
    3d88:	4f e7       	ldi	r20, 0x7F	; 127
    3d8a:	57 e4       	ldi	r21, 0x47	; 71
    3d8c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3d90:	18 16       	cp	r1, r24
    3d92:	4c f5       	brge	.+82     	; 0x3de6 <HSSD_vCountDown+0x210>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d94:	6d a9       	ldd	r22, Y+53	; 0x35
    3d96:	7e a9       	ldd	r23, Y+54	; 0x36
    3d98:	8f a9       	ldd	r24, Y+55	; 0x37
    3d9a:	98 ad       	ldd	r25, Y+56	; 0x38
    3d9c:	20 e0       	ldi	r18, 0x00	; 0
    3d9e:	30 e0       	ldi	r19, 0x00	; 0
    3da0:	40 e2       	ldi	r20, 0x20	; 32
    3da2:	51 e4       	ldi	r21, 0x41	; 65
    3da4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3da8:	dc 01       	movw	r26, r24
    3daa:	cb 01       	movw	r24, r22
    3dac:	bc 01       	movw	r22, r24
    3dae:	cd 01       	movw	r24, r26
    3db0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3db4:	dc 01       	movw	r26, r24
    3db6:	cb 01       	movw	r24, r22
    3db8:	98 ab       	std	Y+48, r25	; 0x30
    3dba:	8f a7       	std	Y+47, r24	; 0x2f
    3dbc:	0f c0       	rjmp	.+30     	; 0x3ddc <HSSD_vCountDown+0x206>
    3dbe:	8c e2       	ldi	r24, 0x2C	; 44
    3dc0:	91 e0       	ldi	r25, 0x01	; 1
    3dc2:	9e a7       	std	Y+46, r25	; 0x2e
    3dc4:	8d a7       	std	Y+45, r24	; 0x2d
    3dc6:	8d a5       	ldd	r24, Y+45	; 0x2d
    3dc8:	9e a5       	ldd	r25, Y+46	; 0x2e
    3dca:	01 97       	sbiw	r24, 0x01	; 1
    3dcc:	f1 f7       	brne	.-4      	; 0x3dca <HSSD_vCountDown+0x1f4>
    3dce:	9e a7       	std	Y+46, r25	; 0x2e
    3dd0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3dd2:	8f a5       	ldd	r24, Y+47	; 0x2f
    3dd4:	98 a9       	ldd	r25, Y+48	; 0x30
    3dd6:	01 97       	sbiw	r24, 0x01	; 1
    3dd8:	98 ab       	std	Y+48, r25	; 0x30
    3dda:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ddc:	8f a5       	ldd	r24, Y+47	; 0x2f
    3dde:	98 a9       	ldd	r25, Y+48	; 0x30
    3de0:	00 97       	sbiw	r24, 0x00	; 0
    3de2:	69 f7       	brne	.-38     	; 0x3dbe <HSSD_vCountDown+0x1e8>
    3de4:	14 c0       	rjmp	.+40     	; 0x3e0e <HSSD_vCountDown+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3de6:	69 a9       	ldd	r22, Y+49	; 0x31
    3de8:	7a a9       	ldd	r23, Y+50	; 0x32
    3dea:	8b a9       	ldd	r24, Y+51	; 0x33
    3dec:	9c a9       	ldd	r25, Y+52	; 0x34
    3dee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3df2:	dc 01       	movw	r26, r24
    3df4:	cb 01       	movw	r24, r22
    3df6:	98 ab       	std	Y+48, r25	; 0x30
    3df8:	8f a7       	std	Y+47, r24	; 0x2f
    3dfa:	8f a5       	ldd	r24, Y+47	; 0x2f
    3dfc:	98 a9       	ldd	r25, Y+48	; 0x30
    3dfe:	9c a7       	std	Y+44, r25	; 0x2c
    3e00:	8b a7       	std	Y+43, r24	; 0x2b
    3e02:	8b a5       	ldd	r24, Y+43	; 0x2b
    3e04:	9c a5       	ldd	r25, Y+44	; 0x2c
    3e06:	01 97       	sbiw	r24, 0x01	; 1
    3e08:	f1 f7       	brne	.-4      	; 0x3e06 <HSSD_vCountDown+0x230>
    3e0a:	9c a7       	std	Y+44, r25	; 0x2c
    3e0c:	8b a7       	std	Y+43, r24	; 0x2b
	if(A_PortID <= DIO_PORTD)
	{
		switch(A_PortID)
		{
		case DIO_PORTA:
			for(s8 i=A_u8Time; i >= 0; i--)
    3e0e:	8c ad       	ldd	r24, Y+60	; 0x3c
    3e10:	81 50       	subi	r24, 0x01	; 1
    3e12:	8c af       	std	Y+60, r24	; 0x3c
    3e14:	8c ad       	ldd	r24, Y+60	; 0x3c
    3e16:	88 23       	and	r24, r24
    3e18:	0c f0       	brlt	.+2      	; 0x3e1c <HSSD_vCountDown+0x246>
    3e1a:	6e cf       	rjmp	.-292    	; 0x3cf8 <HSSD_vCountDown+0x122>
    3e1c:	ca c1       	rjmp	.+916    	; 0x41b2 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTB:
			for(s8 i=A_u8Time ; i >= 0; i--)
    3e1e:	fe 01       	movw	r30, r28
    3e20:	e8 5b       	subi	r30, 0xB8	; 184
    3e22:	ff 4f       	sbci	r31, 0xFF	; 255
    3e24:	80 81       	ld	r24, Z
    3e26:	8b af       	std	Y+59, r24	; 0x3b
    3e28:	8e c0       	rjmp	.+284    	; 0x3f46 <HSSD_vCountDown+0x370>
			{
				HSSD_vDisplayNumber(DIO_PORTB, SSD_u8ArrOfNumbers[i]);
    3e2a:	8b ad       	ldd	r24, Y+59	; 0x3b
    3e2c:	28 2f       	mov	r18, r24
    3e2e:	33 27       	eor	r19, r19
    3e30:	27 fd       	sbrc	r18, 7
    3e32:	30 95       	com	r19
    3e34:	ce 01       	movw	r24, r28
    3e36:	cd 96       	adiw	r24, 0x3d	; 61
    3e38:	fc 01       	movw	r30, r24
    3e3a:	e2 0f       	add	r30, r18
    3e3c:	f3 1f       	adc	r31, r19
    3e3e:	90 81       	ld	r25, Z
    3e40:	81 e0       	ldi	r24, 0x01	; 1
    3e42:	69 2f       	mov	r22, r25
    3e44:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3e48:	fe 01       	movw	r30, r28
    3e4a:	e7 5b       	subi	r30, 0xB7	; 183
    3e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4e:	80 81       	ld	r24, Z
    3e50:	91 81       	ldd	r25, Z+1	; 0x01
    3e52:	cc 01       	movw	r24, r24
    3e54:	a0 e0       	ldi	r26, 0x00	; 0
    3e56:	b0 e0       	ldi	r27, 0x00	; 0
    3e58:	bc 01       	movw	r22, r24
    3e5a:	cd 01       	movw	r24, r26
    3e5c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3e60:	dc 01       	movw	r26, r24
    3e62:	cb 01       	movw	r24, r22
    3e64:	8f a3       	std	Y+39, r24	; 0x27
    3e66:	98 a7       	std	Y+40, r25	; 0x28
    3e68:	a9 a7       	std	Y+41, r26	; 0x29
    3e6a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e6c:	6f a1       	ldd	r22, Y+39	; 0x27
    3e6e:	78 a5       	ldd	r23, Y+40	; 0x28
    3e70:	89 a5       	ldd	r24, Y+41	; 0x29
    3e72:	9a a5       	ldd	r25, Y+42	; 0x2a
    3e74:	20 e0       	ldi	r18, 0x00	; 0
    3e76:	30 e8       	ldi	r19, 0x80	; 128
    3e78:	4b e3       	ldi	r20, 0x3B	; 59
    3e7a:	55 e4       	ldi	r21, 0x45	; 69
    3e7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e80:	dc 01       	movw	r26, r24
    3e82:	cb 01       	movw	r24, r22
    3e84:	8b a3       	std	Y+35, r24	; 0x23
    3e86:	9c a3       	std	Y+36, r25	; 0x24
    3e88:	ad a3       	std	Y+37, r26	; 0x25
    3e8a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3e8c:	6b a1       	ldd	r22, Y+35	; 0x23
    3e8e:	7c a1       	ldd	r23, Y+36	; 0x24
    3e90:	8d a1       	ldd	r24, Y+37	; 0x25
    3e92:	9e a1       	ldd	r25, Y+38	; 0x26
    3e94:	20 e0       	ldi	r18, 0x00	; 0
    3e96:	30 e0       	ldi	r19, 0x00	; 0
    3e98:	40 e8       	ldi	r20, 0x80	; 128
    3e9a:	5f e3       	ldi	r21, 0x3F	; 63
    3e9c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3ea0:	88 23       	and	r24, r24
    3ea2:	2c f4       	brge	.+10     	; 0x3eae <HSSD_vCountDown+0x2d8>
		__ticks = 1;
    3ea4:	81 e0       	ldi	r24, 0x01	; 1
    3ea6:	90 e0       	ldi	r25, 0x00	; 0
    3ea8:	9a a3       	std	Y+34, r25	; 0x22
    3eaa:	89 a3       	std	Y+33, r24	; 0x21
    3eac:	3f c0       	rjmp	.+126    	; 0x3f2c <HSSD_vCountDown+0x356>
	else if (__tmp > 65535)
    3eae:	6b a1       	ldd	r22, Y+35	; 0x23
    3eb0:	7c a1       	ldd	r23, Y+36	; 0x24
    3eb2:	8d a1       	ldd	r24, Y+37	; 0x25
    3eb4:	9e a1       	ldd	r25, Y+38	; 0x26
    3eb6:	20 e0       	ldi	r18, 0x00	; 0
    3eb8:	3f ef       	ldi	r19, 0xFF	; 255
    3eba:	4f e7       	ldi	r20, 0x7F	; 127
    3ebc:	57 e4       	ldi	r21, 0x47	; 71
    3ebe:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3ec2:	18 16       	cp	r1, r24
    3ec4:	4c f5       	brge	.+82     	; 0x3f18 <HSSD_vCountDown+0x342>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ec6:	6f a1       	ldd	r22, Y+39	; 0x27
    3ec8:	78 a5       	ldd	r23, Y+40	; 0x28
    3eca:	89 a5       	ldd	r24, Y+41	; 0x29
    3ecc:	9a a5       	ldd	r25, Y+42	; 0x2a
    3ece:	20 e0       	ldi	r18, 0x00	; 0
    3ed0:	30 e0       	ldi	r19, 0x00	; 0
    3ed2:	40 e2       	ldi	r20, 0x20	; 32
    3ed4:	51 e4       	ldi	r21, 0x41	; 65
    3ed6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3eda:	dc 01       	movw	r26, r24
    3edc:	cb 01       	movw	r24, r22
    3ede:	bc 01       	movw	r22, r24
    3ee0:	cd 01       	movw	r24, r26
    3ee2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ee6:	dc 01       	movw	r26, r24
    3ee8:	cb 01       	movw	r24, r22
    3eea:	9a a3       	std	Y+34, r25	; 0x22
    3eec:	89 a3       	std	Y+33, r24	; 0x21
    3eee:	0f c0       	rjmp	.+30     	; 0x3f0e <HSSD_vCountDown+0x338>
    3ef0:	8c e2       	ldi	r24, 0x2C	; 44
    3ef2:	91 e0       	ldi	r25, 0x01	; 1
    3ef4:	98 a3       	std	Y+32, r25	; 0x20
    3ef6:	8f 8f       	std	Y+31, r24	; 0x1f
    3ef8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3efa:	98 a1       	ldd	r25, Y+32	; 0x20
    3efc:	01 97       	sbiw	r24, 0x01	; 1
    3efe:	f1 f7       	brne	.-4      	; 0x3efc <HSSD_vCountDown+0x326>
    3f00:	98 a3       	std	Y+32, r25	; 0x20
    3f02:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f04:	89 a1       	ldd	r24, Y+33	; 0x21
    3f06:	9a a1       	ldd	r25, Y+34	; 0x22
    3f08:	01 97       	sbiw	r24, 0x01	; 1
    3f0a:	9a a3       	std	Y+34, r25	; 0x22
    3f0c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f0e:	89 a1       	ldd	r24, Y+33	; 0x21
    3f10:	9a a1       	ldd	r25, Y+34	; 0x22
    3f12:	00 97       	sbiw	r24, 0x00	; 0
    3f14:	69 f7       	brne	.-38     	; 0x3ef0 <HSSD_vCountDown+0x31a>
    3f16:	14 c0       	rjmp	.+40     	; 0x3f40 <HSSD_vCountDown+0x36a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f18:	6b a1       	ldd	r22, Y+35	; 0x23
    3f1a:	7c a1       	ldd	r23, Y+36	; 0x24
    3f1c:	8d a1       	ldd	r24, Y+37	; 0x25
    3f1e:	9e a1       	ldd	r25, Y+38	; 0x26
    3f20:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f24:	dc 01       	movw	r26, r24
    3f26:	cb 01       	movw	r24, r22
    3f28:	9a a3       	std	Y+34, r25	; 0x22
    3f2a:	89 a3       	std	Y+33, r24	; 0x21
    3f2c:	89 a1       	ldd	r24, Y+33	; 0x21
    3f2e:	9a a1       	ldd	r25, Y+34	; 0x22
    3f30:	9e 8f       	std	Y+30, r25	; 0x1e
    3f32:	8d 8f       	std	Y+29, r24	; 0x1d
    3f34:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3f36:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3f38:	01 97       	sbiw	r24, 0x01	; 1
    3f3a:	f1 f7       	brne	.-4      	; 0x3f38 <HSSD_vCountDown+0x362>
    3f3c:	9e 8f       	std	Y+30, r25	; 0x1e
    3f3e:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTB:
			for(s8 i=A_u8Time ; i >= 0; i--)
    3f40:	8b ad       	ldd	r24, Y+59	; 0x3b
    3f42:	81 50       	subi	r24, 0x01	; 1
    3f44:	8b af       	std	Y+59, r24	; 0x3b
    3f46:	8b ad       	ldd	r24, Y+59	; 0x3b
    3f48:	88 23       	and	r24, r24
    3f4a:	0c f0       	brlt	.+2      	; 0x3f4e <HSSD_vCountDown+0x378>
    3f4c:	6e cf       	rjmp	.-292    	; 0x3e2a <HSSD_vCountDown+0x254>
    3f4e:	31 c1       	rjmp	.+610    	; 0x41b2 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTC:
			for(s8 i =A_u8Time  ; i >= 0; i--)
    3f50:	fe 01       	movw	r30, r28
    3f52:	e8 5b       	subi	r30, 0xB8	; 184
    3f54:	ff 4f       	sbci	r31, 0xFF	; 255
    3f56:	80 81       	ld	r24, Z
    3f58:	8a af       	std	Y+58, r24	; 0x3a
    3f5a:	8e c0       	rjmp	.+284    	; 0x4078 <HSSD_vCountDown+0x4a2>
			{
				HSSD_vDisplayNumber(DIO_PORTC, SSD_u8ArrOfNumbers[i]);
    3f5c:	8a ad       	ldd	r24, Y+58	; 0x3a
    3f5e:	28 2f       	mov	r18, r24
    3f60:	33 27       	eor	r19, r19
    3f62:	27 fd       	sbrc	r18, 7
    3f64:	30 95       	com	r19
    3f66:	ce 01       	movw	r24, r28
    3f68:	cd 96       	adiw	r24, 0x3d	; 61
    3f6a:	fc 01       	movw	r30, r24
    3f6c:	e2 0f       	add	r30, r18
    3f6e:	f3 1f       	adc	r31, r19
    3f70:	90 81       	ld	r25, Z
    3f72:	82 e0       	ldi	r24, 0x02	; 2
    3f74:	69 2f       	mov	r22, r25
    3f76:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3f7a:	fe 01       	movw	r30, r28
    3f7c:	e7 5b       	subi	r30, 0xB7	; 183
    3f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f80:	80 81       	ld	r24, Z
    3f82:	91 81       	ldd	r25, Z+1	; 0x01
    3f84:	cc 01       	movw	r24, r24
    3f86:	a0 e0       	ldi	r26, 0x00	; 0
    3f88:	b0 e0       	ldi	r27, 0x00	; 0
    3f8a:	bc 01       	movw	r22, r24
    3f8c:	cd 01       	movw	r24, r26
    3f8e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3f92:	dc 01       	movw	r26, r24
    3f94:	cb 01       	movw	r24, r22
    3f96:	89 8f       	std	Y+25, r24	; 0x19
    3f98:	9a 8f       	std	Y+26, r25	; 0x1a
    3f9a:	ab 8f       	std	Y+27, r26	; 0x1b
    3f9c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f9e:	69 8d       	ldd	r22, Y+25	; 0x19
    3fa0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3fa2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3fa4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3fa6:	20 e0       	ldi	r18, 0x00	; 0
    3fa8:	30 e8       	ldi	r19, 0x80	; 128
    3faa:	4b e3       	ldi	r20, 0x3B	; 59
    3fac:	55 e4       	ldi	r21, 0x45	; 69
    3fae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3fb2:	dc 01       	movw	r26, r24
    3fb4:	cb 01       	movw	r24, r22
    3fb6:	8d 8b       	std	Y+21, r24	; 0x15
    3fb8:	9e 8b       	std	Y+22, r25	; 0x16
    3fba:	af 8b       	std	Y+23, r26	; 0x17
    3fbc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3fbe:	6d 89       	ldd	r22, Y+21	; 0x15
    3fc0:	7e 89       	ldd	r23, Y+22	; 0x16
    3fc2:	8f 89       	ldd	r24, Y+23	; 0x17
    3fc4:	98 8d       	ldd	r25, Y+24	; 0x18
    3fc6:	20 e0       	ldi	r18, 0x00	; 0
    3fc8:	30 e0       	ldi	r19, 0x00	; 0
    3fca:	40 e8       	ldi	r20, 0x80	; 128
    3fcc:	5f e3       	ldi	r21, 0x3F	; 63
    3fce:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3fd2:	88 23       	and	r24, r24
    3fd4:	2c f4       	brge	.+10     	; 0x3fe0 <HSSD_vCountDown+0x40a>
		__ticks = 1;
    3fd6:	81 e0       	ldi	r24, 0x01	; 1
    3fd8:	90 e0       	ldi	r25, 0x00	; 0
    3fda:	9c 8b       	std	Y+20, r25	; 0x14
    3fdc:	8b 8b       	std	Y+19, r24	; 0x13
    3fde:	3f c0       	rjmp	.+126    	; 0x405e <HSSD_vCountDown+0x488>
	else if (__tmp > 65535)
    3fe0:	6d 89       	ldd	r22, Y+21	; 0x15
    3fe2:	7e 89       	ldd	r23, Y+22	; 0x16
    3fe4:	8f 89       	ldd	r24, Y+23	; 0x17
    3fe6:	98 8d       	ldd	r25, Y+24	; 0x18
    3fe8:	20 e0       	ldi	r18, 0x00	; 0
    3fea:	3f ef       	ldi	r19, 0xFF	; 255
    3fec:	4f e7       	ldi	r20, 0x7F	; 127
    3fee:	57 e4       	ldi	r21, 0x47	; 71
    3ff0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3ff4:	18 16       	cp	r1, r24
    3ff6:	4c f5       	brge	.+82     	; 0x404a <HSSD_vCountDown+0x474>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ff8:	69 8d       	ldd	r22, Y+25	; 0x19
    3ffa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ffc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ffe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4000:	20 e0       	ldi	r18, 0x00	; 0
    4002:	30 e0       	ldi	r19, 0x00	; 0
    4004:	40 e2       	ldi	r20, 0x20	; 32
    4006:	51 e4       	ldi	r21, 0x41	; 65
    4008:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    400c:	dc 01       	movw	r26, r24
    400e:	cb 01       	movw	r24, r22
    4010:	bc 01       	movw	r22, r24
    4012:	cd 01       	movw	r24, r26
    4014:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4018:	dc 01       	movw	r26, r24
    401a:	cb 01       	movw	r24, r22
    401c:	9c 8b       	std	Y+20, r25	; 0x14
    401e:	8b 8b       	std	Y+19, r24	; 0x13
    4020:	0f c0       	rjmp	.+30     	; 0x4040 <HSSD_vCountDown+0x46a>
    4022:	8c e2       	ldi	r24, 0x2C	; 44
    4024:	91 e0       	ldi	r25, 0x01	; 1
    4026:	9a 8b       	std	Y+18, r25	; 0x12
    4028:	89 8b       	std	Y+17, r24	; 0x11
    402a:	89 89       	ldd	r24, Y+17	; 0x11
    402c:	9a 89       	ldd	r25, Y+18	; 0x12
    402e:	01 97       	sbiw	r24, 0x01	; 1
    4030:	f1 f7       	brne	.-4      	; 0x402e <HSSD_vCountDown+0x458>
    4032:	9a 8b       	std	Y+18, r25	; 0x12
    4034:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4036:	8b 89       	ldd	r24, Y+19	; 0x13
    4038:	9c 89       	ldd	r25, Y+20	; 0x14
    403a:	01 97       	sbiw	r24, 0x01	; 1
    403c:	9c 8b       	std	Y+20, r25	; 0x14
    403e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4040:	8b 89       	ldd	r24, Y+19	; 0x13
    4042:	9c 89       	ldd	r25, Y+20	; 0x14
    4044:	00 97       	sbiw	r24, 0x00	; 0
    4046:	69 f7       	brne	.-38     	; 0x4022 <HSSD_vCountDown+0x44c>
    4048:	14 c0       	rjmp	.+40     	; 0x4072 <HSSD_vCountDown+0x49c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    404a:	6d 89       	ldd	r22, Y+21	; 0x15
    404c:	7e 89       	ldd	r23, Y+22	; 0x16
    404e:	8f 89       	ldd	r24, Y+23	; 0x17
    4050:	98 8d       	ldd	r25, Y+24	; 0x18
    4052:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4056:	dc 01       	movw	r26, r24
    4058:	cb 01       	movw	r24, r22
    405a:	9c 8b       	std	Y+20, r25	; 0x14
    405c:	8b 8b       	std	Y+19, r24	; 0x13
    405e:	8b 89       	ldd	r24, Y+19	; 0x13
    4060:	9c 89       	ldd	r25, Y+20	; 0x14
    4062:	98 8b       	std	Y+16, r25	; 0x10
    4064:	8f 87       	std	Y+15, r24	; 0x0f
    4066:	8f 85       	ldd	r24, Y+15	; 0x0f
    4068:	98 89       	ldd	r25, Y+16	; 0x10
    406a:	01 97       	sbiw	r24, 0x01	; 1
    406c:	f1 f7       	brne	.-4      	; 0x406a <HSSD_vCountDown+0x494>
    406e:	98 8b       	std	Y+16, r25	; 0x10
    4070:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTC:
			for(s8 i =A_u8Time  ; i >= 0; i--)
    4072:	8a ad       	ldd	r24, Y+58	; 0x3a
    4074:	81 50       	subi	r24, 0x01	; 1
    4076:	8a af       	std	Y+58, r24	; 0x3a
    4078:	8a ad       	ldd	r24, Y+58	; 0x3a
    407a:	88 23       	and	r24, r24
    407c:	0c f0       	brlt	.+2      	; 0x4080 <HSSD_vCountDown+0x4aa>
    407e:	6e cf       	rjmp	.-292    	; 0x3f5c <HSSD_vCountDown+0x386>
    4080:	98 c0       	rjmp	.+304    	; 0x41b2 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(s8 i=A_u8Time ; i >= 0; i--)
    4082:	fe 01       	movw	r30, r28
    4084:	e8 5b       	subi	r30, 0xB8	; 184
    4086:	ff 4f       	sbci	r31, 0xFF	; 255
    4088:	80 81       	ld	r24, Z
    408a:	89 af       	std	Y+57, r24	; 0x39
    408c:	8e c0       	rjmp	.+284    	; 0x41aa <HSSD_vCountDown+0x5d4>
			{
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
    408e:	89 ad       	ldd	r24, Y+57	; 0x39
    4090:	28 2f       	mov	r18, r24
    4092:	33 27       	eor	r19, r19
    4094:	27 fd       	sbrc	r18, 7
    4096:	30 95       	com	r19
    4098:	ce 01       	movw	r24, r28
    409a:	cd 96       	adiw	r24, 0x3d	; 61
    409c:	fc 01       	movw	r30, r24
    409e:	e2 0f       	add	r30, r18
    40a0:	f3 1f       	adc	r31, r19
    40a2:	90 81       	ld	r25, Z
    40a4:	83 e0       	ldi	r24, 0x03	; 3
    40a6:	69 2f       	mov	r22, r25
    40a8:	0e 94 cb 1a 	call	0x3596	; 0x3596 <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    40ac:	fe 01       	movw	r30, r28
    40ae:	e7 5b       	subi	r30, 0xB7	; 183
    40b0:	ff 4f       	sbci	r31, 0xFF	; 255
    40b2:	80 81       	ld	r24, Z
    40b4:	91 81       	ldd	r25, Z+1	; 0x01
    40b6:	cc 01       	movw	r24, r24
    40b8:	a0 e0       	ldi	r26, 0x00	; 0
    40ba:	b0 e0       	ldi	r27, 0x00	; 0
    40bc:	bc 01       	movw	r22, r24
    40be:	cd 01       	movw	r24, r26
    40c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    40c4:	dc 01       	movw	r26, r24
    40c6:	cb 01       	movw	r24, r22
    40c8:	8b 87       	std	Y+11, r24	; 0x0b
    40ca:	9c 87       	std	Y+12, r25	; 0x0c
    40cc:	ad 87       	std	Y+13, r26	; 0x0d
    40ce:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    40d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    40d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    40d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    40d8:	20 e0       	ldi	r18, 0x00	; 0
    40da:	30 e8       	ldi	r19, 0x80	; 128
    40dc:	4b e3       	ldi	r20, 0x3B	; 59
    40de:	55 e4       	ldi	r21, 0x45	; 69
    40e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    40e4:	dc 01       	movw	r26, r24
    40e6:	cb 01       	movw	r24, r22
    40e8:	8f 83       	std	Y+7, r24	; 0x07
    40ea:	98 87       	std	Y+8, r25	; 0x08
    40ec:	a9 87       	std	Y+9, r26	; 0x09
    40ee:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    40f0:	6f 81       	ldd	r22, Y+7	; 0x07
    40f2:	78 85       	ldd	r23, Y+8	; 0x08
    40f4:	89 85       	ldd	r24, Y+9	; 0x09
    40f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40f8:	20 e0       	ldi	r18, 0x00	; 0
    40fa:	30 e0       	ldi	r19, 0x00	; 0
    40fc:	40 e8       	ldi	r20, 0x80	; 128
    40fe:	5f e3       	ldi	r21, 0x3F	; 63
    4100:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4104:	88 23       	and	r24, r24
    4106:	2c f4       	brge	.+10     	; 0x4112 <HSSD_vCountDown+0x53c>
		__ticks = 1;
    4108:	81 e0       	ldi	r24, 0x01	; 1
    410a:	90 e0       	ldi	r25, 0x00	; 0
    410c:	9e 83       	std	Y+6, r25	; 0x06
    410e:	8d 83       	std	Y+5, r24	; 0x05
    4110:	3f c0       	rjmp	.+126    	; 0x4190 <HSSD_vCountDown+0x5ba>
	else if (__tmp > 65535)
    4112:	6f 81       	ldd	r22, Y+7	; 0x07
    4114:	78 85       	ldd	r23, Y+8	; 0x08
    4116:	89 85       	ldd	r24, Y+9	; 0x09
    4118:	9a 85       	ldd	r25, Y+10	; 0x0a
    411a:	20 e0       	ldi	r18, 0x00	; 0
    411c:	3f ef       	ldi	r19, 0xFF	; 255
    411e:	4f e7       	ldi	r20, 0x7F	; 127
    4120:	57 e4       	ldi	r21, 0x47	; 71
    4122:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4126:	18 16       	cp	r1, r24
    4128:	4c f5       	brge	.+82     	; 0x417c <HSSD_vCountDown+0x5a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    412a:	6b 85       	ldd	r22, Y+11	; 0x0b
    412c:	7c 85       	ldd	r23, Y+12	; 0x0c
    412e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4130:	9e 85       	ldd	r25, Y+14	; 0x0e
    4132:	20 e0       	ldi	r18, 0x00	; 0
    4134:	30 e0       	ldi	r19, 0x00	; 0
    4136:	40 e2       	ldi	r20, 0x20	; 32
    4138:	51 e4       	ldi	r21, 0x41	; 65
    413a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    413e:	dc 01       	movw	r26, r24
    4140:	cb 01       	movw	r24, r22
    4142:	bc 01       	movw	r22, r24
    4144:	cd 01       	movw	r24, r26
    4146:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    414a:	dc 01       	movw	r26, r24
    414c:	cb 01       	movw	r24, r22
    414e:	9e 83       	std	Y+6, r25	; 0x06
    4150:	8d 83       	std	Y+5, r24	; 0x05
    4152:	0f c0       	rjmp	.+30     	; 0x4172 <HSSD_vCountDown+0x59c>
    4154:	8c e2       	ldi	r24, 0x2C	; 44
    4156:	91 e0       	ldi	r25, 0x01	; 1
    4158:	9c 83       	std	Y+4, r25	; 0x04
    415a:	8b 83       	std	Y+3, r24	; 0x03
    415c:	8b 81       	ldd	r24, Y+3	; 0x03
    415e:	9c 81       	ldd	r25, Y+4	; 0x04
    4160:	01 97       	sbiw	r24, 0x01	; 1
    4162:	f1 f7       	brne	.-4      	; 0x4160 <HSSD_vCountDown+0x58a>
    4164:	9c 83       	std	Y+4, r25	; 0x04
    4166:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4168:	8d 81       	ldd	r24, Y+5	; 0x05
    416a:	9e 81       	ldd	r25, Y+6	; 0x06
    416c:	01 97       	sbiw	r24, 0x01	; 1
    416e:	9e 83       	std	Y+6, r25	; 0x06
    4170:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4172:	8d 81       	ldd	r24, Y+5	; 0x05
    4174:	9e 81       	ldd	r25, Y+6	; 0x06
    4176:	00 97       	sbiw	r24, 0x00	; 0
    4178:	69 f7       	brne	.-38     	; 0x4154 <HSSD_vCountDown+0x57e>
    417a:	14 c0       	rjmp	.+40     	; 0x41a4 <HSSD_vCountDown+0x5ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    417c:	6f 81       	ldd	r22, Y+7	; 0x07
    417e:	78 85       	ldd	r23, Y+8	; 0x08
    4180:	89 85       	ldd	r24, Y+9	; 0x09
    4182:	9a 85       	ldd	r25, Y+10	; 0x0a
    4184:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4188:	dc 01       	movw	r26, r24
    418a:	cb 01       	movw	r24, r22
    418c:	9e 83       	std	Y+6, r25	; 0x06
    418e:	8d 83       	std	Y+5, r24	; 0x05
    4190:	8d 81       	ldd	r24, Y+5	; 0x05
    4192:	9e 81       	ldd	r25, Y+6	; 0x06
    4194:	9a 83       	std	Y+2, r25	; 0x02
    4196:	89 83       	std	Y+1, r24	; 0x01
    4198:	89 81       	ldd	r24, Y+1	; 0x01
    419a:	9a 81       	ldd	r25, Y+2	; 0x02
    419c:	01 97       	sbiw	r24, 0x01	; 1
    419e:	f1 f7       	brne	.-4      	; 0x419c <HSSD_vCountDown+0x5c6>
    41a0:	9a 83       	std	Y+2, r25	; 0x02
    41a2:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(s8 i=A_u8Time ; i >= 0; i--)
    41a4:	89 ad       	ldd	r24, Y+57	; 0x39
    41a6:	81 50       	subi	r24, 0x01	; 1
    41a8:	89 af       	std	Y+57, r24	; 0x39
    41aa:	89 ad       	ldd	r24, Y+57	; 0x39
    41ac:	88 23       	and	r24, r24
    41ae:	0c f0       	brlt	.+2      	; 0x41b2 <HSSD_vCountDown+0x5dc>
    41b0:	6e cf       	rjmp	.-292    	; 0x408e <HSSD_vCountDown+0x4b8>
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
				_delay_ms(A_u16TimetoWait);
			}
			break;
		}
		MDIO_vSetPortVal(A_PortID , 0xFF);
    41b2:	fe 01       	movw	r30, r28
    41b4:	e9 5b       	subi	r30, 0xB9	; 185
    41b6:	ff 4f       	sbci	r31, 0xFF	; 255
    41b8:	80 81       	ld	r24, Z
    41ba:	6f ef       	ldi	r22, 0xFF	; 255
    41bc:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>
	}
}
    41c0:	cf 5a       	subi	r28, 0xAF	; 175
    41c2:	df 4f       	sbci	r29, 0xFF	; 255
    41c4:	0f b6       	in	r0, 0x3f	; 63
    41c6:	f8 94       	cli
    41c8:	de bf       	out	0x3e, r29	; 62
    41ca:	0f be       	out	0x3f, r0	; 63
    41cc:	cd bf       	out	0x3d, r28	; 61
    41ce:	cf 91       	pop	r28
    41d0:	df 91       	pop	r29
    41d2:	08 95       	ret

000041d4 <HLCD_vSendCommand>:
#include "LCD_Cfg.h"

#include <util/delay.h>
#define F_CPU 12000000UL
void HLCD_vSendCommand(u8 A_u8Command)
{
    41d4:	df 93       	push	r29
    41d6:	cf 93       	push	r28
    41d8:	cd b7       	in	r28, 0x3d	; 61
    41da:	de b7       	in	r29, 0x3e	; 62
    41dc:	2f 97       	sbiw	r28, 0x0f	; 15
    41de:	0f b6       	in	r0, 0x3f	; 63
    41e0:	f8 94       	cli
    41e2:	de bf       	out	0x3e, r29	; 62
    41e4:	0f be       	out	0x3f, r0	; 63
    41e6:	cd bf       	out	0x3d, r28	; 61
    41e8:	8f 87       	std	Y+15, r24	; 0x0f
	// To send Command RS -> 0 , RW -> 0
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RS_PIN , DIO_LOW);
    41ea:	82 e0       	ldi	r24, 0x02	; 2
    41ec:	60 e0       	ldi	r22, 0x00	; 0
    41ee:	40 e0       	ldi	r20, 0x00	; 0
    41f0:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    41f4:	82 e0       	ldi	r24, 0x02	; 2
    41f6:	61 e0       	ldi	r22, 0x01	; 1
    41f8:	40 e0       	ldi	r20, 0x00	; 0
    41fa:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>

	// Send Commnad
	MDIO_vSetPortVal(LCD_DATA_PORT , A_u8Command);
    41fe:	83 e0       	ldi	r24, 0x03	; 3
    4200:	6f 85       	ldd	r22, Y+15	; 0x0f
    4202:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>

	// Set Pulse On Enable Pin
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    4206:	82 e0       	ldi	r24, 0x02	; 2
    4208:	62 e0       	ldi	r22, 0x02	; 2
    420a:	41 e0       	ldi	r20, 0x01	; 1
    420c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    4210:	80 e0       	ldi	r24, 0x00	; 0
    4212:	90 e0       	ldi	r25, 0x00	; 0
    4214:	a0 e0       	ldi	r26, 0x00	; 0
    4216:	b0 e4       	ldi	r27, 0x40	; 64
    4218:	8b 87       	std	Y+11, r24	; 0x0b
    421a:	9c 87       	std	Y+12, r25	; 0x0c
    421c:	ad 87       	std	Y+13, r26	; 0x0d
    421e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4220:	6b 85       	ldd	r22, Y+11	; 0x0b
    4222:	7c 85       	ldd	r23, Y+12	; 0x0c
    4224:	8d 85       	ldd	r24, Y+13	; 0x0d
    4226:	9e 85       	ldd	r25, Y+14	; 0x0e
    4228:	20 e0       	ldi	r18, 0x00	; 0
    422a:	30 e8       	ldi	r19, 0x80	; 128
    422c:	4b e3       	ldi	r20, 0x3B	; 59
    422e:	55 e4       	ldi	r21, 0x45	; 69
    4230:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4234:	dc 01       	movw	r26, r24
    4236:	cb 01       	movw	r24, r22
    4238:	8f 83       	std	Y+7, r24	; 0x07
    423a:	98 87       	std	Y+8, r25	; 0x08
    423c:	a9 87       	std	Y+9, r26	; 0x09
    423e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4240:	6f 81       	ldd	r22, Y+7	; 0x07
    4242:	78 85       	ldd	r23, Y+8	; 0x08
    4244:	89 85       	ldd	r24, Y+9	; 0x09
    4246:	9a 85       	ldd	r25, Y+10	; 0x0a
    4248:	20 e0       	ldi	r18, 0x00	; 0
    424a:	30 e0       	ldi	r19, 0x00	; 0
    424c:	40 e8       	ldi	r20, 0x80	; 128
    424e:	5f e3       	ldi	r21, 0x3F	; 63
    4250:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4254:	88 23       	and	r24, r24
    4256:	2c f4       	brge	.+10     	; 0x4262 <HLCD_vSendCommand+0x8e>
		__ticks = 1;
    4258:	81 e0       	ldi	r24, 0x01	; 1
    425a:	90 e0       	ldi	r25, 0x00	; 0
    425c:	9e 83       	std	Y+6, r25	; 0x06
    425e:	8d 83       	std	Y+5, r24	; 0x05
    4260:	3f c0       	rjmp	.+126    	; 0x42e0 <HLCD_vSendCommand+0x10c>
	else if (__tmp > 65535)
    4262:	6f 81       	ldd	r22, Y+7	; 0x07
    4264:	78 85       	ldd	r23, Y+8	; 0x08
    4266:	89 85       	ldd	r24, Y+9	; 0x09
    4268:	9a 85       	ldd	r25, Y+10	; 0x0a
    426a:	20 e0       	ldi	r18, 0x00	; 0
    426c:	3f ef       	ldi	r19, 0xFF	; 255
    426e:	4f e7       	ldi	r20, 0x7F	; 127
    4270:	57 e4       	ldi	r21, 0x47	; 71
    4272:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4276:	18 16       	cp	r1, r24
    4278:	4c f5       	brge	.+82     	; 0x42cc <HLCD_vSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    427a:	6b 85       	ldd	r22, Y+11	; 0x0b
    427c:	7c 85       	ldd	r23, Y+12	; 0x0c
    427e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4280:	9e 85       	ldd	r25, Y+14	; 0x0e
    4282:	20 e0       	ldi	r18, 0x00	; 0
    4284:	30 e0       	ldi	r19, 0x00	; 0
    4286:	40 e2       	ldi	r20, 0x20	; 32
    4288:	51 e4       	ldi	r21, 0x41	; 65
    428a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    428e:	dc 01       	movw	r26, r24
    4290:	cb 01       	movw	r24, r22
    4292:	bc 01       	movw	r22, r24
    4294:	cd 01       	movw	r24, r26
    4296:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    429a:	dc 01       	movw	r26, r24
    429c:	cb 01       	movw	r24, r22
    429e:	9e 83       	std	Y+6, r25	; 0x06
    42a0:	8d 83       	std	Y+5, r24	; 0x05
    42a2:	0f c0       	rjmp	.+30     	; 0x42c2 <HLCD_vSendCommand+0xee>
    42a4:	8c e2       	ldi	r24, 0x2C	; 44
    42a6:	91 e0       	ldi	r25, 0x01	; 1
    42a8:	9c 83       	std	Y+4, r25	; 0x04
    42aa:	8b 83       	std	Y+3, r24	; 0x03
    42ac:	8b 81       	ldd	r24, Y+3	; 0x03
    42ae:	9c 81       	ldd	r25, Y+4	; 0x04
    42b0:	01 97       	sbiw	r24, 0x01	; 1
    42b2:	f1 f7       	brne	.-4      	; 0x42b0 <HLCD_vSendCommand+0xdc>
    42b4:	9c 83       	std	Y+4, r25	; 0x04
    42b6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42b8:	8d 81       	ldd	r24, Y+5	; 0x05
    42ba:	9e 81       	ldd	r25, Y+6	; 0x06
    42bc:	01 97       	sbiw	r24, 0x01	; 1
    42be:	9e 83       	std	Y+6, r25	; 0x06
    42c0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42c2:	8d 81       	ldd	r24, Y+5	; 0x05
    42c4:	9e 81       	ldd	r25, Y+6	; 0x06
    42c6:	00 97       	sbiw	r24, 0x00	; 0
    42c8:	69 f7       	brne	.-38     	; 0x42a4 <HLCD_vSendCommand+0xd0>
    42ca:	14 c0       	rjmp	.+40     	; 0x42f4 <HLCD_vSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42cc:	6f 81       	ldd	r22, Y+7	; 0x07
    42ce:	78 85       	ldd	r23, Y+8	; 0x08
    42d0:	89 85       	ldd	r24, Y+9	; 0x09
    42d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    42d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42d8:	dc 01       	movw	r26, r24
    42da:	cb 01       	movw	r24, r22
    42dc:	9e 83       	std	Y+6, r25	; 0x06
    42de:	8d 83       	std	Y+5, r24	; 0x05
    42e0:	8d 81       	ldd	r24, Y+5	; 0x05
    42e2:	9e 81       	ldd	r25, Y+6	; 0x06
    42e4:	9a 83       	std	Y+2, r25	; 0x02
    42e6:	89 83       	std	Y+1, r24	; 0x01
    42e8:	89 81       	ldd	r24, Y+1	; 0x01
    42ea:	9a 81       	ldd	r25, Y+2	; 0x02
    42ec:	01 97       	sbiw	r24, 0x01	; 1
    42ee:	f1 f7       	brne	.-4      	; 0x42ec <HLCD_vSendCommand+0x118>
    42f0:	9a 83       	std	Y+2, r25	; 0x02
    42f2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    42f4:	82 e0       	ldi	r24, 0x02	; 2
    42f6:	62 e0       	ldi	r22, 0x02	; 2
    42f8:	40 e0       	ldi	r20, 0x00	; 0
    42fa:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    42fe:	2f 96       	adiw	r28, 0x0f	; 15
    4300:	0f b6       	in	r0, 0x3f	; 63
    4302:	f8 94       	cli
    4304:	de bf       	out	0x3e, r29	; 62
    4306:	0f be       	out	0x3f, r0	; 63
    4308:	cd bf       	out	0x3d, r28	; 61
    430a:	cf 91       	pop	r28
    430c:	df 91       	pop	r29
    430e:	08 95       	ret

00004310 <HLCD_vSendData>:

void HLCD_vSendData(u8 A_u8Data)
{
    4310:	df 93       	push	r29
    4312:	cf 93       	push	r28
    4314:	cd b7       	in	r28, 0x3d	; 61
    4316:	de b7       	in	r29, 0x3e	; 62
    4318:	2f 97       	sbiw	r28, 0x0f	; 15
    431a:	0f b6       	in	r0, 0x3f	; 63
    431c:	f8 94       	cli
    431e:	de bf       	out	0x3e, r29	; 62
    4320:	0f be       	out	0x3f, r0	; 63
    4322:	cd bf       	out	0x3d, r28	; 61
    4324:	8f 87       	std	Y+15, r24	; 0x0f
	// To send Data RS -> 1 , RW -> 0
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RS_PIN , DIO_HIGH);
    4326:	82 e0       	ldi	r24, 0x02	; 2
    4328:	60 e0       	ldi	r22, 0x00	; 0
    432a:	41 e0       	ldi	r20, 0x01	; 1
    432c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    4330:	82 e0       	ldi	r24, 0x02	; 2
    4332:	61 e0       	ldi	r22, 0x01	; 1
    4334:	40 e0       	ldi	r20, 0x00	; 0
    4336:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>

	// Send Commnad
	MDIO_vSetPortVal(LCD_DATA_PORT , A_u8Data);
    433a:	83 e0       	ldi	r24, 0x03	; 3
    433c:	6f 85       	ldd	r22, Y+15	; 0x0f
    433e:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>

	// Set Pulse On Enable Pin
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    4342:	82 e0       	ldi	r24, 0x02	; 2
    4344:	62 e0       	ldi	r22, 0x02	; 2
    4346:	41 e0       	ldi	r20, 0x01	; 1
    4348:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
    434c:	80 e0       	ldi	r24, 0x00	; 0
    434e:	90 e0       	ldi	r25, 0x00	; 0
    4350:	a0 e0       	ldi	r26, 0x00	; 0
    4352:	b0 e4       	ldi	r27, 0x40	; 64
    4354:	8b 87       	std	Y+11, r24	; 0x0b
    4356:	9c 87       	std	Y+12, r25	; 0x0c
    4358:	ad 87       	std	Y+13, r26	; 0x0d
    435a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    435c:	6b 85       	ldd	r22, Y+11	; 0x0b
    435e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4360:	8d 85       	ldd	r24, Y+13	; 0x0d
    4362:	9e 85       	ldd	r25, Y+14	; 0x0e
    4364:	20 e0       	ldi	r18, 0x00	; 0
    4366:	30 e8       	ldi	r19, 0x80	; 128
    4368:	4b e3       	ldi	r20, 0x3B	; 59
    436a:	55 e4       	ldi	r21, 0x45	; 69
    436c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4370:	dc 01       	movw	r26, r24
    4372:	cb 01       	movw	r24, r22
    4374:	8f 83       	std	Y+7, r24	; 0x07
    4376:	98 87       	std	Y+8, r25	; 0x08
    4378:	a9 87       	std	Y+9, r26	; 0x09
    437a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    437c:	6f 81       	ldd	r22, Y+7	; 0x07
    437e:	78 85       	ldd	r23, Y+8	; 0x08
    4380:	89 85       	ldd	r24, Y+9	; 0x09
    4382:	9a 85       	ldd	r25, Y+10	; 0x0a
    4384:	20 e0       	ldi	r18, 0x00	; 0
    4386:	30 e0       	ldi	r19, 0x00	; 0
    4388:	40 e8       	ldi	r20, 0x80	; 128
    438a:	5f e3       	ldi	r21, 0x3F	; 63
    438c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4390:	88 23       	and	r24, r24
    4392:	2c f4       	brge	.+10     	; 0x439e <HLCD_vSendData+0x8e>
		__ticks = 1;
    4394:	81 e0       	ldi	r24, 0x01	; 1
    4396:	90 e0       	ldi	r25, 0x00	; 0
    4398:	9e 83       	std	Y+6, r25	; 0x06
    439a:	8d 83       	std	Y+5, r24	; 0x05
    439c:	3f c0       	rjmp	.+126    	; 0x441c <HLCD_vSendData+0x10c>
	else if (__tmp > 65535)
    439e:	6f 81       	ldd	r22, Y+7	; 0x07
    43a0:	78 85       	ldd	r23, Y+8	; 0x08
    43a2:	89 85       	ldd	r24, Y+9	; 0x09
    43a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    43a6:	20 e0       	ldi	r18, 0x00	; 0
    43a8:	3f ef       	ldi	r19, 0xFF	; 255
    43aa:	4f e7       	ldi	r20, 0x7F	; 127
    43ac:	57 e4       	ldi	r21, 0x47	; 71
    43ae:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    43b2:	18 16       	cp	r1, r24
    43b4:	4c f5       	brge	.+82     	; 0x4408 <HLCD_vSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    43b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    43ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    43bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    43be:	20 e0       	ldi	r18, 0x00	; 0
    43c0:	30 e0       	ldi	r19, 0x00	; 0
    43c2:	40 e2       	ldi	r20, 0x20	; 32
    43c4:	51 e4       	ldi	r21, 0x41	; 65
    43c6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    43ca:	dc 01       	movw	r26, r24
    43cc:	cb 01       	movw	r24, r22
    43ce:	bc 01       	movw	r22, r24
    43d0:	cd 01       	movw	r24, r26
    43d2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43d6:	dc 01       	movw	r26, r24
    43d8:	cb 01       	movw	r24, r22
    43da:	9e 83       	std	Y+6, r25	; 0x06
    43dc:	8d 83       	std	Y+5, r24	; 0x05
    43de:	0f c0       	rjmp	.+30     	; 0x43fe <HLCD_vSendData+0xee>
    43e0:	8c e2       	ldi	r24, 0x2C	; 44
    43e2:	91 e0       	ldi	r25, 0x01	; 1
    43e4:	9c 83       	std	Y+4, r25	; 0x04
    43e6:	8b 83       	std	Y+3, r24	; 0x03
    43e8:	8b 81       	ldd	r24, Y+3	; 0x03
    43ea:	9c 81       	ldd	r25, Y+4	; 0x04
    43ec:	01 97       	sbiw	r24, 0x01	; 1
    43ee:	f1 f7       	brne	.-4      	; 0x43ec <HLCD_vSendData+0xdc>
    43f0:	9c 83       	std	Y+4, r25	; 0x04
    43f2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43f4:	8d 81       	ldd	r24, Y+5	; 0x05
    43f6:	9e 81       	ldd	r25, Y+6	; 0x06
    43f8:	01 97       	sbiw	r24, 0x01	; 1
    43fa:	9e 83       	std	Y+6, r25	; 0x06
    43fc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4400:	9e 81       	ldd	r25, Y+6	; 0x06
    4402:	00 97       	sbiw	r24, 0x00	; 0
    4404:	69 f7       	brne	.-38     	; 0x43e0 <HLCD_vSendData+0xd0>
    4406:	14 c0       	rjmp	.+40     	; 0x4430 <HLCD_vSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4408:	6f 81       	ldd	r22, Y+7	; 0x07
    440a:	78 85       	ldd	r23, Y+8	; 0x08
    440c:	89 85       	ldd	r24, Y+9	; 0x09
    440e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4410:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4414:	dc 01       	movw	r26, r24
    4416:	cb 01       	movw	r24, r22
    4418:	9e 83       	std	Y+6, r25	; 0x06
    441a:	8d 83       	std	Y+5, r24	; 0x05
    441c:	8d 81       	ldd	r24, Y+5	; 0x05
    441e:	9e 81       	ldd	r25, Y+6	; 0x06
    4420:	9a 83       	std	Y+2, r25	; 0x02
    4422:	89 83       	std	Y+1, r24	; 0x01
    4424:	89 81       	ldd	r24, Y+1	; 0x01
    4426:	9a 81       	ldd	r25, Y+2	; 0x02
    4428:	01 97       	sbiw	r24, 0x01	; 1
    442a:	f1 f7       	brne	.-4      	; 0x4428 <HLCD_vSendData+0x118>
    442c:	9a 83       	std	Y+2, r25	; 0x02
    442e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    4430:	82 e0       	ldi	r24, 0x02	; 2
    4432:	62 e0       	ldi	r22, 0x02	; 2
    4434:	40 e0       	ldi	r20, 0x00	; 0
    4436:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    443a:	2f 96       	adiw	r28, 0x0f	; 15
    443c:	0f b6       	in	r0, 0x3f	; 63
    443e:	f8 94       	cli
    4440:	de bf       	out	0x3e, r29	; 62
    4442:	0f be       	out	0x3f, r0	; 63
    4444:	cd bf       	out	0x3d, r28	; 61
    4446:	cf 91       	pop	r28
    4448:	df 91       	pop	r29
    444a:	08 95       	ret

0000444c <HLCD_vInit>:

void HLCD_vInit(void)
{
    444c:	0f 93       	push	r16
    444e:	1f 93       	push	r17
    4450:	df 93       	push	r29
    4452:	cf 93       	push	r28
    4454:	cd b7       	in	r28, 0x3d	; 61
    4456:	de b7       	in	r29, 0x3e	; 62
    4458:	c6 54       	subi	r28, 0x46	; 70
    445a:	d0 40       	sbci	r29, 0x00	; 0
    445c:	0f b6       	in	r0, 0x3f	; 63
    445e:	f8 94       	cli
    4460:	de bf       	out	0x3e, r29	; 62
    4462:	0f be       	out	0x3f, r0	; 63
    4464:	cd bf       	out	0x3d, r28	; 61
	MDIO_vSetPortDir(LCD_DATA_PORT,0xFF);
    4466:	83 e0       	ldi	r24, 0x03	; 3
    4468:	6f ef       	ldi	r22, 0xFF	; 255
    446a:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
	MDIO_vSetPortDir(LCD_CTRL_PORT,0x07);
    446e:	82 e0       	ldi	r24, 0x02	; 2
    4470:	67 e0       	ldi	r22, 0x07	; 7
    4472:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>
    4476:	fe 01       	movw	r30, r28
    4478:	ed 5b       	subi	r30, 0xBD	; 189
    447a:	ff 4f       	sbci	r31, 0xFF	; 255
    447c:	80 e0       	ldi	r24, 0x00	; 0
    447e:	90 e0       	ldi	r25, 0x00	; 0
    4480:	a0 ef       	ldi	r26, 0xF0	; 240
    4482:	b1 e4       	ldi	r27, 0x41	; 65
    4484:	80 83       	st	Z, r24
    4486:	91 83       	std	Z+1, r25	; 0x01
    4488:	a2 83       	std	Z+2, r26	; 0x02
    448a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    448c:	8e 01       	movw	r16, r28
    448e:	01 5c       	subi	r16, 0xC1	; 193
    4490:	1f 4f       	sbci	r17, 0xFF	; 255
    4492:	fe 01       	movw	r30, r28
    4494:	ed 5b       	subi	r30, 0xBD	; 189
    4496:	ff 4f       	sbci	r31, 0xFF	; 255
    4498:	60 81       	ld	r22, Z
    449a:	71 81       	ldd	r23, Z+1	; 0x01
    449c:	82 81       	ldd	r24, Z+2	; 0x02
    449e:	93 81       	ldd	r25, Z+3	; 0x03
    44a0:	20 e0       	ldi	r18, 0x00	; 0
    44a2:	30 e8       	ldi	r19, 0x80	; 128
    44a4:	4b e3       	ldi	r20, 0x3B	; 59
    44a6:	55 e4       	ldi	r21, 0x45	; 69
    44a8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44ac:	dc 01       	movw	r26, r24
    44ae:	cb 01       	movw	r24, r22
    44b0:	f8 01       	movw	r30, r16
    44b2:	80 83       	st	Z, r24
    44b4:	91 83       	std	Z+1, r25	; 0x01
    44b6:	a2 83       	std	Z+2, r26	; 0x02
    44b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44ba:	fe 01       	movw	r30, r28
    44bc:	ff 96       	adiw	r30, 0x3f	; 63
    44be:	60 81       	ld	r22, Z
    44c0:	71 81       	ldd	r23, Z+1	; 0x01
    44c2:	82 81       	ldd	r24, Z+2	; 0x02
    44c4:	93 81       	ldd	r25, Z+3	; 0x03
    44c6:	20 e0       	ldi	r18, 0x00	; 0
    44c8:	30 e0       	ldi	r19, 0x00	; 0
    44ca:	40 e8       	ldi	r20, 0x80	; 128
    44cc:	5f e3       	ldi	r21, 0x3F	; 63
    44ce:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    44d2:	88 23       	and	r24, r24
    44d4:	2c f4       	brge	.+10     	; 0x44e0 <HLCD_vInit+0x94>
		__ticks = 1;
    44d6:	81 e0       	ldi	r24, 0x01	; 1
    44d8:	90 e0       	ldi	r25, 0x00	; 0
    44da:	9e af       	std	Y+62, r25	; 0x3e
    44dc:	8d af       	std	Y+61, r24	; 0x3d
    44de:	46 c0       	rjmp	.+140    	; 0x456c <HLCD_vInit+0x120>
	else if (__tmp > 65535)
    44e0:	fe 01       	movw	r30, r28
    44e2:	ff 96       	adiw	r30, 0x3f	; 63
    44e4:	60 81       	ld	r22, Z
    44e6:	71 81       	ldd	r23, Z+1	; 0x01
    44e8:	82 81       	ldd	r24, Z+2	; 0x02
    44ea:	93 81       	ldd	r25, Z+3	; 0x03
    44ec:	20 e0       	ldi	r18, 0x00	; 0
    44ee:	3f ef       	ldi	r19, 0xFF	; 255
    44f0:	4f e7       	ldi	r20, 0x7F	; 127
    44f2:	57 e4       	ldi	r21, 0x47	; 71
    44f4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    44f8:	18 16       	cp	r1, r24
    44fa:	64 f5       	brge	.+88     	; 0x4554 <HLCD_vInit+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44fc:	fe 01       	movw	r30, r28
    44fe:	ed 5b       	subi	r30, 0xBD	; 189
    4500:	ff 4f       	sbci	r31, 0xFF	; 255
    4502:	60 81       	ld	r22, Z
    4504:	71 81       	ldd	r23, Z+1	; 0x01
    4506:	82 81       	ldd	r24, Z+2	; 0x02
    4508:	93 81       	ldd	r25, Z+3	; 0x03
    450a:	20 e0       	ldi	r18, 0x00	; 0
    450c:	30 e0       	ldi	r19, 0x00	; 0
    450e:	40 e2       	ldi	r20, 0x20	; 32
    4510:	51 e4       	ldi	r21, 0x41	; 65
    4512:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4516:	dc 01       	movw	r26, r24
    4518:	cb 01       	movw	r24, r22
    451a:	bc 01       	movw	r22, r24
    451c:	cd 01       	movw	r24, r26
    451e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4522:	dc 01       	movw	r26, r24
    4524:	cb 01       	movw	r24, r22
    4526:	9e af       	std	Y+62, r25	; 0x3e
    4528:	8d af       	std	Y+61, r24	; 0x3d
    452a:	0f c0       	rjmp	.+30     	; 0x454a <HLCD_vInit+0xfe>
    452c:	8c e2       	ldi	r24, 0x2C	; 44
    452e:	91 e0       	ldi	r25, 0x01	; 1
    4530:	9c af       	std	Y+60, r25	; 0x3c
    4532:	8b af       	std	Y+59, r24	; 0x3b
    4534:	8b ad       	ldd	r24, Y+59	; 0x3b
    4536:	9c ad       	ldd	r25, Y+60	; 0x3c
    4538:	01 97       	sbiw	r24, 0x01	; 1
    453a:	f1 f7       	brne	.-4      	; 0x4538 <HLCD_vInit+0xec>
    453c:	9c af       	std	Y+60, r25	; 0x3c
    453e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4540:	8d ad       	ldd	r24, Y+61	; 0x3d
    4542:	9e ad       	ldd	r25, Y+62	; 0x3e
    4544:	01 97       	sbiw	r24, 0x01	; 1
    4546:	9e af       	std	Y+62, r25	; 0x3e
    4548:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    454a:	8d ad       	ldd	r24, Y+61	; 0x3d
    454c:	9e ad       	ldd	r25, Y+62	; 0x3e
    454e:	00 97       	sbiw	r24, 0x00	; 0
    4550:	69 f7       	brne	.-38     	; 0x452c <HLCD_vInit+0xe0>
    4552:	16 c0       	rjmp	.+44     	; 0x4580 <HLCD_vInit+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4554:	fe 01       	movw	r30, r28
    4556:	ff 96       	adiw	r30, 0x3f	; 63
    4558:	60 81       	ld	r22, Z
    455a:	71 81       	ldd	r23, Z+1	; 0x01
    455c:	82 81       	ldd	r24, Z+2	; 0x02
    455e:	93 81       	ldd	r25, Z+3	; 0x03
    4560:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4564:	dc 01       	movw	r26, r24
    4566:	cb 01       	movw	r24, r22
    4568:	9e af       	std	Y+62, r25	; 0x3e
    456a:	8d af       	std	Y+61, r24	; 0x3d
    456c:	8d ad       	ldd	r24, Y+61	; 0x3d
    456e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4570:	9a af       	std	Y+58, r25	; 0x3a
    4572:	89 af       	std	Y+57, r24	; 0x39
    4574:	89 ad       	ldd	r24, Y+57	; 0x39
    4576:	9a ad       	ldd	r25, Y+58	; 0x3a
    4578:	01 97       	sbiw	r24, 0x01	; 1
    457a:	f1 f7       	brne	.-4      	; 0x4578 <HLCD_vInit+0x12c>
    457c:	9a af       	std	Y+58, r25	; 0x3a
    457e:	89 af       	std	Y+57, r24	; 0x39

	// wait for 30ms after VDD rises to 4.5V
	_delay_ms(30);

	// Function Set
	HLCD_vSendCommand(FUNCTION_SET);
    4580:	88 e3       	ldi	r24, 0x38	; 56
    4582:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    4586:	80 e0       	ldi	r24, 0x00	; 0
    4588:	90 e0       	ldi	r25, 0x00	; 0
    458a:	a0 e8       	ldi	r26, 0x80	; 128
    458c:	bf e3       	ldi	r27, 0x3F	; 63
    458e:	8d ab       	std	Y+53, r24	; 0x35
    4590:	9e ab       	std	Y+54, r25	; 0x36
    4592:	af ab       	std	Y+55, r26	; 0x37
    4594:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4596:	6d a9       	ldd	r22, Y+53	; 0x35
    4598:	7e a9       	ldd	r23, Y+54	; 0x36
    459a:	8f a9       	ldd	r24, Y+55	; 0x37
    459c:	98 ad       	ldd	r25, Y+56	; 0x38
    459e:	20 e0       	ldi	r18, 0x00	; 0
    45a0:	30 e8       	ldi	r19, 0x80	; 128
    45a2:	4b e3       	ldi	r20, 0x3B	; 59
    45a4:	55 e4       	ldi	r21, 0x45	; 69
    45a6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45aa:	dc 01       	movw	r26, r24
    45ac:	cb 01       	movw	r24, r22
    45ae:	89 ab       	std	Y+49, r24	; 0x31
    45b0:	9a ab       	std	Y+50, r25	; 0x32
    45b2:	ab ab       	std	Y+51, r26	; 0x33
    45b4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    45b6:	69 a9       	ldd	r22, Y+49	; 0x31
    45b8:	7a a9       	ldd	r23, Y+50	; 0x32
    45ba:	8b a9       	ldd	r24, Y+51	; 0x33
    45bc:	9c a9       	ldd	r25, Y+52	; 0x34
    45be:	20 e0       	ldi	r18, 0x00	; 0
    45c0:	30 e0       	ldi	r19, 0x00	; 0
    45c2:	40 e8       	ldi	r20, 0x80	; 128
    45c4:	5f e3       	ldi	r21, 0x3F	; 63
    45c6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    45ca:	88 23       	and	r24, r24
    45cc:	2c f4       	brge	.+10     	; 0x45d8 <HLCD_vInit+0x18c>
		__ticks = 1;
    45ce:	81 e0       	ldi	r24, 0x01	; 1
    45d0:	90 e0       	ldi	r25, 0x00	; 0
    45d2:	98 ab       	std	Y+48, r25	; 0x30
    45d4:	8f a7       	std	Y+47, r24	; 0x2f
    45d6:	3f c0       	rjmp	.+126    	; 0x4656 <HLCD_vInit+0x20a>
	else if (__tmp > 65535)
    45d8:	69 a9       	ldd	r22, Y+49	; 0x31
    45da:	7a a9       	ldd	r23, Y+50	; 0x32
    45dc:	8b a9       	ldd	r24, Y+51	; 0x33
    45de:	9c a9       	ldd	r25, Y+52	; 0x34
    45e0:	20 e0       	ldi	r18, 0x00	; 0
    45e2:	3f ef       	ldi	r19, 0xFF	; 255
    45e4:	4f e7       	ldi	r20, 0x7F	; 127
    45e6:	57 e4       	ldi	r21, 0x47	; 71
    45e8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    45ec:	18 16       	cp	r1, r24
    45ee:	4c f5       	brge	.+82     	; 0x4642 <HLCD_vInit+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45f0:	6d a9       	ldd	r22, Y+53	; 0x35
    45f2:	7e a9       	ldd	r23, Y+54	; 0x36
    45f4:	8f a9       	ldd	r24, Y+55	; 0x37
    45f6:	98 ad       	ldd	r25, Y+56	; 0x38
    45f8:	20 e0       	ldi	r18, 0x00	; 0
    45fa:	30 e0       	ldi	r19, 0x00	; 0
    45fc:	40 e2       	ldi	r20, 0x20	; 32
    45fe:	51 e4       	ldi	r21, 0x41	; 65
    4600:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4604:	dc 01       	movw	r26, r24
    4606:	cb 01       	movw	r24, r22
    4608:	bc 01       	movw	r22, r24
    460a:	cd 01       	movw	r24, r26
    460c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4610:	dc 01       	movw	r26, r24
    4612:	cb 01       	movw	r24, r22
    4614:	98 ab       	std	Y+48, r25	; 0x30
    4616:	8f a7       	std	Y+47, r24	; 0x2f
    4618:	0f c0       	rjmp	.+30     	; 0x4638 <HLCD_vInit+0x1ec>
    461a:	8c e2       	ldi	r24, 0x2C	; 44
    461c:	91 e0       	ldi	r25, 0x01	; 1
    461e:	9e a7       	std	Y+46, r25	; 0x2e
    4620:	8d a7       	std	Y+45, r24	; 0x2d
    4622:	8d a5       	ldd	r24, Y+45	; 0x2d
    4624:	9e a5       	ldd	r25, Y+46	; 0x2e
    4626:	01 97       	sbiw	r24, 0x01	; 1
    4628:	f1 f7       	brne	.-4      	; 0x4626 <HLCD_vInit+0x1da>
    462a:	9e a7       	std	Y+46, r25	; 0x2e
    462c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    462e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4630:	98 a9       	ldd	r25, Y+48	; 0x30
    4632:	01 97       	sbiw	r24, 0x01	; 1
    4634:	98 ab       	std	Y+48, r25	; 0x30
    4636:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4638:	8f a5       	ldd	r24, Y+47	; 0x2f
    463a:	98 a9       	ldd	r25, Y+48	; 0x30
    463c:	00 97       	sbiw	r24, 0x00	; 0
    463e:	69 f7       	brne	.-38     	; 0x461a <HLCD_vInit+0x1ce>
    4640:	14 c0       	rjmp	.+40     	; 0x466a <HLCD_vInit+0x21e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4642:	69 a9       	ldd	r22, Y+49	; 0x31
    4644:	7a a9       	ldd	r23, Y+50	; 0x32
    4646:	8b a9       	ldd	r24, Y+51	; 0x33
    4648:	9c a9       	ldd	r25, Y+52	; 0x34
    464a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    464e:	dc 01       	movw	r26, r24
    4650:	cb 01       	movw	r24, r22
    4652:	98 ab       	std	Y+48, r25	; 0x30
    4654:	8f a7       	std	Y+47, r24	; 0x2f
    4656:	8f a5       	ldd	r24, Y+47	; 0x2f
    4658:	98 a9       	ldd	r25, Y+48	; 0x30
    465a:	9c a7       	std	Y+44, r25	; 0x2c
    465c:	8b a7       	std	Y+43, r24	; 0x2b
    465e:	8b a5       	ldd	r24, Y+43	; 0x2b
    4660:	9c a5       	ldd	r25, Y+44	; 0x2c
    4662:	01 97       	sbiw	r24, 0x01	; 1
    4664:	f1 f7       	brne	.-4      	; 0x4662 <HLCD_vInit+0x216>
    4666:	9c a7       	std	Y+44, r25	; 0x2c
    4668:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	// Display On/Off
	HLCD_vSendCommand(DISPLAY_ON_OFF_CONTROL);
    466a:	8f e0       	ldi	r24, 0x0F	; 15
    466c:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    4670:	80 e0       	ldi	r24, 0x00	; 0
    4672:	90 e0       	ldi	r25, 0x00	; 0
    4674:	a0 e8       	ldi	r26, 0x80	; 128
    4676:	bf e3       	ldi	r27, 0x3F	; 63
    4678:	8f a3       	std	Y+39, r24	; 0x27
    467a:	98 a7       	std	Y+40, r25	; 0x28
    467c:	a9 a7       	std	Y+41, r26	; 0x29
    467e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4680:	6f a1       	ldd	r22, Y+39	; 0x27
    4682:	78 a5       	ldd	r23, Y+40	; 0x28
    4684:	89 a5       	ldd	r24, Y+41	; 0x29
    4686:	9a a5       	ldd	r25, Y+42	; 0x2a
    4688:	20 e0       	ldi	r18, 0x00	; 0
    468a:	30 e8       	ldi	r19, 0x80	; 128
    468c:	4b e3       	ldi	r20, 0x3B	; 59
    468e:	55 e4       	ldi	r21, 0x45	; 69
    4690:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4694:	dc 01       	movw	r26, r24
    4696:	cb 01       	movw	r24, r22
    4698:	8b a3       	std	Y+35, r24	; 0x23
    469a:	9c a3       	std	Y+36, r25	; 0x24
    469c:	ad a3       	std	Y+37, r26	; 0x25
    469e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    46a0:	6b a1       	ldd	r22, Y+35	; 0x23
    46a2:	7c a1       	ldd	r23, Y+36	; 0x24
    46a4:	8d a1       	ldd	r24, Y+37	; 0x25
    46a6:	9e a1       	ldd	r25, Y+38	; 0x26
    46a8:	20 e0       	ldi	r18, 0x00	; 0
    46aa:	30 e0       	ldi	r19, 0x00	; 0
    46ac:	40 e8       	ldi	r20, 0x80	; 128
    46ae:	5f e3       	ldi	r21, 0x3F	; 63
    46b0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    46b4:	88 23       	and	r24, r24
    46b6:	2c f4       	brge	.+10     	; 0x46c2 <HLCD_vInit+0x276>
		__ticks = 1;
    46b8:	81 e0       	ldi	r24, 0x01	; 1
    46ba:	90 e0       	ldi	r25, 0x00	; 0
    46bc:	9a a3       	std	Y+34, r25	; 0x22
    46be:	89 a3       	std	Y+33, r24	; 0x21
    46c0:	3f c0       	rjmp	.+126    	; 0x4740 <HLCD_vInit+0x2f4>
	else if (__tmp > 65535)
    46c2:	6b a1       	ldd	r22, Y+35	; 0x23
    46c4:	7c a1       	ldd	r23, Y+36	; 0x24
    46c6:	8d a1       	ldd	r24, Y+37	; 0x25
    46c8:	9e a1       	ldd	r25, Y+38	; 0x26
    46ca:	20 e0       	ldi	r18, 0x00	; 0
    46cc:	3f ef       	ldi	r19, 0xFF	; 255
    46ce:	4f e7       	ldi	r20, 0x7F	; 127
    46d0:	57 e4       	ldi	r21, 0x47	; 71
    46d2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    46d6:	18 16       	cp	r1, r24
    46d8:	4c f5       	brge	.+82     	; 0x472c <HLCD_vInit+0x2e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46da:	6f a1       	ldd	r22, Y+39	; 0x27
    46dc:	78 a5       	ldd	r23, Y+40	; 0x28
    46de:	89 a5       	ldd	r24, Y+41	; 0x29
    46e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    46e2:	20 e0       	ldi	r18, 0x00	; 0
    46e4:	30 e0       	ldi	r19, 0x00	; 0
    46e6:	40 e2       	ldi	r20, 0x20	; 32
    46e8:	51 e4       	ldi	r21, 0x41	; 65
    46ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    46ee:	dc 01       	movw	r26, r24
    46f0:	cb 01       	movw	r24, r22
    46f2:	bc 01       	movw	r22, r24
    46f4:	cd 01       	movw	r24, r26
    46f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    46fa:	dc 01       	movw	r26, r24
    46fc:	cb 01       	movw	r24, r22
    46fe:	9a a3       	std	Y+34, r25	; 0x22
    4700:	89 a3       	std	Y+33, r24	; 0x21
    4702:	0f c0       	rjmp	.+30     	; 0x4722 <HLCD_vInit+0x2d6>
    4704:	8c e2       	ldi	r24, 0x2C	; 44
    4706:	91 e0       	ldi	r25, 0x01	; 1
    4708:	98 a3       	std	Y+32, r25	; 0x20
    470a:	8f 8f       	std	Y+31, r24	; 0x1f
    470c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    470e:	98 a1       	ldd	r25, Y+32	; 0x20
    4710:	01 97       	sbiw	r24, 0x01	; 1
    4712:	f1 f7       	brne	.-4      	; 0x4710 <HLCD_vInit+0x2c4>
    4714:	98 a3       	std	Y+32, r25	; 0x20
    4716:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4718:	89 a1       	ldd	r24, Y+33	; 0x21
    471a:	9a a1       	ldd	r25, Y+34	; 0x22
    471c:	01 97       	sbiw	r24, 0x01	; 1
    471e:	9a a3       	std	Y+34, r25	; 0x22
    4720:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4722:	89 a1       	ldd	r24, Y+33	; 0x21
    4724:	9a a1       	ldd	r25, Y+34	; 0x22
    4726:	00 97       	sbiw	r24, 0x00	; 0
    4728:	69 f7       	brne	.-38     	; 0x4704 <HLCD_vInit+0x2b8>
    472a:	14 c0       	rjmp	.+40     	; 0x4754 <HLCD_vInit+0x308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    472c:	6b a1       	ldd	r22, Y+35	; 0x23
    472e:	7c a1       	ldd	r23, Y+36	; 0x24
    4730:	8d a1       	ldd	r24, Y+37	; 0x25
    4732:	9e a1       	ldd	r25, Y+38	; 0x26
    4734:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4738:	dc 01       	movw	r26, r24
    473a:	cb 01       	movw	r24, r22
    473c:	9a a3       	std	Y+34, r25	; 0x22
    473e:	89 a3       	std	Y+33, r24	; 0x21
    4740:	89 a1       	ldd	r24, Y+33	; 0x21
    4742:	9a a1       	ldd	r25, Y+34	; 0x22
    4744:	9e 8f       	std	Y+30, r25	; 0x1e
    4746:	8d 8f       	std	Y+29, r24	; 0x1d
    4748:	8d 8d       	ldd	r24, Y+29	; 0x1d
    474a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    474c:	01 97       	sbiw	r24, 0x01	; 1
    474e:	f1 f7       	brne	.-4      	; 0x474c <HLCD_vInit+0x300>
    4750:	9e 8f       	std	Y+30, r25	; 0x1e
    4752:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	// Display Clear
	HLCD_vSendCommand(DISPLAY_CLEAR);
    4754:	81 e0       	ldi	r24, 0x01	; 1
    4756:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    475a:	80 e0       	ldi	r24, 0x00	; 0
    475c:	90 e0       	ldi	r25, 0x00	; 0
    475e:	a0 e0       	ldi	r26, 0x00	; 0
    4760:	b0 e4       	ldi	r27, 0x40	; 64
    4762:	89 8f       	std	Y+25, r24	; 0x19
    4764:	9a 8f       	std	Y+26, r25	; 0x1a
    4766:	ab 8f       	std	Y+27, r26	; 0x1b
    4768:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    476a:	69 8d       	ldd	r22, Y+25	; 0x19
    476c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    476e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4770:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4772:	20 e0       	ldi	r18, 0x00	; 0
    4774:	30 e8       	ldi	r19, 0x80	; 128
    4776:	4b e3       	ldi	r20, 0x3B	; 59
    4778:	55 e4       	ldi	r21, 0x45	; 69
    477a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    477e:	dc 01       	movw	r26, r24
    4780:	cb 01       	movw	r24, r22
    4782:	8d 8b       	std	Y+21, r24	; 0x15
    4784:	9e 8b       	std	Y+22, r25	; 0x16
    4786:	af 8b       	std	Y+23, r26	; 0x17
    4788:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    478a:	6d 89       	ldd	r22, Y+21	; 0x15
    478c:	7e 89       	ldd	r23, Y+22	; 0x16
    478e:	8f 89       	ldd	r24, Y+23	; 0x17
    4790:	98 8d       	ldd	r25, Y+24	; 0x18
    4792:	20 e0       	ldi	r18, 0x00	; 0
    4794:	30 e0       	ldi	r19, 0x00	; 0
    4796:	40 e8       	ldi	r20, 0x80	; 128
    4798:	5f e3       	ldi	r21, 0x3F	; 63
    479a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    479e:	88 23       	and	r24, r24
    47a0:	2c f4       	brge	.+10     	; 0x47ac <HLCD_vInit+0x360>
		__ticks = 1;
    47a2:	81 e0       	ldi	r24, 0x01	; 1
    47a4:	90 e0       	ldi	r25, 0x00	; 0
    47a6:	9c 8b       	std	Y+20, r25	; 0x14
    47a8:	8b 8b       	std	Y+19, r24	; 0x13
    47aa:	3f c0       	rjmp	.+126    	; 0x482a <HLCD_vInit+0x3de>
	else if (__tmp > 65535)
    47ac:	6d 89       	ldd	r22, Y+21	; 0x15
    47ae:	7e 89       	ldd	r23, Y+22	; 0x16
    47b0:	8f 89       	ldd	r24, Y+23	; 0x17
    47b2:	98 8d       	ldd	r25, Y+24	; 0x18
    47b4:	20 e0       	ldi	r18, 0x00	; 0
    47b6:	3f ef       	ldi	r19, 0xFF	; 255
    47b8:	4f e7       	ldi	r20, 0x7F	; 127
    47ba:	57 e4       	ldi	r21, 0x47	; 71
    47bc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    47c0:	18 16       	cp	r1, r24
    47c2:	4c f5       	brge	.+82     	; 0x4816 <HLCD_vInit+0x3ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47c4:	69 8d       	ldd	r22, Y+25	; 0x19
    47c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    47c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    47ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    47cc:	20 e0       	ldi	r18, 0x00	; 0
    47ce:	30 e0       	ldi	r19, 0x00	; 0
    47d0:	40 e2       	ldi	r20, 0x20	; 32
    47d2:	51 e4       	ldi	r21, 0x41	; 65
    47d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    47d8:	dc 01       	movw	r26, r24
    47da:	cb 01       	movw	r24, r22
    47dc:	bc 01       	movw	r22, r24
    47de:	cd 01       	movw	r24, r26
    47e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47e4:	dc 01       	movw	r26, r24
    47e6:	cb 01       	movw	r24, r22
    47e8:	9c 8b       	std	Y+20, r25	; 0x14
    47ea:	8b 8b       	std	Y+19, r24	; 0x13
    47ec:	0f c0       	rjmp	.+30     	; 0x480c <HLCD_vInit+0x3c0>
    47ee:	8c e2       	ldi	r24, 0x2C	; 44
    47f0:	91 e0       	ldi	r25, 0x01	; 1
    47f2:	9a 8b       	std	Y+18, r25	; 0x12
    47f4:	89 8b       	std	Y+17, r24	; 0x11
    47f6:	89 89       	ldd	r24, Y+17	; 0x11
    47f8:	9a 89       	ldd	r25, Y+18	; 0x12
    47fa:	01 97       	sbiw	r24, 0x01	; 1
    47fc:	f1 f7       	brne	.-4      	; 0x47fa <HLCD_vInit+0x3ae>
    47fe:	9a 8b       	std	Y+18, r25	; 0x12
    4800:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4802:	8b 89       	ldd	r24, Y+19	; 0x13
    4804:	9c 89       	ldd	r25, Y+20	; 0x14
    4806:	01 97       	sbiw	r24, 0x01	; 1
    4808:	9c 8b       	std	Y+20, r25	; 0x14
    480a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    480c:	8b 89       	ldd	r24, Y+19	; 0x13
    480e:	9c 89       	ldd	r25, Y+20	; 0x14
    4810:	00 97       	sbiw	r24, 0x00	; 0
    4812:	69 f7       	brne	.-38     	; 0x47ee <HLCD_vInit+0x3a2>
    4814:	14 c0       	rjmp	.+40     	; 0x483e <HLCD_vInit+0x3f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4816:	6d 89       	ldd	r22, Y+21	; 0x15
    4818:	7e 89       	ldd	r23, Y+22	; 0x16
    481a:	8f 89       	ldd	r24, Y+23	; 0x17
    481c:	98 8d       	ldd	r25, Y+24	; 0x18
    481e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4822:	dc 01       	movw	r26, r24
    4824:	cb 01       	movw	r24, r22
    4826:	9c 8b       	std	Y+20, r25	; 0x14
    4828:	8b 8b       	std	Y+19, r24	; 0x13
    482a:	8b 89       	ldd	r24, Y+19	; 0x13
    482c:	9c 89       	ldd	r25, Y+20	; 0x14
    482e:	98 8b       	std	Y+16, r25	; 0x10
    4830:	8f 87       	std	Y+15, r24	; 0x0f
    4832:	8f 85       	ldd	r24, Y+15	; 0x0f
    4834:	98 89       	ldd	r25, Y+16	; 0x10
    4836:	01 97       	sbiw	r24, 0x01	; 1
    4838:	f1 f7       	brne	.-4      	; 0x4836 <HLCD_vInit+0x3ea>
    483a:	98 8b       	std	Y+16, r25	; 0x10
    483c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);


	// Entry Mode Set
	HLCD_vSendCommand(ENTRY_MODE_SET);
    483e:	86 e0       	ldi	r24, 0x06	; 6
    4840:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    4844:	80 e0       	ldi	r24, 0x00	; 0
    4846:	90 e0       	ldi	r25, 0x00	; 0
    4848:	a0 e8       	ldi	r26, 0x80	; 128
    484a:	bf e3       	ldi	r27, 0x3F	; 63
    484c:	8b 87       	std	Y+11, r24	; 0x0b
    484e:	9c 87       	std	Y+12, r25	; 0x0c
    4850:	ad 87       	std	Y+13, r26	; 0x0d
    4852:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4854:	6b 85       	ldd	r22, Y+11	; 0x0b
    4856:	7c 85       	ldd	r23, Y+12	; 0x0c
    4858:	8d 85       	ldd	r24, Y+13	; 0x0d
    485a:	9e 85       	ldd	r25, Y+14	; 0x0e
    485c:	20 e0       	ldi	r18, 0x00	; 0
    485e:	30 e8       	ldi	r19, 0x80	; 128
    4860:	4b e3       	ldi	r20, 0x3B	; 59
    4862:	55 e4       	ldi	r21, 0x45	; 69
    4864:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4868:	dc 01       	movw	r26, r24
    486a:	cb 01       	movw	r24, r22
    486c:	8f 83       	std	Y+7, r24	; 0x07
    486e:	98 87       	std	Y+8, r25	; 0x08
    4870:	a9 87       	std	Y+9, r26	; 0x09
    4872:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4874:	6f 81       	ldd	r22, Y+7	; 0x07
    4876:	78 85       	ldd	r23, Y+8	; 0x08
    4878:	89 85       	ldd	r24, Y+9	; 0x09
    487a:	9a 85       	ldd	r25, Y+10	; 0x0a
    487c:	20 e0       	ldi	r18, 0x00	; 0
    487e:	30 e0       	ldi	r19, 0x00	; 0
    4880:	40 e8       	ldi	r20, 0x80	; 128
    4882:	5f e3       	ldi	r21, 0x3F	; 63
    4884:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4888:	88 23       	and	r24, r24
    488a:	2c f4       	brge	.+10     	; 0x4896 <HLCD_vInit+0x44a>
		__ticks = 1;
    488c:	81 e0       	ldi	r24, 0x01	; 1
    488e:	90 e0       	ldi	r25, 0x00	; 0
    4890:	9e 83       	std	Y+6, r25	; 0x06
    4892:	8d 83       	std	Y+5, r24	; 0x05
    4894:	3f c0       	rjmp	.+126    	; 0x4914 <HLCD_vInit+0x4c8>
	else if (__tmp > 65535)
    4896:	6f 81       	ldd	r22, Y+7	; 0x07
    4898:	78 85       	ldd	r23, Y+8	; 0x08
    489a:	89 85       	ldd	r24, Y+9	; 0x09
    489c:	9a 85       	ldd	r25, Y+10	; 0x0a
    489e:	20 e0       	ldi	r18, 0x00	; 0
    48a0:	3f ef       	ldi	r19, 0xFF	; 255
    48a2:	4f e7       	ldi	r20, 0x7F	; 127
    48a4:	57 e4       	ldi	r21, 0x47	; 71
    48a6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    48aa:	18 16       	cp	r1, r24
    48ac:	4c f5       	brge	.+82     	; 0x4900 <HLCD_vInit+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    48b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    48b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    48b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    48b6:	20 e0       	ldi	r18, 0x00	; 0
    48b8:	30 e0       	ldi	r19, 0x00	; 0
    48ba:	40 e2       	ldi	r20, 0x20	; 32
    48bc:	51 e4       	ldi	r21, 0x41	; 65
    48be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    48c2:	dc 01       	movw	r26, r24
    48c4:	cb 01       	movw	r24, r22
    48c6:	bc 01       	movw	r22, r24
    48c8:	cd 01       	movw	r24, r26
    48ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48ce:	dc 01       	movw	r26, r24
    48d0:	cb 01       	movw	r24, r22
    48d2:	9e 83       	std	Y+6, r25	; 0x06
    48d4:	8d 83       	std	Y+5, r24	; 0x05
    48d6:	0f c0       	rjmp	.+30     	; 0x48f6 <HLCD_vInit+0x4aa>
    48d8:	8c e2       	ldi	r24, 0x2C	; 44
    48da:	91 e0       	ldi	r25, 0x01	; 1
    48dc:	9c 83       	std	Y+4, r25	; 0x04
    48de:	8b 83       	std	Y+3, r24	; 0x03
    48e0:	8b 81       	ldd	r24, Y+3	; 0x03
    48e2:	9c 81       	ldd	r25, Y+4	; 0x04
    48e4:	01 97       	sbiw	r24, 0x01	; 1
    48e6:	f1 f7       	brne	.-4      	; 0x48e4 <HLCD_vInit+0x498>
    48e8:	9c 83       	std	Y+4, r25	; 0x04
    48ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48ec:	8d 81       	ldd	r24, Y+5	; 0x05
    48ee:	9e 81       	ldd	r25, Y+6	; 0x06
    48f0:	01 97       	sbiw	r24, 0x01	; 1
    48f2:	9e 83       	std	Y+6, r25	; 0x06
    48f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48f6:	8d 81       	ldd	r24, Y+5	; 0x05
    48f8:	9e 81       	ldd	r25, Y+6	; 0x06
    48fa:	00 97       	sbiw	r24, 0x00	; 0
    48fc:	69 f7       	brne	.-38     	; 0x48d8 <HLCD_vInit+0x48c>
    48fe:	14 c0       	rjmp	.+40     	; 0x4928 <HLCD_vInit+0x4dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4900:	6f 81       	ldd	r22, Y+7	; 0x07
    4902:	78 85       	ldd	r23, Y+8	; 0x08
    4904:	89 85       	ldd	r24, Y+9	; 0x09
    4906:	9a 85       	ldd	r25, Y+10	; 0x0a
    4908:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    490c:	dc 01       	movw	r26, r24
    490e:	cb 01       	movw	r24, r22
    4910:	9e 83       	std	Y+6, r25	; 0x06
    4912:	8d 83       	std	Y+5, r24	; 0x05
    4914:	8d 81       	ldd	r24, Y+5	; 0x05
    4916:	9e 81       	ldd	r25, Y+6	; 0x06
    4918:	9a 83       	std	Y+2, r25	; 0x02
    491a:	89 83       	std	Y+1, r24	; 0x01
    491c:	89 81       	ldd	r24, Y+1	; 0x01
    491e:	9a 81       	ldd	r25, Y+2	; 0x02
    4920:	01 97       	sbiw	r24, 0x01	; 1
    4922:	f1 f7       	brne	.-4      	; 0x4920 <HLCD_vInit+0x4d4>
    4924:	9a 83       	std	Y+2, r25	; 0x02
    4926:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    4928:	ca 5b       	subi	r28, 0xBA	; 186
    492a:	df 4f       	sbci	r29, 0xFF	; 255
    492c:	0f b6       	in	r0, 0x3f	; 63
    492e:	f8 94       	cli
    4930:	de bf       	out	0x3e, r29	; 62
    4932:	0f be       	out	0x3f, r0	; 63
    4934:	cd bf       	out	0x3d, r28	; 61
    4936:	cf 91       	pop	r28
    4938:	df 91       	pop	r29
    493a:	1f 91       	pop	r17
    493c:	0f 91       	pop	r16
    493e:	08 95       	ret

00004940 <HLCD_vClearDisplay>:

void HLCD_vClearDisplay(void)
{
    4940:	df 93       	push	r29
    4942:	cf 93       	push	r28
    4944:	cd b7       	in	r28, 0x3d	; 61
    4946:	de b7       	in	r29, 0x3e	; 62
    4948:	2e 97       	sbiw	r28, 0x0e	; 14
    494a:	0f b6       	in	r0, 0x3f	; 63
    494c:	f8 94       	cli
    494e:	de bf       	out	0x3e, r29	; 62
    4950:	0f be       	out	0x3f, r0	; 63
    4952:	cd bf       	out	0x3d, r28	; 61
	HLCD_vSendCommand(DISPLAY_CLEAR);
    4954:	81 e0       	ldi	r24, 0x01	; 1
    4956:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    495a:	80 e0       	ldi	r24, 0x00	; 0
    495c:	90 e0       	ldi	r25, 0x00	; 0
    495e:	a0 e4       	ldi	r26, 0x40	; 64
    4960:	b0 e4       	ldi	r27, 0x40	; 64
    4962:	8b 87       	std	Y+11, r24	; 0x0b
    4964:	9c 87       	std	Y+12, r25	; 0x0c
    4966:	ad 87       	std	Y+13, r26	; 0x0d
    4968:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    496a:	6b 85       	ldd	r22, Y+11	; 0x0b
    496c:	7c 85       	ldd	r23, Y+12	; 0x0c
    496e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4970:	9e 85       	ldd	r25, Y+14	; 0x0e
    4972:	20 e0       	ldi	r18, 0x00	; 0
    4974:	30 e8       	ldi	r19, 0x80	; 128
    4976:	4b e3       	ldi	r20, 0x3B	; 59
    4978:	55 e4       	ldi	r21, 0x45	; 69
    497a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    497e:	dc 01       	movw	r26, r24
    4980:	cb 01       	movw	r24, r22
    4982:	8f 83       	std	Y+7, r24	; 0x07
    4984:	98 87       	std	Y+8, r25	; 0x08
    4986:	a9 87       	std	Y+9, r26	; 0x09
    4988:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    498a:	6f 81       	ldd	r22, Y+7	; 0x07
    498c:	78 85       	ldd	r23, Y+8	; 0x08
    498e:	89 85       	ldd	r24, Y+9	; 0x09
    4990:	9a 85       	ldd	r25, Y+10	; 0x0a
    4992:	20 e0       	ldi	r18, 0x00	; 0
    4994:	30 e0       	ldi	r19, 0x00	; 0
    4996:	40 e8       	ldi	r20, 0x80	; 128
    4998:	5f e3       	ldi	r21, 0x3F	; 63
    499a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    499e:	88 23       	and	r24, r24
    49a0:	2c f4       	brge	.+10     	; 0x49ac <HLCD_vClearDisplay+0x6c>
		__ticks = 1;
    49a2:	81 e0       	ldi	r24, 0x01	; 1
    49a4:	90 e0       	ldi	r25, 0x00	; 0
    49a6:	9e 83       	std	Y+6, r25	; 0x06
    49a8:	8d 83       	std	Y+5, r24	; 0x05
    49aa:	3f c0       	rjmp	.+126    	; 0x4a2a <HLCD_vClearDisplay+0xea>
	else if (__tmp > 65535)
    49ac:	6f 81       	ldd	r22, Y+7	; 0x07
    49ae:	78 85       	ldd	r23, Y+8	; 0x08
    49b0:	89 85       	ldd	r24, Y+9	; 0x09
    49b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    49b4:	20 e0       	ldi	r18, 0x00	; 0
    49b6:	3f ef       	ldi	r19, 0xFF	; 255
    49b8:	4f e7       	ldi	r20, 0x7F	; 127
    49ba:	57 e4       	ldi	r21, 0x47	; 71
    49bc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    49c0:	18 16       	cp	r1, r24
    49c2:	4c f5       	brge	.+82     	; 0x4a16 <HLCD_vClearDisplay+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    49c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    49c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    49ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    49cc:	20 e0       	ldi	r18, 0x00	; 0
    49ce:	30 e0       	ldi	r19, 0x00	; 0
    49d0:	40 e2       	ldi	r20, 0x20	; 32
    49d2:	51 e4       	ldi	r21, 0x41	; 65
    49d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    49d8:	dc 01       	movw	r26, r24
    49da:	cb 01       	movw	r24, r22
    49dc:	bc 01       	movw	r22, r24
    49de:	cd 01       	movw	r24, r26
    49e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49e4:	dc 01       	movw	r26, r24
    49e6:	cb 01       	movw	r24, r22
    49e8:	9e 83       	std	Y+6, r25	; 0x06
    49ea:	8d 83       	std	Y+5, r24	; 0x05
    49ec:	0f c0       	rjmp	.+30     	; 0x4a0c <HLCD_vClearDisplay+0xcc>
    49ee:	8c e2       	ldi	r24, 0x2C	; 44
    49f0:	91 e0       	ldi	r25, 0x01	; 1
    49f2:	9c 83       	std	Y+4, r25	; 0x04
    49f4:	8b 83       	std	Y+3, r24	; 0x03
    49f6:	8b 81       	ldd	r24, Y+3	; 0x03
    49f8:	9c 81       	ldd	r25, Y+4	; 0x04
    49fa:	01 97       	sbiw	r24, 0x01	; 1
    49fc:	f1 f7       	brne	.-4      	; 0x49fa <HLCD_vClearDisplay+0xba>
    49fe:	9c 83       	std	Y+4, r25	; 0x04
    4a00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a02:	8d 81       	ldd	r24, Y+5	; 0x05
    4a04:	9e 81       	ldd	r25, Y+6	; 0x06
    4a06:	01 97       	sbiw	r24, 0x01	; 1
    4a08:	9e 83       	std	Y+6, r25	; 0x06
    4a0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a0c:	8d 81       	ldd	r24, Y+5	; 0x05
    4a0e:	9e 81       	ldd	r25, Y+6	; 0x06
    4a10:	00 97       	sbiw	r24, 0x00	; 0
    4a12:	69 f7       	brne	.-38     	; 0x49ee <HLCD_vClearDisplay+0xae>
    4a14:	14 c0       	rjmp	.+40     	; 0x4a3e <HLCD_vClearDisplay+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a16:	6f 81       	ldd	r22, Y+7	; 0x07
    4a18:	78 85       	ldd	r23, Y+8	; 0x08
    4a1a:	89 85       	ldd	r24, Y+9	; 0x09
    4a1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a22:	dc 01       	movw	r26, r24
    4a24:	cb 01       	movw	r24, r22
    4a26:	9e 83       	std	Y+6, r25	; 0x06
    4a28:	8d 83       	std	Y+5, r24	; 0x05
    4a2a:	8d 81       	ldd	r24, Y+5	; 0x05
    4a2c:	9e 81       	ldd	r25, Y+6	; 0x06
    4a2e:	9a 83       	std	Y+2, r25	; 0x02
    4a30:	89 83       	std	Y+1, r24	; 0x01
    4a32:	89 81       	ldd	r24, Y+1	; 0x01
    4a34:	9a 81       	ldd	r25, Y+2	; 0x02
    4a36:	01 97       	sbiw	r24, 0x01	; 1
    4a38:	f1 f7       	brne	.-4      	; 0x4a36 <HLCD_vClearDisplay+0xf6>
    4a3a:	9a 83       	std	Y+2, r25	; 0x02
    4a3c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(3);
}
    4a3e:	2e 96       	adiw	r28, 0x0e	; 14
    4a40:	0f b6       	in	r0, 0x3f	; 63
    4a42:	f8 94       	cli
    4a44:	de bf       	out	0x3e, r29	; 62
    4a46:	0f be       	out	0x3f, r0	; 63
    4a48:	cd bf       	out	0x3d, r28	; 61
    4a4a:	cf 91       	pop	r28
    4a4c:	df 91       	pop	r29
    4a4e:	08 95       	ret

00004a50 <HLCD_vDisplayLongString>:

void HLCD_vDisplayLongString(const u8 *A_u8PtrToString)
{
    4a50:	df 93       	push	r29
    4a52:	cf 93       	push	r28
    4a54:	00 d0       	rcall	.+0      	; 0x4a56 <HLCD_vDisplayLongString+0x6>
    4a56:	00 d0       	rcall	.+0      	; 0x4a58 <HLCD_vDisplayLongString+0x8>
    4a58:	cd b7       	in	r28, 0x3d	; 61
    4a5a:	de b7       	in	r29, 0x3e	; 62
    4a5c:	9c 83       	std	Y+4, r25	; 0x04
    4a5e:	8b 83       	std	Y+3, r24	; 0x03
	u8 ROW = LCD_ROW1 , COL =LCD_COL1;
    4a60:	81 e0       	ldi	r24, 0x01	; 1
    4a62:	8a 83       	std	Y+2, r24	; 0x02
    4a64:	81 e0       	ldi	r24, 0x01	; 1
    4a66:	89 83       	std	Y+1, r24	; 0x01
    4a68:	1b c0       	rjmp	.+54     	; 0x4aa0 <HLCD_vDisplayLongString+0x50>
	while(*A_u8PtrToString > 0)
	{
		if(COL > LCD_COL16 && ROW == LCD_ROW1)
    4a6a:	89 81       	ldd	r24, Y+1	; 0x01
    4a6c:	81 31       	cpi	r24, 0x11	; 17
    4a6e:	38 f0       	brcs	.+14     	; 0x4a7e <HLCD_vDisplayLongString+0x2e>
    4a70:	8a 81       	ldd	r24, Y+2	; 0x02
    4a72:	81 30       	cpi	r24, 0x01	; 1
    4a74:	21 f4       	brne	.+8      	; 0x4a7e <HLCD_vDisplayLongString+0x2e>
		{
			ROW = LCD_ROW2;
    4a76:	82 e0       	ldi	r24, 0x02	; 2
    4a78:	8a 83       	std	Y+2, r24	; 0x02
			COL = LCD_COL1;
    4a7a:	81 e0       	ldi	r24, 0x01	; 1
    4a7c:	89 83       	std	Y+1, r24	; 0x01
		}
		HLCD_vGoToPos(ROW , COL);
    4a7e:	8a 81       	ldd	r24, Y+2	; 0x02
    4a80:	69 81       	ldd	r22, Y+1	; 0x01
    4a82:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>
		HLCD_vSendData(*A_u8PtrToString);
    4a86:	eb 81       	ldd	r30, Y+3	; 0x03
    4a88:	fc 81       	ldd	r31, Y+4	; 0x04
    4a8a:	80 81       	ld	r24, Z
    4a8c:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>
		COL++;
    4a90:	89 81       	ldd	r24, Y+1	; 0x01
    4a92:	8f 5f       	subi	r24, 0xFF	; 255
    4a94:	89 83       	std	Y+1, r24	; 0x01
		*A_u8PtrToString++;
    4a96:	8b 81       	ldd	r24, Y+3	; 0x03
    4a98:	9c 81       	ldd	r25, Y+4	; 0x04
    4a9a:	01 96       	adiw	r24, 0x01	; 1
    4a9c:	9c 83       	std	Y+4, r25	; 0x04
    4a9e:	8b 83       	std	Y+3, r24	; 0x03
}

void HLCD_vDisplayLongString(const u8 *A_u8PtrToString)
{
	u8 ROW = LCD_ROW1 , COL =LCD_COL1;
	while(*A_u8PtrToString > 0)
    4aa0:	eb 81       	ldd	r30, Y+3	; 0x03
    4aa2:	fc 81       	ldd	r31, Y+4	; 0x04
    4aa4:	80 81       	ld	r24, Z
    4aa6:	88 23       	and	r24, r24
    4aa8:	01 f7       	brne	.-64     	; 0x4a6a <HLCD_vDisplayLongString+0x1a>
		HLCD_vGoToPos(ROW , COL);
		HLCD_vSendData(*A_u8PtrToString);
		COL++;
		*A_u8PtrToString++;
	}
}
    4aaa:	0f 90       	pop	r0
    4aac:	0f 90       	pop	r0
    4aae:	0f 90       	pop	r0
    4ab0:	0f 90       	pop	r0
    4ab2:	cf 91       	pop	r28
    4ab4:	df 91       	pop	r29
    4ab6:	08 95       	ret

00004ab8 <HLCD_vDisplayString>:

void HLCD_vDisplayString(const u8 *A_u8PtrToString)
{
    4ab8:	df 93       	push	r29
    4aba:	cf 93       	push	r28
    4abc:	00 d0       	rcall	.+0      	; 0x4abe <HLCD_vDisplayString+0x6>
    4abe:	cd b7       	in	r28, 0x3d	; 61
    4ac0:	de b7       	in	r29, 0x3e	; 62
    4ac2:	9a 83       	std	Y+2, r25	; 0x02
    4ac4:	89 83       	std	Y+1, r24	; 0x01
    4ac6:	0a c0       	rjmp	.+20     	; 0x4adc <HLCD_vDisplayString+0x24>
	while(*A_u8PtrToString > 0)
	{
		HLCD_vSendData(*A_u8PtrToString);
    4ac8:	e9 81       	ldd	r30, Y+1	; 0x01
    4aca:	fa 81       	ldd	r31, Y+2	; 0x02
    4acc:	80 81       	ld	r24, Z
    4ace:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>
		A_u8PtrToString++;
    4ad2:	89 81       	ldd	r24, Y+1	; 0x01
    4ad4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ad6:	01 96       	adiw	r24, 0x01	; 1
    4ad8:	9a 83       	std	Y+2, r25	; 0x02
    4ada:	89 83       	std	Y+1, r24	; 0x01
	}
}

void HLCD_vDisplayString(const u8 *A_u8PtrToString)
{
	while(*A_u8PtrToString > 0)
    4adc:	e9 81       	ldd	r30, Y+1	; 0x01
    4ade:	fa 81       	ldd	r31, Y+2	; 0x02
    4ae0:	80 81       	ld	r24, Z
    4ae2:	88 23       	and	r24, r24
    4ae4:	89 f7       	brne	.-30     	; 0x4ac8 <HLCD_vDisplayString+0x10>
	{
		HLCD_vSendData(*A_u8PtrToString);
		A_u8PtrToString++;

	}
}
    4ae6:	0f 90       	pop	r0
    4ae8:	0f 90       	pop	r0
    4aea:	cf 91       	pop	r28
    4aec:	df 91       	pop	r29
    4aee:	08 95       	ret

00004af0 <HLCD_vGoToPos>:

void HLCD_vGoToPos(LCD_ROW_e A_LCDRow ,LCD_COL_e A_LCDCol)
{
    4af0:	df 93       	push	r29
    4af2:	cf 93       	push	r28
    4af4:	00 d0       	rcall	.+0      	; 0x4af6 <HLCD_vGoToPos+0x6>
    4af6:	00 d0       	rcall	.+0      	; 0x4af8 <HLCD_vGoToPos+0x8>
    4af8:	cd b7       	in	r28, 0x3d	; 61
    4afa:	de b7       	in	r29, 0x3e	; 62
    4afc:	89 83       	std	Y+1, r24	; 0x01
    4afe:	6a 83       	std	Y+2, r22	; 0x02
	switch (A_LCDRow)
    4b00:	89 81       	ldd	r24, Y+1	; 0x01
    4b02:	28 2f       	mov	r18, r24
    4b04:	30 e0       	ldi	r19, 0x00	; 0
    4b06:	3c 83       	std	Y+4, r19	; 0x04
    4b08:	2b 83       	std	Y+3, r18	; 0x03
    4b0a:	8b 81       	ldd	r24, Y+3	; 0x03
    4b0c:	9c 81       	ldd	r25, Y+4	; 0x04
    4b0e:	81 30       	cpi	r24, 0x01	; 1
    4b10:	91 05       	cpc	r25, r1
    4b12:	31 f0       	breq	.+12     	; 0x4b20 <HLCD_vGoToPos+0x30>
    4b14:	2b 81       	ldd	r18, Y+3	; 0x03
    4b16:	3c 81       	ldd	r19, Y+4	; 0x04
    4b18:	22 30       	cpi	r18, 0x02	; 2
    4b1a:	31 05       	cpc	r19, r1
    4b1c:	31 f0       	breq	.+12     	; 0x4b2a <HLCD_vGoToPos+0x3a>
    4b1e:	09 c0       	rjmp	.+18     	; 0x4b32 <HLCD_vGoToPos+0x42>
	{
		case LCD_ROW1:
			HLCD_vSendCommand(LCD_ROW1_BASE_ADD + A_LCDCol);
    4b20:	8a 81       	ldd	r24, Y+2	; 0x02
    4b22:	81 58       	subi	r24, 0x81	; 129
    4b24:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
    4b28:	04 c0       	rjmp	.+8      	; 0x4b32 <HLCD_vGoToPos+0x42>
			break;
		case LCD_ROW2:
			HLCD_vSendCommand(LCD_ROW2_BASE_ADD + A_LCDCol);
    4b2a:	8a 81       	ldd	r24, Y+2	; 0x02
    4b2c:	81 54       	subi	r24, 0x41	; 65
    4b2e:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>
			break;
	}
}
    4b32:	0f 90       	pop	r0
    4b34:	0f 90       	pop	r0
    4b36:	0f 90       	pop	r0
    4b38:	0f 90       	pop	r0
    4b3a:	cf 91       	pop	r28
    4b3c:	df 91       	pop	r29
    4b3e:	08 95       	ret

00004b40 <HLCD_vDisplayNumber>:

void HLCD_vDisplayNumber(u32 A_u32Number)
{
    4b40:	df 93       	push	r29
    4b42:	cf 93       	push	r28
    4b44:	00 d0       	rcall	.+0      	; 0x4b46 <HLCD_vDisplayNumber+0x6>
    4b46:	00 d0       	rcall	.+0      	; 0x4b48 <HLCD_vDisplayNumber+0x8>
    4b48:	cd b7       	in	r28, 0x3d	; 61
    4b4a:	de b7       	in	r29, 0x3e	; 62
    4b4c:	9c 83       	std	Y+4, r25	; 0x04
    4b4e:	8b 83       	std	Y+3, r24	; 0x03
	u32 ReversedNum = 1;
    4b50:	81 e0       	ldi	r24, 0x01	; 1
    4b52:	90 e0       	ldi	r25, 0x00	; 0
    4b54:	9a 83       	std	Y+2, r25	; 0x02
    4b56:	89 83       	std	Y+1, r24	; 0x01
	if(A_u32Number == 0)
    4b58:	8b 81       	ldd	r24, Y+3	; 0x03
    4b5a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b5c:	00 97       	sbiw	r24, 0x00	; 0
    4b5e:	31 f5       	brne	.+76     	; 0x4bac <HLCD_vDisplayNumber+0x6c>
	{
		HLCD_vSendData('0');
    4b60:	80 e3       	ldi	r24, 0x30	; 48
    4b62:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>
    4b66:	22 c0       	rjmp	.+68     	; 0x4bac <HLCD_vDisplayNumber+0x6c>
	}

	while(A_u32Number != 0)
	{
		ReversedNum = (ReversedNum*10) + (A_u32Number %10);
    4b68:	89 81       	ldd	r24, Y+1	; 0x01
    4b6a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b6c:	9c 01       	movw	r18, r24
    4b6e:	22 0f       	add	r18, r18
    4b70:	33 1f       	adc	r19, r19
    4b72:	c9 01       	movw	r24, r18
    4b74:	88 0f       	add	r24, r24
    4b76:	99 1f       	adc	r25, r25
    4b78:	88 0f       	add	r24, r24
    4b7a:	99 1f       	adc	r25, r25
    4b7c:	f9 01       	movw	r30, r18
    4b7e:	e8 0f       	add	r30, r24
    4b80:	f9 1f       	adc	r31, r25
    4b82:	8b 81       	ldd	r24, Y+3	; 0x03
    4b84:	9c 81       	ldd	r25, Y+4	; 0x04
    4b86:	2a e0       	ldi	r18, 0x0A	; 10
    4b88:	30 e0       	ldi	r19, 0x00	; 0
    4b8a:	b9 01       	movw	r22, r18
    4b8c:	0e 94 57 28 	call	0x50ae	; 0x50ae <__udivmodhi4>
    4b90:	8e 0f       	add	r24, r30
    4b92:	9f 1f       	adc	r25, r31
    4b94:	9a 83       	std	Y+2, r25	; 0x02
    4b96:	89 83       	std	Y+1, r24	; 0x01
		A_u32Number = A_u32Number /10;
    4b98:	8b 81       	ldd	r24, Y+3	; 0x03
    4b9a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b9c:	2a e0       	ldi	r18, 0x0A	; 10
    4b9e:	30 e0       	ldi	r19, 0x00	; 0
    4ba0:	b9 01       	movw	r22, r18
    4ba2:	0e 94 57 28 	call	0x50ae	; 0x50ae <__udivmodhi4>
    4ba6:	cb 01       	movw	r24, r22
    4ba8:	9c 83       	std	Y+4, r25	; 0x04
    4baa:	8b 83       	std	Y+3, r24	; 0x03
	if(A_u32Number == 0)
	{
		HLCD_vSendData('0');
	}

	while(A_u32Number != 0)
    4bac:	8b 81       	ldd	r24, Y+3	; 0x03
    4bae:	9c 81       	ldd	r25, Y+4	; 0x04
    4bb0:	00 97       	sbiw	r24, 0x00	; 0
    4bb2:	d1 f6       	brne	.-76     	; 0x4b68 <HLCD_vDisplayNumber+0x28>
    4bb4:	14 c0       	rjmp	.+40     	; 0x4bde <HLCD_vDisplayNumber+0x9e>
		A_u32Number = A_u32Number /10;
	}

	while(ReversedNum != 1)
	{
		HLCD_vSendData( (ReversedNum%10) + 48);
    4bb6:	89 81       	ldd	r24, Y+1	; 0x01
    4bb8:	9a 81       	ldd	r25, Y+2	; 0x02
    4bba:	2a e0       	ldi	r18, 0x0A	; 10
    4bbc:	30 e0       	ldi	r19, 0x00	; 0
    4bbe:	b9 01       	movw	r22, r18
    4bc0:	0e 94 57 28 	call	0x50ae	; 0x50ae <__udivmodhi4>
    4bc4:	80 5d       	subi	r24, 0xD0	; 208
    4bc6:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>
		ReversedNum= ReversedNum/10;
    4bca:	89 81       	ldd	r24, Y+1	; 0x01
    4bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    4bce:	2a e0       	ldi	r18, 0x0A	; 10
    4bd0:	30 e0       	ldi	r19, 0x00	; 0
    4bd2:	b9 01       	movw	r22, r18
    4bd4:	0e 94 57 28 	call	0x50ae	; 0x50ae <__udivmodhi4>
    4bd8:	cb 01       	movw	r24, r22
    4bda:	9a 83       	std	Y+2, r25	; 0x02
    4bdc:	89 83       	std	Y+1, r24	; 0x01
	{
		ReversedNum = (ReversedNum*10) + (A_u32Number %10);
		A_u32Number = A_u32Number /10;
	}

	while(ReversedNum != 1)
    4bde:	89 81       	ldd	r24, Y+1	; 0x01
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	81 30       	cpi	r24, 0x01	; 1
    4be4:	91 05       	cpc	r25, r1
    4be6:	39 f7       	brne	.-50     	; 0x4bb6 <HLCD_vDisplayNumber+0x76>
	{
		HLCD_vSendData( (ReversedNum%10) + 48);
		ReversedNum= ReversedNum/10;
	}
}
    4be8:	0f 90       	pop	r0
    4bea:	0f 90       	pop	r0
    4bec:	0f 90       	pop	r0
    4bee:	0f 90       	pop	r0
    4bf0:	cf 91       	pop	r28
    4bf2:	df 91       	pop	r29
    4bf4:	08 95       	ret

00004bf6 <HLCD_vSendSpecialSymbol>:

void HLCD_vSendSpecialSymbol(u8 *A_ptru8SymbolArray, u8 A_u8PatternNum, LCD_ROW_e A_RowNo , LCD_COL_e A_COLNo)
{
    4bf6:	df 93       	push	r29
    4bf8:	cf 93       	push	r28
    4bfa:	cd b7       	in	r28, 0x3d	; 61
    4bfc:	de b7       	in	r29, 0x3e	; 62
    4bfe:	27 97       	sbiw	r28, 0x07	; 7
    4c00:	0f b6       	in	r0, 0x3f	; 63
    4c02:	f8 94       	cli
    4c04:	de bf       	out	0x3e, r29	; 62
    4c06:	0f be       	out	0x3f, r0	; 63
    4c08:	cd bf       	out	0x3d, r28	; 61
    4c0a:	9c 83       	std	Y+4, r25	; 0x04
    4c0c:	8b 83       	std	Y+3, r24	; 0x03
    4c0e:	6d 83       	std	Y+5, r22	; 0x05
    4c10:	4e 83       	std	Y+6, r20	; 0x06
    4c12:	2f 83       	std	Y+7, r18	; 0x07
	u8 CGRAMAddress;
	// Calculate CGRAM Address
	CGRAMAddress = A_u8PatternNum * 8;
    4c14:	8d 81       	ldd	r24, Y+5	; 0x05
    4c16:	88 2f       	mov	r24, r24
    4c18:	90 e0       	ldi	r25, 0x00	; 0
    4c1a:	88 0f       	add	r24, r24
    4c1c:	99 1f       	adc	r25, r25
    4c1e:	88 0f       	add	r24, r24
    4c20:	99 1f       	adc	r25, r25
    4c22:	88 0f       	add	r24, r24
    4c24:	99 1f       	adc	r25, r25
    4c26:	8a 83       	std	Y+2, r24	; 0x02
	SET_BIT(CGRAMAddress ,6);
    4c28:	8a 81       	ldd	r24, Y+2	; 0x02
    4c2a:	80 64       	ori	r24, 0x40	; 64
    4c2c:	8a 83       	std	Y+2, r24	; 0x02

	// Set CGRAM
	HLCD_vSendCommand(CGRAMAddress);
    4c2e:	8a 81       	ldd	r24, Y+2	; 0x02
    4c30:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <HLCD_vSendCommand>


	for(u8 counter = 0 ; counter < 8 ; counter++)
    4c34:	19 82       	std	Y+1, r1	; 0x01
    4c36:	0e c0       	rjmp	.+28     	; 0x4c54 <HLCD_vSendSpecialSymbol+0x5e>
	{
		HLCD_vSendData(A_ptru8SymbolArray[counter]);
    4c38:	89 81       	ldd	r24, Y+1	; 0x01
    4c3a:	28 2f       	mov	r18, r24
    4c3c:	30 e0       	ldi	r19, 0x00	; 0
    4c3e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c40:	9c 81       	ldd	r25, Y+4	; 0x04
    4c42:	fc 01       	movw	r30, r24
    4c44:	e2 0f       	add	r30, r18
    4c46:	f3 1f       	adc	r31, r19
    4c48:	80 81       	ld	r24, Z
    4c4a:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>

	// Set CGRAM
	HLCD_vSendCommand(CGRAMAddress);


	for(u8 counter = 0 ; counter < 8 ; counter++)
    4c4e:	89 81       	ldd	r24, Y+1	; 0x01
    4c50:	8f 5f       	subi	r24, 0xFF	; 255
    4c52:	89 83       	std	Y+1, r24	; 0x01
    4c54:	89 81       	ldd	r24, Y+1	; 0x01
    4c56:	88 30       	cpi	r24, 0x08	; 8
    4c58:	78 f3       	brcs	.-34     	; 0x4c38 <HLCD_vSendSpecialSymbol+0x42>
	{
		HLCD_vSendData(A_ptru8SymbolArray[counter]);
	}

	// send Command to set DDRAM Address
	HLCD_vGoToPos(A_RowNo , A_COLNo);
    4c5a:	8e 81       	ldd	r24, Y+6	; 0x06
    4c5c:	6f 81       	ldd	r22, Y+7	; 0x07
    4c5e:	0e 94 78 25 	call	0x4af0	; 0x4af0 <HLCD_vGoToPos>

	// Display Pattern
	HLCD_vSendData(A_u8PatternNum);
    4c62:	8d 81       	ldd	r24, Y+5	; 0x05
    4c64:	0e 94 88 21 	call	0x4310	; 0x4310 <HLCD_vSendData>
}
    4c68:	27 96       	adiw	r28, 0x07	; 7
    4c6a:	0f b6       	in	r0, 0x3f	; 63
    4c6c:	f8 94       	cli
    4c6e:	de bf       	out	0x3e, r29	; 62
    4c70:	0f be       	out	0x3f, r0	; 63
    4c72:	cd bf       	out	0x3d, r28	; 61
    4c74:	cf 91       	pop	r28
    4c76:	df 91       	pop	r29
    4c78:	08 95       	ret

00004c7a <HKEYPAD_vInit>:
u8 static const ArrOfCols[KEYPAD_COL_NO]= KEYPAD_COLS;



void HKEYPAD_vInit(void)
{
    4c7a:	df 93       	push	r29
    4c7c:	cf 93       	push	r28
    4c7e:	cd b7       	in	r28, 0x3d	; 61
    4c80:	de b7       	in	r29, 0x3e	; 62
	// Set PORT INPUT / OUTPUT
	MDIO_vSetPortDir(KEYPAD_PORT , 0x0F);
    4c82:	80 e0       	ldi	r24, 0x00	; 0
    4c84:	6f e0       	ldi	r22, 0x0F	; 15
    4c86:	0e 94 6a 17 	call	0x2ed4	; 0x2ed4 <MDIO_vSetPortDir>

	// Set all Port to high
	MDIO_vSetPortVal(KEYPAD_PORT , 0xFF);
    4c8a:	80 e0       	ldi	r24, 0x00	; 0
    4c8c:	6f ef       	ldi	r22, 0xFF	; 255
    4c8e:	0e 94 ae 17 	call	0x2f5c	; 0x2f5c <MDIO_vSetPortVal>

}
    4c92:	cf 91       	pop	r28
    4c94:	df 91       	pop	r29
    4c96:	08 95       	ret

00004c98 <HKEYPAD_u8GetPressedKey>:

u8 HKEYPAD_u8GetPressedKey(void)
{
    4c98:	df 93       	push	r29
    4c9a:	cf 93       	push	r28
    4c9c:	cd b7       	in	r28, 0x3d	; 61
    4c9e:	de b7       	in	r29, 0x3e	; 62
    4ca0:	a1 97       	sbiw	r28, 0x21	; 33
    4ca2:	0f b6       	in	r0, 0x3f	; 63
    4ca4:	f8 94       	cli
    4ca6:	de bf       	out	0x3e, r29	; 62
    4ca8:	0f be       	out	0x3f, r0	; 63
    4caa:	cd bf       	out	0x3d, r28	; 61
	u8 KeyMap = NO_KEY_PRESSED ;
    4cac:	8f ef       	ldi	r24, 0xFF	; 255
    4cae:	89 a3       	std	Y+33, r24	; 0x21
	u8 PinValue ,RowNo=0 , ColNo=0  , Flag=FLAG_DOWN;
    4cb0:	1f 8e       	std	Y+31, r1	; 0x1f
    4cb2:	1e 8e       	std	Y+30, r1	; 0x1e
    4cb4:	1d 8e       	std	Y+29, r1	; 0x1d

	for (RowNo=0; RowNo < KEYPAD_ROW_NO; RowNo++ )
    4cb6:	1f 8e       	std	Y+31, r1	; 0x1f
    4cb8:	51 c1       	rjmp	.+674    	; 0x4f5c <HKEYPAD_u8GetPressedKey+0x2c4>
	{
		// Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_LOW);
    4cba:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4cbc:	88 2f       	mov	r24, r24
    4cbe:	90 e0       	ldi	r25, 0x00	; 0
    4cc0:	fc 01       	movw	r30, r24
    4cc2:	e2 54       	subi	r30, 0x42	; 66
    4cc4:	fd 4f       	sbci	r31, 0xFD	; 253
    4cc6:	90 81       	ld	r25, Z
    4cc8:	80 e0       	ldi	r24, 0x00	; 0
    4cca:	69 2f       	mov	r22, r25
    4ccc:	40 e0       	ldi	r20, 0x00	; 0
    4cce:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>

		// Check on COls
		for(ColNo=0; ColNo < KEYPAD_COL_NO; ColNo++)
    4cd2:	1e 8e       	std	Y+30, r1	; 0x1e
    4cd4:	2d c1       	rjmp	.+602    	; 0x4f30 <HKEYPAD_u8GetPressedKey+0x298>
		{
			// Read COLs
			PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4cd6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4cd8:	88 2f       	mov	r24, r24
    4cda:	90 e0       	ldi	r25, 0x00	; 0
    4cdc:	fc 01       	movw	r30, r24
    4cde:	ee 53       	subi	r30, 0x3E	; 62
    4ce0:	fd 4f       	sbci	r31, 0xFD	; 253
    4ce2:	90 81       	ld	r25, Z
    4ce4:	80 e0       	ldi	r24, 0x00	; 0
    4ce6:	69 2f       	mov	r22, r25
    4ce8:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <MDIO_GetPinVal>
    4cec:	88 a3       	std	Y+32, r24	; 0x20

			// Check if KeyPressed
			if(PinValue == KEY_PRESSED)
    4cee:	88 a1       	ldd	r24, Y+32	; 0x20
    4cf0:	88 23       	and	r24, r24
    4cf2:	09 f0       	breq	.+2      	; 0x4cf6 <HKEYPAD_u8GetPressedKey+0x5e>
    4cf4:	1a c1       	rjmp	.+564    	; 0x4f2a <HKEYPAD_u8GetPressedKey+0x292>
    4cf6:	80 e0       	ldi	r24, 0x00	; 0
    4cf8:	90 e0       	ldi	r25, 0x00	; 0
    4cfa:	a0 ef       	ldi	r26, 0xF0	; 240
    4cfc:	b1 e4       	ldi	r27, 0x41	; 65
    4cfe:	89 8f       	std	Y+25, r24	; 0x19
    4d00:	9a 8f       	std	Y+26, r25	; 0x1a
    4d02:	ab 8f       	std	Y+27, r26	; 0x1b
    4d04:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d06:	69 8d       	ldd	r22, Y+25	; 0x19
    4d08:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d0c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d0e:	20 e0       	ldi	r18, 0x00	; 0
    4d10:	30 e8       	ldi	r19, 0x80	; 128
    4d12:	4b e3       	ldi	r20, 0x3B	; 59
    4d14:	55 e4       	ldi	r21, 0x45	; 69
    4d16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d1a:	dc 01       	movw	r26, r24
    4d1c:	cb 01       	movw	r24, r22
    4d1e:	8d 8b       	std	Y+21, r24	; 0x15
    4d20:	9e 8b       	std	Y+22, r25	; 0x16
    4d22:	af 8b       	std	Y+23, r26	; 0x17
    4d24:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4d26:	6d 89       	ldd	r22, Y+21	; 0x15
    4d28:	7e 89       	ldd	r23, Y+22	; 0x16
    4d2a:	8f 89       	ldd	r24, Y+23	; 0x17
    4d2c:	98 8d       	ldd	r25, Y+24	; 0x18
    4d2e:	20 e0       	ldi	r18, 0x00	; 0
    4d30:	30 e0       	ldi	r19, 0x00	; 0
    4d32:	40 e8       	ldi	r20, 0x80	; 128
    4d34:	5f e3       	ldi	r21, 0x3F	; 63
    4d36:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4d3a:	88 23       	and	r24, r24
    4d3c:	2c f4       	brge	.+10     	; 0x4d48 <HKEYPAD_u8GetPressedKey+0xb0>
		__ticks = 1;
    4d3e:	81 e0       	ldi	r24, 0x01	; 1
    4d40:	90 e0       	ldi	r25, 0x00	; 0
    4d42:	9c 8b       	std	Y+20, r25	; 0x14
    4d44:	8b 8b       	std	Y+19, r24	; 0x13
    4d46:	3f c0       	rjmp	.+126    	; 0x4dc6 <HKEYPAD_u8GetPressedKey+0x12e>
	else if (__tmp > 65535)
    4d48:	6d 89       	ldd	r22, Y+21	; 0x15
    4d4a:	7e 89       	ldd	r23, Y+22	; 0x16
    4d4c:	8f 89       	ldd	r24, Y+23	; 0x17
    4d4e:	98 8d       	ldd	r25, Y+24	; 0x18
    4d50:	20 e0       	ldi	r18, 0x00	; 0
    4d52:	3f ef       	ldi	r19, 0xFF	; 255
    4d54:	4f e7       	ldi	r20, 0x7F	; 127
    4d56:	57 e4       	ldi	r21, 0x47	; 71
    4d58:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4d5c:	18 16       	cp	r1, r24
    4d5e:	4c f5       	brge	.+82     	; 0x4db2 <HKEYPAD_u8GetPressedKey+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d60:	69 8d       	ldd	r22, Y+25	; 0x19
    4d62:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d64:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d66:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d68:	20 e0       	ldi	r18, 0x00	; 0
    4d6a:	30 e0       	ldi	r19, 0x00	; 0
    4d6c:	40 e2       	ldi	r20, 0x20	; 32
    4d6e:	51 e4       	ldi	r21, 0x41	; 65
    4d70:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d74:	dc 01       	movw	r26, r24
    4d76:	cb 01       	movw	r24, r22
    4d78:	bc 01       	movw	r22, r24
    4d7a:	cd 01       	movw	r24, r26
    4d7c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d80:	dc 01       	movw	r26, r24
    4d82:	cb 01       	movw	r24, r22
    4d84:	9c 8b       	std	Y+20, r25	; 0x14
    4d86:	8b 8b       	std	Y+19, r24	; 0x13
    4d88:	0f c0       	rjmp	.+30     	; 0x4da8 <HKEYPAD_u8GetPressedKey+0x110>
    4d8a:	8c e2       	ldi	r24, 0x2C	; 44
    4d8c:	91 e0       	ldi	r25, 0x01	; 1
    4d8e:	9a 8b       	std	Y+18, r25	; 0x12
    4d90:	89 8b       	std	Y+17, r24	; 0x11
    4d92:	89 89       	ldd	r24, Y+17	; 0x11
    4d94:	9a 89       	ldd	r25, Y+18	; 0x12
    4d96:	01 97       	sbiw	r24, 0x01	; 1
    4d98:	f1 f7       	brne	.-4      	; 0x4d96 <HKEYPAD_u8GetPressedKey+0xfe>
    4d9a:	9a 8b       	std	Y+18, r25	; 0x12
    4d9c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d9e:	8b 89       	ldd	r24, Y+19	; 0x13
    4da0:	9c 89       	ldd	r25, Y+20	; 0x14
    4da2:	01 97       	sbiw	r24, 0x01	; 1
    4da4:	9c 8b       	std	Y+20, r25	; 0x14
    4da6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4da8:	8b 89       	ldd	r24, Y+19	; 0x13
    4daa:	9c 89       	ldd	r25, Y+20	; 0x14
    4dac:	00 97       	sbiw	r24, 0x00	; 0
    4dae:	69 f7       	brne	.-38     	; 0x4d8a <HKEYPAD_u8GetPressedKey+0xf2>
    4db0:	14 c0       	rjmp	.+40     	; 0x4dda <HKEYPAD_u8GetPressedKey+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4db2:	6d 89       	ldd	r22, Y+21	; 0x15
    4db4:	7e 89       	ldd	r23, Y+22	; 0x16
    4db6:	8f 89       	ldd	r24, Y+23	; 0x17
    4db8:	98 8d       	ldd	r25, Y+24	; 0x18
    4dba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4dbe:	dc 01       	movw	r26, r24
    4dc0:	cb 01       	movw	r24, r22
    4dc2:	9c 8b       	std	Y+20, r25	; 0x14
    4dc4:	8b 8b       	std	Y+19, r24	; 0x13
    4dc6:	8b 89       	ldd	r24, Y+19	; 0x13
    4dc8:	9c 89       	ldd	r25, Y+20	; 0x14
    4dca:	98 8b       	std	Y+16, r25	; 0x10
    4dcc:	8f 87       	std	Y+15, r24	; 0x0f
    4dce:	8f 85       	ldd	r24, Y+15	; 0x0f
    4dd0:	98 89       	ldd	r25, Y+16	; 0x10
    4dd2:	01 97       	sbiw	r24, 0x01	; 1
    4dd4:	f1 f7       	brne	.-4      	; 0x4dd2 <HKEYPAD_u8GetPressedKey+0x13a>
    4dd6:	98 8b       	std	Y+16, r25	; 0x10
    4dd8:	8f 87       	std	Y+15, r24	; 0x0f
			{
				// Debouncing Delay
				_delay_ms(DEBOUNCING_DELAY_ms);
				PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4dda:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4ddc:	88 2f       	mov	r24, r24
    4dde:	90 e0       	ldi	r25, 0x00	; 0
    4de0:	fc 01       	movw	r30, r24
    4de2:	ee 53       	subi	r30, 0x3E	; 62
    4de4:	fd 4f       	sbci	r31, 0xFD	; 253
    4de6:	90 81       	ld	r25, Z
    4de8:	80 e0       	ldi	r24, 0x00	; 0
    4dea:	69 2f       	mov	r22, r25
    4dec:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <MDIO_GetPinVal>
    4df0:	88 a3       	std	Y+32, r24	; 0x20
				if(PinValue == KEY_PRESSED)
    4df2:	88 a1       	ldd	r24, Y+32	; 0x20
    4df4:	88 23       	and	r24, r24
    4df6:	09 f0       	breq	.+2      	; 0x4dfa <HKEYPAD_u8GetPressedKey+0x162>
    4df8:	98 c0       	rjmp	.+304    	; 0x4f2a <HKEYPAD_u8GetPressedKey+0x292>
    4dfa:	7e c0       	rjmp	.+252    	; 0x4ef8 <HKEYPAD_u8GetPressedKey+0x260>
				{
					while(PinValue == KEY_PRESSED) // Polling of Flag
    4dfc:	80 e0       	ldi	r24, 0x00	; 0
    4dfe:	90 e0       	ldi	r25, 0x00	; 0
    4e00:	a0 ef       	ldi	r26, 0xF0	; 240
    4e02:	b1 e4       	ldi	r27, 0x41	; 65
    4e04:	8b 87       	std	Y+11, r24	; 0x0b
    4e06:	9c 87       	std	Y+12, r25	; 0x0c
    4e08:	ad 87       	std	Y+13, r26	; 0x0d
    4e0a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e0c:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e0e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e10:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e12:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e14:	20 e0       	ldi	r18, 0x00	; 0
    4e16:	30 e8       	ldi	r19, 0x80	; 128
    4e18:	4b e3       	ldi	r20, 0x3B	; 59
    4e1a:	55 e4       	ldi	r21, 0x45	; 69
    4e1c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e20:	dc 01       	movw	r26, r24
    4e22:	cb 01       	movw	r24, r22
    4e24:	8f 83       	std	Y+7, r24	; 0x07
    4e26:	98 87       	std	Y+8, r25	; 0x08
    4e28:	a9 87       	std	Y+9, r26	; 0x09
    4e2a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4e2c:	6f 81       	ldd	r22, Y+7	; 0x07
    4e2e:	78 85       	ldd	r23, Y+8	; 0x08
    4e30:	89 85       	ldd	r24, Y+9	; 0x09
    4e32:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e34:	20 e0       	ldi	r18, 0x00	; 0
    4e36:	30 e0       	ldi	r19, 0x00	; 0
    4e38:	40 e8       	ldi	r20, 0x80	; 128
    4e3a:	5f e3       	ldi	r21, 0x3F	; 63
    4e3c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4e40:	88 23       	and	r24, r24
    4e42:	2c f4       	brge	.+10     	; 0x4e4e <HKEYPAD_u8GetPressedKey+0x1b6>
		__ticks = 1;
    4e44:	81 e0       	ldi	r24, 0x01	; 1
    4e46:	90 e0       	ldi	r25, 0x00	; 0
    4e48:	9e 83       	std	Y+6, r25	; 0x06
    4e4a:	8d 83       	std	Y+5, r24	; 0x05
    4e4c:	3f c0       	rjmp	.+126    	; 0x4ecc <HKEYPAD_u8GetPressedKey+0x234>
	else if (__tmp > 65535)
    4e4e:	6f 81       	ldd	r22, Y+7	; 0x07
    4e50:	78 85       	ldd	r23, Y+8	; 0x08
    4e52:	89 85       	ldd	r24, Y+9	; 0x09
    4e54:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e56:	20 e0       	ldi	r18, 0x00	; 0
    4e58:	3f ef       	ldi	r19, 0xFF	; 255
    4e5a:	4f e7       	ldi	r20, 0x7F	; 127
    4e5c:	57 e4       	ldi	r21, 0x47	; 71
    4e5e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4e62:	18 16       	cp	r1, r24
    4e64:	4c f5       	brge	.+82     	; 0x4eb8 <HKEYPAD_u8GetPressedKey+0x220>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e66:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e68:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e6e:	20 e0       	ldi	r18, 0x00	; 0
    4e70:	30 e0       	ldi	r19, 0x00	; 0
    4e72:	40 e2       	ldi	r20, 0x20	; 32
    4e74:	51 e4       	ldi	r21, 0x41	; 65
    4e76:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e7a:	dc 01       	movw	r26, r24
    4e7c:	cb 01       	movw	r24, r22
    4e7e:	bc 01       	movw	r22, r24
    4e80:	cd 01       	movw	r24, r26
    4e82:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e86:	dc 01       	movw	r26, r24
    4e88:	cb 01       	movw	r24, r22
    4e8a:	9e 83       	std	Y+6, r25	; 0x06
    4e8c:	8d 83       	std	Y+5, r24	; 0x05
    4e8e:	0f c0       	rjmp	.+30     	; 0x4eae <HKEYPAD_u8GetPressedKey+0x216>
    4e90:	8c e2       	ldi	r24, 0x2C	; 44
    4e92:	91 e0       	ldi	r25, 0x01	; 1
    4e94:	9c 83       	std	Y+4, r25	; 0x04
    4e96:	8b 83       	std	Y+3, r24	; 0x03
    4e98:	8b 81       	ldd	r24, Y+3	; 0x03
    4e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    4e9c:	01 97       	sbiw	r24, 0x01	; 1
    4e9e:	f1 f7       	brne	.-4      	; 0x4e9c <HKEYPAD_u8GetPressedKey+0x204>
    4ea0:	9c 83       	std	Y+4, r25	; 0x04
    4ea2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ea4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ea6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ea8:	01 97       	sbiw	r24, 0x01	; 1
    4eaa:	9e 83       	std	Y+6, r25	; 0x06
    4eac:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4eae:	8d 81       	ldd	r24, Y+5	; 0x05
    4eb0:	9e 81       	ldd	r25, Y+6	; 0x06
    4eb2:	00 97       	sbiw	r24, 0x00	; 0
    4eb4:	69 f7       	brne	.-38     	; 0x4e90 <HKEYPAD_u8GetPressedKey+0x1f8>
    4eb6:	14 c0       	rjmp	.+40     	; 0x4ee0 <HKEYPAD_u8GetPressedKey+0x248>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4eb8:	6f 81       	ldd	r22, Y+7	; 0x07
    4eba:	78 85       	ldd	r23, Y+8	; 0x08
    4ebc:	89 85       	ldd	r24, Y+9	; 0x09
    4ebe:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ec0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ec4:	dc 01       	movw	r26, r24
    4ec6:	cb 01       	movw	r24, r22
    4ec8:	9e 83       	std	Y+6, r25	; 0x06
    4eca:	8d 83       	std	Y+5, r24	; 0x05
    4ecc:	8d 81       	ldd	r24, Y+5	; 0x05
    4ece:	9e 81       	ldd	r25, Y+6	; 0x06
    4ed0:	9a 83       	std	Y+2, r25	; 0x02
    4ed2:	89 83       	std	Y+1, r24	; 0x01
    4ed4:	89 81       	ldd	r24, Y+1	; 0x01
    4ed6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ed8:	01 97       	sbiw	r24, 0x01	; 1
    4eda:	f1 f7       	brne	.-4      	; 0x4ed8 <HKEYPAD_u8GetPressedKey+0x240>
    4edc:	9a 83       	std	Y+2, r25	; 0x02
    4ede:	89 83       	std	Y+1, r24	; 0x01
					{
						_delay_ms(DEBOUNCING_DELAY_ms);
						PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4ee0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4ee2:	88 2f       	mov	r24, r24
    4ee4:	90 e0       	ldi	r25, 0x00	; 0
    4ee6:	fc 01       	movw	r30, r24
    4ee8:	ee 53       	subi	r30, 0x3E	; 62
    4eea:	fd 4f       	sbci	r31, 0xFD	; 253
    4eec:	90 81       	ld	r25, Z
    4eee:	80 e0       	ldi	r24, 0x00	; 0
    4ef0:	69 2f       	mov	r22, r25
    4ef2:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <MDIO_GetPinVal>
    4ef6:	88 a3       	std	Y+32, r24	; 0x20
				// Debouncing Delay
				_delay_ms(DEBOUNCING_DELAY_ms);
				PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
				if(PinValue == KEY_PRESSED)
				{
					while(PinValue == KEY_PRESSED) // Polling of Flag
    4ef8:	88 a1       	ldd	r24, Y+32	; 0x20
    4efa:	88 23       	and	r24, r24
    4efc:	09 f4       	brne	.+2      	; 0x4f00 <HKEYPAD_u8GetPressedKey+0x268>
    4efe:	7e cf       	rjmp	.-260    	; 0x4dfc <HKEYPAD_u8GetPressedKey+0x164>
					{
						_delay_ms(DEBOUNCING_DELAY_ms);
						PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
					} // End of While Loop

					KeyMap = ArrofKeyValues[RowNo][ColNo]; // Get Pressed Key Value
    4f00:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f02:	48 2f       	mov	r20, r24
    4f04:	50 e0       	ldi	r21, 0x00	; 0
    4f06:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f08:	28 2f       	mov	r18, r24
    4f0a:	30 e0       	ldi	r19, 0x00	; 0
    4f0c:	ca 01       	movw	r24, r20
    4f0e:	88 0f       	add	r24, r24
    4f10:	99 1f       	adc	r25, r25
    4f12:	88 0f       	add	r24, r24
    4f14:	99 1f       	adc	r25, r25
    4f16:	82 0f       	add	r24, r18
    4f18:	93 1f       	adc	r25, r19
    4f1a:	fc 01       	movw	r30, r24
    4f1c:	e6 56       	subi	r30, 0x66	; 102
    4f1e:	fd 4f       	sbci	r31, 0xFD	; 253
    4f20:	80 81       	ld	r24, Z
    4f22:	89 a3       	std	Y+33, r24	; 0x21
					Flag = FLAG_UP; // Notification for ROWs Loop to break and Return
    4f24:	81 e0       	ldi	r24, 0x01	; 1
    4f26:	8d 8f       	std	Y+29, r24	; 0x1d
    4f28:	07 c0       	rjmp	.+14     	; 0x4f38 <HKEYPAD_u8GetPressedKey+0x2a0>
	{
		// Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_LOW);

		// Check on COls
		for(ColNo=0; ColNo < KEYPAD_COL_NO; ColNo++)
    4f2a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f2c:	8f 5f       	subi	r24, 0xFF	; 255
    4f2e:	8e 8f       	std	Y+30, r24	; 0x1e
    4f30:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f32:	84 30       	cpi	r24, 0x04	; 4
    4f34:	08 f4       	brcc	.+2      	; 0x4f38 <HKEYPAD_u8GetPressedKey+0x2a0>
    4f36:	cf ce       	rjmp	.-610    	; 0x4cd6 <HKEYPAD_u8GetPressedKey+0x3e>
				}
			}
		} // End of COLs Loop

		// De-Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_HIGH);
    4f38:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f3a:	88 2f       	mov	r24, r24
    4f3c:	90 e0       	ldi	r25, 0x00	; 0
    4f3e:	fc 01       	movw	r30, r24
    4f40:	e2 54       	subi	r30, 0x42	; 66
    4f42:	fd 4f       	sbci	r31, 0xFD	; 253
    4f44:	90 81       	ld	r25, Z
    4f46:	80 e0       	ldi	r24, 0x00	; 0
    4f48:	69 2f       	mov	r22, r25
    4f4a:	41 e0       	ldi	r20, 0x01	; 1
    4f4c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>

		if(Flag == FLAG_UP) // Check if Key was Pressed
    4f50:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f52:	81 30       	cpi	r24, 0x01	; 1
    4f54:	39 f0       	breq	.+14     	; 0x4f64 <HKEYPAD_u8GetPressedKey+0x2cc>
u8 HKEYPAD_u8GetPressedKey(void)
{
	u8 KeyMap = NO_KEY_PRESSED ;
	u8 PinValue ,RowNo=0 , ColNo=0  , Flag=FLAG_DOWN;

	for (RowNo=0; RowNo < KEYPAD_ROW_NO; RowNo++ )
    4f56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f58:	8f 5f       	subi	r24, 0xFF	; 255
    4f5a:	8f 8f       	std	Y+31, r24	; 0x1f
    4f5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f5e:	84 30       	cpi	r24, 0x04	; 4
    4f60:	08 f4       	brcc	.+2      	; 0x4f64 <HKEYPAD_u8GetPressedKey+0x2cc>
    4f62:	ab ce       	rjmp	.-682    	; 0x4cba <HKEYPAD_u8GetPressedKey+0x22>
			break; // break ROWs Loop
		}

	}// End of ROWs Loop

	return KeyMap;
    4f64:	89 a1       	ldd	r24, Y+33	; 0x21
}
    4f66:	a1 96       	adiw	r28, 0x21	; 33
    4f68:	0f b6       	in	r0, 0x3f	; 63
    4f6a:	f8 94       	cli
    4f6c:	de bf       	out	0x3e, r29	; 62
    4f6e:	0f be       	out	0x3f, r0	; 63
    4f70:	cd bf       	out	0x3d, r28	; 61
    4f72:	cf 91       	pop	r28
    4f74:	df 91       	pop	r29
    4f76:	08 95       	ret

00004f78 <HKEYPAD_u16MultiDigitInput>:

u16 HKEYPAD_u16MultiDigitInput(void)
{
    4f78:	df 93       	push	r29
    4f7a:	cf 93       	push	r28
    4f7c:	00 d0       	rcall	.+0      	; 0x4f7e <HKEYPAD_u16MultiDigitInput+0x6>
    4f7e:	0f 92       	push	r0
    4f80:	cd b7       	in	r28, 0x3d	; 61
    4f82:	de b7       	in	r29, 0x3e	; 62
	u16 Number =0;
    4f84:	1b 82       	std	Y+3, r1	; 0x03
    4f86:	1a 82       	std	Y+2, r1	; 0x02
	u8 key;

	while(1)
	{
		key = HKEYPAD_u8GetPressedKey();
    4f88:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <HKEYPAD_u8GetPressedKey>
    4f8c:	89 83       	std	Y+1, r24	; 0x01

		if(key != NO_KEY_PRESSED)
    4f8e:	89 81       	ldd	r24, Y+1	; 0x01
    4f90:	8f 3f       	cpi	r24, 0xFF	; 255
    4f92:	d1 f3       	breq	.-12     	; 0x4f88 <HKEYPAD_u16MultiDigitInput+0x10>
		{
			if (key == '#')
    4f94:	89 81       	ldd	r24, Y+1	; 0x01
    4f96:	83 32       	cpi	r24, 0x23	; 35
    4f98:	d1 f0       	breq	.+52     	; 0x4fce <HKEYPAD_u16MultiDigitInput+0x56>
			{
				break;
			}
			else
			{
				key -= '0';
    4f9a:	89 81       	ldd	r24, Y+1	; 0x01
    4f9c:	80 53       	subi	r24, 0x30	; 48
    4f9e:	89 83       	std	Y+1, r24	; 0x01
				if(key >= 0 && key <= 9)
    4fa0:	89 81       	ldd	r24, Y+1	; 0x01
    4fa2:	8a 30       	cpi	r24, 0x0A	; 10
    4fa4:	88 f7       	brcc	.-30     	; 0x4f88 <HKEYPAD_u16MultiDigitInput+0x10>
				{
					Number = Number * 10 + key;
    4fa6:	8a 81       	ldd	r24, Y+2	; 0x02
    4fa8:	9b 81       	ldd	r25, Y+3	; 0x03
    4faa:	9c 01       	movw	r18, r24
    4fac:	22 0f       	add	r18, r18
    4fae:	33 1f       	adc	r19, r19
    4fb0:	c9 01       	movw	r24, r18
    4fb2:	88 0f       	add	r24, r24
    4fb4:	99 1f       	adc	r25, r25
    4fb6:	88 0f       	add	r24, r24
    4fb8:	99 1f       	adc	r25, r25
    4fba:	28 0f       	add	r18, r24
    4fbc:	39 1f       	adc	r19, r25
    4fbe:	89 81       	ldd	r24, Y+1	; 0x01
    4fc0:	88 2f       	mov	r24, r24
    4fc2:	90 e0       	ldi	r25, 0x00	; 0
    4fc4:	82 0f       	add	r24, r18
    4fc6:	93 1f       	adc	r25, r19
    4fc8:	9b 83       	std	Y+3, r25	; 0x03
    4fca:	8a 83       	std	Y+2, r24	; 0x02
    4fcc:	dd cf       	rjmp	.-70     	; 0x4f88 <HKEYPAD_u16MultiDigitInput+0x10>
				}
			}
		}
	}
		return Number;
    4fce:	8a 81       	ldd	r24, Y+2	; 0x02
    4fd0:	9b 81       	ldd	r25, Y+3	; 0x03
}
    4fd2:	0f 90       	pop	r0
    4fd4:	0f 90       	pop	r0
    4fd6:	0f 90       	pop	r0
    4fd8:	cf 91       	pop	r28
    4fda:	df 91       	pop	r29
    4fdc:	08 95       	ret

00004fde <HDCM_vInit>:
#define F_CPU 12000000UL

#if METHOD==NOSTRUCT

void HDCM_vInit(void)
{
    4fde:	df 93       	push	r29
    4fe0:	cf 93       	push	r28
    4fe2:	cd b7       	in	r28, 0x3d	; 61
    4fe4:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinDir(DCM_PORT , DCM_PIN1 , DIO_OUTPUT);
    4fe6:	82 e0       	ldi	r24, 0x02	; 2
    4fe8:	64 e0       	ldi	r22, 0x04	; 4
    4fea:	41 e0       	ldi	r20, 0x01	; 1
    4fec:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
	MDIO_vSetPinDir(DCM_PORT , DCM_PIN2 , DIO_OUTPUT);
    4ff0:	82 e0       	ldi	r24, 0x02	; 2
    4ff2:	65 e0       	ldi	r22, 0x05	; 5
    4ff4:	41 e0       	ldi	r20, 0x01	; 1
    4ff6:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
	/* TODO : Setup Control Pin */
}
    4ffa:	cf 91       	pop	r28
    4ffc:	df 91       	pop	r29
    4ffe:	08 95       	ret

00005000 <HDCM_vRotateCW>:

void HDCM_vRotateCW(void)
{
    5000:	df 93       	push	r29
    5002:	cf 93       	push	r28
    5004:	cd b7       	in	r28, 0x3d	; 61
    5006:	de b7       	in	r29, 0x3e	; 62
	/* TODO : Implement Speed as input */

	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_LOW);
    5008:	82 e0       	ldi	r24, 0x02	; 2
    500a:	64 e0       	ldi	r22, 0x04	; 4
    500c:	40 e0       	ldi	r20, 0x00	; 0
    500e:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_HIGH);
    5012:	82 e0       	ldi	r24, 0x02	; 2
    5014:	65 e0       	ldi	r22, 0x05	; 5
    5016:	41 e0       	ldi	r20, 0x01	; 1
    5018:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>

}
    501c:	cf 91       	pop	r28
    501e:	df 91       	pop	r29
    5020:	08 95       	ret

00005022 <HDCM_vRotateCCW>:

void HDCM_vRotateCCW(void)
{
    5022:	df 93       	push	r29
    5024:	cf 93       	push	r28
    5026:	cd b7       	in	r28, 0x3d	; 61
    5028:	de b7       	in	r29, 0x3e	; 62
	/* TODO : Implement Speed as input */

	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_HIGH);
    502a:	82 e0       	ldi	r24, 0x02	; 2
    502c:	64 e0       	ldi	r22, 0x04	; 4
    502e:	41 e0       	ldi	r20, 0x01	; 1
    5030:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_LOW);
    5034:	82 e0       	ldi	r24, 0x02	; 2
    5036:	65 e0       	ldi	r22, 0x05	; 5
    5038:	40 e0       	ldi	r20, 0x00	; 0
    503a:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    503e:	cf 91       	pop	r28
    5040:	df 91       	pop	r29
    5042:	08 95       	ret

00005044 <HDCM_vStop>:

void HDCM_vStop(void)
{
    5044:	df 93       	push	r29
    5046:	cf 93       	push	r28
    5048:	cd b7       	in	r28, 0x3d	; 61
    504a:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_LOW);
    504c:	82 e0       	ldi	r24, 0x02	; 2
    504e:	64 e0       	ldi	r22, 0x04	; 4
    5050:	40 e0       	ldi	r20, 0x00	; 0
    5052:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_LOW);
    5056:	82 e0       	ldi	r24, 0x02	; 2
    5058:	65 e0       	ldi	r22, 0x05	; 5
    505a:	40 e0       	ldi	r20, 0x00	; 0
    505c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    5060:	cf 91       	pop	r28
    5062:	df 91       	pop	r29
    5064:	08 95       	ret

00005066 <HBUZZER_vInit>:
#include "Buzzer_Cfg.h"



void HBUZZER_vInit(void)
{
    5066:	df 93       	push	r29
    5068:	cf 93       	push	r28
    506a:	cd b7       	in	r28, 0x3d	; 61
    506c:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinDir(BUZZER_PORT ,BUZZER_PIN ,DIO_OUTPUT);
    506e:	82 e0       	ldi	r24, 0x02	; 2
    5070:	66 e0       	ldi	r22, 0x06	; 6
    5072:	41 e0       	ldi	r20, 0x01	; 1
    5074:	0e 94 1e 14 	call	0x283c	; 0x283c <MDIO_vSetPinDir>
}
    5078:	cf 91       	pop	r28
    507a:	df 91       	pop	r29
    507c:	08 95       	ret

0000507e <HBUZZER_vTurnOn>:

void HBUZZER_vTurnOn(void)
{
    507e:	df 93       	push	r29
    5080:	cf 93       	push	r28
    5082:	cd b7       	in	r28, 0x3d	; 61
    5084:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(BUZZER_PORT , BUZZER_PIN , DIO_HIGH);
    5086:	82 e0       	ldi	r24, 0x02	; 2
    5088:	66 e0       	ldi	r22, 0x06	; 6
    508a:	41 e0       	ldi	r20, 0x01	; 1
    508c:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    5090:	cf 91       	pop	r28
    5092:	df 91       	pop	r29
    5094:	08 95       	ret

00005096 <HBUZZER_vTurnOff>:

void HBUZZER_vTurnOff(void)
{
    5096:	df 93       	push	r29
    5098:	cf 93       	push	r28
    509a:	cd b7       	in	r28, 0x3d	; 61
    509c:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(BUZZER_PORT , BUZZER_PIN , DIO_LOW);
    509e:	82 e0       	ldi	r24, 0x02	; 2
    50a0:	66 e0       	ldi	r22, 0x06	; 6
    50a2:	40 e0       	ldi	r20, 0x00	; 0
    50a4:	0e 94 41 15 	call	0x2a82	; 0x2a82 <MDIO_vSetPinVal>
}
    50a8:	cf 91       	pop	r28
    50aa:	df 91       	pop	r29
    50ac:	08 95       	ret

000050ae <__udivmodhi4>:
    50ae:	aa 1b       	sub	r26, r26
    50b0:	bb 1b       	sub	r27, r27
    50b2:	51 e1       	ldi	r21, 0x11	; 17
    50b4:	07 c0       	rjmp	.+14     	; 0x50c4 <__udivmodhi4_ep>

000050b6 <__udivmodhi4_loop>:
    50b6:	aa 1f       	adc	r26, r26
    50b8:	bb 1f       	adc	r27, r27
    50ba:	a6 17       	cp	r26, r22
    50bc:	b7 07       	cpc	r27, r23
    50be:	10 f0       	brcs	.+4      	; 0x50c4 <__udivmodhi4_ep>
    50c0:	a6 1b       	sub	r26, r22
    50c2:	b7 0b       	sbc	r27, r23

000050c4 <__udivmodhi4_ep>:
    50c4:	88 1f       	adc	r24, r24
    50c6:	99 1f       	adc	r25, r25
    50c8:	5a 95       	dec	r21
    50ca:	a9 f7       	brne	.-22     	; 0x50b6 <__udivmodhi4_loop>
    50cc:	80 95       	com	r24
    50ce:	90 95       	com	r25
    50d0:	bc 01       	movw	r22, r24
    50d2:	cd 01       	movw	r24, r26
    50d4:	08 95       	ret

000050d6 <__prologue_saves__>:
    50d6:	2f 92       	push	r2
    50d8:	3f 92       	push	r3
    50da:	4f 92       	push	r4
    50dc:	5f 92       	push	r5
    50de:	6f 92       	push	r6
    50e0:	7f 92       	push	r7
    50e2:	8f 92       	push	r8
    50e4:	9f 92       	push	r9
    50e6:	af 92       	push	r10
    50e8:	bf 92       	push	r11
    50ea:	cf 92       	push	r12
    50ec:	df 92       	push	r13
    50ee:	ef 92       	push	r14
    50f0:	ff 92       	push	r15
    50f2:	0f 93       	push	r16
    50f4:	1f 93       	push	r17
    50f6:	cf 93       	push	r28
    50f8:	df 93       	push	r29
    50fa:	cd b7       	in	r28, 0x3d	; 61
    50fc:	de b7       	in	r29, 0x3e	; 62
    50fe:	ca 1b       	sub	r28, r26
    5100:	db 0b       	sbc	r29, r27
    5102:	0f b6       	in	r0, 0x3f	; 63
    5104:	f8 94       	cli
    5106:	de bf       	out	0x3e, r29	; 62
    5108:	0f be       	out	0x3f, r0	; 63
    510a:	cd bf       	out	0x3d, r28	; 61
    510c:	09 94       	ijmp

0000510e <__epilogue_restores__>:
    510e:	2a 88       	ldd	r2, Y+18	; 0x12
    5110:	39 88       	ldd	r3, Y+17	; 0x11
    5112:	48 88       	ldd	r4, Y+16	; 0x10
    5114:	5f 84       	ldd	r5, Y+15	; 0x0f
    5116:	6e 84       	ldd	r6, Y+14	; 0x0e
    5118:	7d 84       	ldd	r7, Y+13	; 0x0d
    511a:	8c 84       	ldd	r8, Y+12	; 0x0c
    511c:	9b 84       	ldd	r9, Y+11	; 0x0b
    511e:	aa 84       	ldd	r10, Y+10	; 0x0a
    5120:	b9 84       	ldd	r11, Y+9	; 0x09
    5122:	c8 84       	ldd	r12, Y+8	; 0x08
    5124:	df 80       	ldd	r13, Y+7	; 0x07
    5126:	ee 80       	ldd	r14, Y+6	; 0x06
    5128:	fd 80       	ldd	r15, Y+5	; 0x05
    512a:	0c 81       	ldd	r16, Y+4	; 0x04
    512c:	1b 81       	ldd	r17, Y+3	; 0x03
    512e:	aa 81       	ldd	r26, Y+2	; 0x02
    5130:	b9 81       	ldd	r27, Y+1	; 0x01
    5132:	ce 0f       	add	r28, r30
    5134:	d1 1d       	adc	r29, r1
    5136:	0f b6       	in	r0, 0x3f	; 63
    5138:	f8 94       	cli
    513a:	de bf       	out	0x3e, r29	; 62
    513c:	0f be       	out	0x3f, r0	; 63
    513e:	cd bf       	out	0x3d, r28	; 61
    5140:	ed 01       	movw	r28, r26
    5142:	08 95       	ret

00005144 <_exit>:
    5144:	f8 94       	cli

00005146 <__stop_program>:
    5146:	ff cf       	rjmp	.-2      	; 0x5146 <__stop_program>
