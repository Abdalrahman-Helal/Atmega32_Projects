
SmartHome.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000515c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000266  00800060  0000515c  000051f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  008002c6  008002c6  00005456  2**0
                  ALLOC
  3 .stab         00004b3c  00000000  00000000  00005458  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001950  00000000  00000000  00009f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  0000b8e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001d3  00000000  00000000  0000ba64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000200f  00000000  00000000  0000bc37  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001170  00000000  00000000  0000dc46  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001001  00000000  00000000  0000edb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  0000fdb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c1  00000000  00000000  0000ff58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008ae  00000000  00000000  00010219  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00010ac7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e5       	ldi	r30, 0x5C	; 92
      68:	f1 e5       	ldi	r31, 0x51	; 81
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 3c       	cpi	r26, 0xC6	; 198
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 ec       	ldi	r26, 0xC6	; 198
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3c       	cpi	r26, 0xC8	; 200
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 12 14 	call	0x2824	; 0x2824 <main>
      8a:	0c 94 ac 28 	jmp	0x5158	; 0x5158 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 75 28 	jmp	0x50ea	; 0x50ea <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a2 e9       	ldi	r26, 0x92	; 146
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 91 28 	jmp	0x5122	; 0x5122 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 81 28 	jmp	0x5102	; 0x5102 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 9d 28 	jmp	0x513a	; 0x513a <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 81 28 	jmp	0x5102	; 0x5102 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 9d 28 	jmp	0x513a	; 0x513a <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 75 28 	jmp	0x50ea	; 0x50ea <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	82 e9       	ldi	r24, 0x92	; 146
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 91 28 	jmp	0x5122	; 0x5122 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 81 28 	jmp	0x5102	; 0x5102 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 9d 28 	jmp	0x513a	; 0x513a <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 81 28 	jmp	0x5102	; 0x5102 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 9d 28 	jmp	0x513a	; 0x513a <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 81 28 	jmp	0x5102	; 0x5102 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 9d 28 	jmp	0x513a	; 0x513a <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 85 28 	jmp	0x510a	; 0x510a <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 a1 28 	jmp	0x5142	; 0x5142 <__epilogue_restores__+0x20>

000007fa <__floatunsisf>:
     7fa:	a8 e0       	ldi	r26, 0x08	; 8
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	e3 e0       	ldi	r30, 0x03	; 3
     800:	f4 e0       	ldi	r31, 0x04	; 4
     802:	0c 94 7d 28 	jmp	0x50fa	; 0x50fa <__prologue_saves__+0x10>
     806:	7b 01       	movw	r14, r22
     808:	8c 01       	movw	r16, r24
     80a:	61 15       	cp	r22, r1
     80c:	71 05       	cpc	r23, r1
     80e:	81 05       	cpc	r24, r1
     810:	91 05       	cpc	r25, r1
     812:	19 f4       	brne	.+6      	; 0x81a <__floatunsisf+0x20>
     814:	82 e0       	ldi	r24, 0x02	; 2
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	60 c0       	rjmp	.+192    	; 0x8da <__stack+0x7b>
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	89 83       	std	Y+1, r24	; 0x01
     81e:	8e e1       	ldi	r24, 0x1E	; 30
     820:	c8 2e       	mov	r12, r24
     822:	d1 2c       	mov	r13, r1
     824:	dc 82       	std	Y+4, r13	; 0x04
     826:	cb 82       	std	Y+3, r12	; 0x03
     828:	ed 82       	std	Y+5, r14	; 0x05
     82a:	fe 82       	std	Y+6, r15	; 0x06
     82c:	0f 83       	std	Y+7, r16	; 0x07
     82e:	18 87       	std	Y+8, r17	; 0x08
     830:	c8 01       	movw	r24, r16
     832:	b7 01       	movw	r22, r14
     834:	0e 94 76 04 	call	0x8ec	; 0x8ec <__clzsi2>
     838:	fc 01       	movw	r30, r24
     83a:	31 97       	sbiw	r30, 0x01	; 1
     83c:	f7 ff       	sbrs	r31, 7
     83e:	3b c0       	rjmp	.+118    	; 0x8b6 <__stack+0x57>
     840:	22 27       	eor	r18, r18
     842:	33 27       	eor	r19, r19
     844:	2e 1b       	sub	r18, r30
     846:	3f 0b       	sbc	r19, r31
     848:	57 01       	movw	r10, r14
     84a:	68 01       	movw	r12, r16
     84c:	02 2e       	mov	r0, r18
     84e:	04 c0       	rjmp	.+8      	; 0x858 <__floatunsisf+0x5e>
     850:	d6 94       	lsr	r13
     852:	c7 94       	ror	r12
     854:	b7 94       	ror	r11
     856:	a7 94       	ror	r10
     858:	0a 94       	dec	r0
     85a:	d2 f7       	brpl	.-12     	; 0x850 <__floatunsisf+0x56>
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	a0 e0       	ldi	r26, 0x00	; 0
     86a:	b0 e0       	ldi	r27, 0x00	; 0
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__stack+0x17>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	aa 1f       	adc	r26, r26
     874:	bb 1f       	adc	r27, r27
     876:	2a 95       	dec	r18
     878:	d2 f7       	brpl	.-12     	; 0x86e <__stack+0xf>
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	a1 09       	sbc	r26, r1
     87e:	b1 09       	sbc	r27, r1
     880:	8e 21       	and	r24, r14
     882:	9f 21       	and	r25, r15
     884:	a0 23       	and	r26, r16
     886:	b1 23       	and	r27, r17
     888:	00 97       	sbiw	r24, 0x00	; 0
     88a:	a1 05       	cpc	r26, r1
     88c:	b1 05       	cpc	r27, r1
     88e:	21 f0       	breq	.+8      	; 0x898 <__stack+0x39>
     890:	41 e0       	ldi	r20, 0x01	; 1
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	4a 29       	or	r20, r10
     89a:	5b 29       	or	r21, r11
     89c:	6c 29       	or	r22, r12
     89e:	7d 29       	or	r23, r13
     8a0:	4d 83       	std	Y+5, r20	; 0x05
     8a2:	5e 83       	std	Y+6, r21	; 0x06
     8a4:	6f 83       	std	Y+7, r22	; 0x07
     8a6:	78 87       	std	Y+8, r23	; 0x08
     8a8:	8e e1       	ldi	r24, 0x1E	; 30
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	8e 1b       	sub	r24, r30
     8ae:	9f 0b       	sbc	r25, r31
     8b0:	9c 83       	std	Y+4, r25	; 0x04
     8b2:	8b 83       	std	Y+3, r24	; 0x03
     8b4:	12 c0       	rjmp	.+36     	; 0x8da <__stack+0x7b>
     8b6:	30 97       	sbiw	r30, 0x00	; 0
     8b8:	81 f0       	breq	.+32     	; 0x8da <__stack+0x7b>
     8ba:	0e 2e       	mov	r0, r30
     8bc:	04 c0       	rjmp	.+8      	; 0x8c6 <__stack+0x67>
     8be:	ee 0c       	add	r14, r14
     8c0:	ff 1c       	adc	r15, r15
     8c2:	00 1f       	adc	r16, r16
     8c4:	11 1f       	adc	r17, r17
     8c6:	0a 94       	dec	r0
     8c8:	d2 f7       	brpl	.-12     	; 0x8be <__stack+0x5f>
     8ca:	ed 82       	std	Y+5, r14	; 0x05
     8cc:	fe 82       	std	Y+6, r15	; 0x06
     8ce:	0f 83       	std	Y+7, r16	; 0x07
     8d0:	18 87       	std	Y+8, r17	; 0x08
     8d2:	ce 1a       	sub	r12, r30
     8d4:	df 0a       	sbc	r13, r31
     8d6:	dc 82       	std	Y+4, r13	; 0x04
     8d8:	cb 82       	std	Y+3, r12	; 0x03
     8da:	1a 82       	std	Y+2, r1	; 0x02
     8dc:	ce 01       	movw	r24, r28
     8de:	01 96       	adiw	r24, 0x01	; 1
     8e0:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     8e4:	28 96       	adiw	r28, 0x08	; 8
     8e6:	ea e0       	ldi	r30, 0x0A	; 10
     8e8:	0c 94 99 28 	jmp	0x5132	; 0x5132 <__epilogue_restores__+0x10>

000008ec <__clzsi2>:
     8ec:	ef 92       	push	r14
     8ee:	ff 92       	push	r15
     8f0:	0f 93       	push	r16
     8f2:	1f 93       	push	r17
     8f4:	7b 01       	movw	r14, r22
     8f6:	8c 01       	movw	r16, r24
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	e8 16       	cp	r14, r24
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	f8 06       	cpc	r15, r24
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	08 07       	cpc	r16, r24
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	18 07       	cpc	r17, r24
     908:	88 f4       	brcc	.+34     	; 0x92c <__clzsi2+0x40>
     90a:	8f ef       	ldi	r24, 0xFF	; 255
     90c:	e8 16       	cp	r14, r24
     90e:	f1 04       	cpc	r15, r1
     910:	01 05       	cpc	r16, r1
     912:	11 05       	cpc	r17, r1
     914:	31 f0       	breq	.+12     	; 0x922 <__clzsi2+0x36>
     916:	28 f0       	brcs	.+10     	; 0x922 <__clzsi2+0x36>
     918:	88 e0       	ldi	r24, 0x08	; 8
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	a0 e0       	ldi	r26, 0x00	; 0
     91e:	b0 e0       	ldi	r27, 0x00	; 0
     920:	17 c0       	rjmp	.+46     	; 0x950 <__clzsi2+0x64>
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	a0 e0       	ldi	r26, 0x00	; 0
     928:	b0 e0       	ldi	r27, 0x00	; 0
     92a:	12 c0       	rjmp	.+36     	; 0x950 <__clzsi2+0x64>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	e8 16       	cp	r14, r24
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	f8 06       	cpc	r15, r24
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	08 07       	cpc	r16, r24
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	18 07       	cpc	r17, r24
     93c:	28 f0       	brcs	.+10     	; 0x948 <__clzsi2+0x5c>
     93e:	88 e1       	ldi	r24, 0x18	; 24
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	04 c0       	rjmp	.+8      	; 0x950 <__clzsi2+0x64>
     948:	80 e1       	ldi	r24, 0x10	; 16
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	20 e2       	ldi	r18, 0x20	; 32
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	50 e0       	ldi	r21, 0x00	; 0
     958:	28 1b       	sub	r18, r24
     95a:	39 0b       	sbc	r19, r25
     95c:	4a 0b       	sbc	r20, r26
     95e:	5b 0b       	sbc	r21, r27
     960:	04 c0       	rjmp	.+8      	; 0x96a <__clzsi2+0x7e>
     962:	16 95       	lsr	r17
     964:	07 95       	ror	r16
     966:	f7 94       	ror	r15
     968:	e7 94       	ror	r14
     96a:	8a 95       	dec	r24
     96c:	d2 f7       	brpl	.-12     	; 0x962 <__clzsi2+0x76>
     96e:	f7 01       	movw	r30, r14
     970:	e6 56       	subi	r30, 0x66	; 102
     972:	fe 4f       	sbci	r31, 0xFE	; 254
     974:	80 81       	ld	r24, Z
     976:	28 1b       	sub	r18, r24
     978:	31 09       	sbc	r19, r1
     97a:	41 09       	sbc	r20, r1
     97c:	51 09       	sbc	r21, r1
     97e:	c9 01       	movw	r24, r18
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	ef 90       	pop	r14
     988:	08 95       	ret

0000098a <__pack_f>:
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	0f 93       	push	r16
     992:	1f 93       	push	r17
     994:	fc 01       	movw	r30, r24
     996:	e4 80       	ldd	r14, Z+4	; 0x04
     998:	f5 80       	ldd	r15, Z+5	; 0x05
     99a:	06 81       	ldd	r16, Z+6	; 0x06
     99c:	17 81       	ldd	r17, Z+7	; 0x07
     99e:	d1 80       	ldd	r13, Z+1	; 0x01
     9a0:	80 81       	ld	r24, Z
     9a2:	82 30       	cpi	r24, 0x02	; 2
     9a4:	48 f4       	brcc	.+18     	; 0x9b8 <__pack_f+0x2e>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a0 e1       	ldi	r26, 0x10	; 16
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	e8 2a       	or	r14, r24
     9b0:	f9 2a       	or	r15, r25
     9b2:	0a 2b       	or	r16, r26
     9b4:	1b 2b       	or	r17, r27
     9b6:	a5 c0       	rjmp	.+330    	; 0xb02 <__pack_f+0x178>
     9b8:	84 30       	cpi	r24, 0x04	; 4
     9ba:	09 f4       	brne	.+2      	; 0x9be <__pack_f+0x34>
     9bc:	9f c0       	rjmp	.+318    	; 0xafc <__pack_f+0x172>
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	21 f4       	brne	.+8      	; 0x9ca <__pack_f+0x40>
     9c2:	ee 24       	eor	r14, r14
     9c4:	ff 24       	eor	r15, r15
     9c6:	87 01       	movw	r16, r14
     9c8:	05 c0       	rjmp	.+10     	; 0x9d4 <__pack_f+0x4a>
     9ca:	e1 14       	cp	r14, r1
     9cc:	f1 04       	cpc	r15, r1
     9ce:	01 05       	cpc	r16, r1
     9d0:	11 05       	cpc	r17, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__pack_f+0x50>
     9d4:	e0 e0       	ldi	r30, 0x00	; 0
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	96 c0       	rjmp	.+300    	; 0xb06 <__pack_f+0x17c>
     9da:	62 81       	ldd	r22, Z+2	; 0x02
     9dc:	73 81       	ldd	r23, Z+3	; 0x03
     9de:	9f ef       	ldi	r25, 0xFF	; 255
     9e0:	62 38       	cpi	r22, 0x82	; 130
     9e2:	79 07       	cpc	r23, r25
     9e4:	0c f0       	brlt	.+2      	; 0x9e8 <__pack_f+0x5e>
     9e6:	5b c0       	rjmp	.+182    	; 0xa9e <__pack_f+0x114>
     9e8:	22 e8       	ldi	r18, 0x82	; 130
     9ea:	3f ef       	ldi	r19, 0xFF	; 255
     9ec:	26 1b       	sub	r18, r22
     9ee:	37 0b       	sbc	r19, r23
     9f0:	2a 31       	cpi	r18, 0x1A	; 26
     9f2:	31 05       	cpc	r19, r1
     9f4:	2c f0       	brlt	.+10     	; 0xa00 <__pack_f+0x76>
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	2a c0       	rjmp	.+84     	; 0xa54 <__pack_f+0xca>
     a00:	b8 01       	movw	r22, r16
     a02:	a7 01       	movw	r20, r14
     a04:	02 2e       	mov	r0, r18
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__pack_f+0x86>
     a08:	76 95       	lsr	r23
     a0a:	67 95       	ror	r22
     a0c:	57 95       	ror	r21
     a0e:	47 95       	ror	r20
     a10:	0a 94       	dec	r0
     a12:	d2 f7       	brpl	.-12     	; 0xa08 <__pack_f+0x7e>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__pack_f+0x9c>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	aa 1f       	adc	r26, r26
     a24:	bb 1f       	adc	r27, r27
     a26:	2a 95       	dec	r18
     a28:	d2 f7       	brpl	.-12     	; 0xa1e <__pack_f+0x94>
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	a1 09       	sbc	r26, r1
     a2e:	b1 09       	sbc	r27, r1
     a30:	8e 21       	and	r24, r14
     a32:	9f 21       	and	r25, r15
     a34:	a0 23       	and	r26, r16
     a36:	b1 23       	and	r27, r17
     a38:	00 97       	sbiw	r24, 0x00	; 0
     a3a:	a1 05       	cpc	r26, r1
     a3c:	b1 05       	cpc	r27, r1
     a3e:	21 f0       	breq	.+8      	; 0xa48 <__pack_f+0xbe>
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	9a 01       	movw	r18, r20
     a4a:	ab 01       	movw	r20, r22
     a4c:	28 2b       	or	r18, r24
     a4e:	39 2b       	or	r19, r25
     a50:	4a 2b       	or	r20, r26
     a52:	5b 2b       	or	r21, r27
     a54:	da 01       	movw	r26, r20
     a56:	c9 01       	movw	r24, r18
     a58:	8f 77       	andi	r24, 0x7F	; 127
     a5a:	90 70       	andi	r25, 0x00	; 0
     a5c:	a0 70       	andi	r26, 0x00	; 0
     a5e:	b0 70       	andi	r27, 0x00	; 0
     a60:	80 34       	cpi	r24, 0x40	; 64
     a62:	91 05       	cpc	r25, r1
     a64:	a1 05       	cpc	r26, r1
     a66:	b1 05       	cpc	r27, r1
     a68:	39 f4       	brne	.+14     	; 0xa78 <__pack_f+0xee>
     a6a:	27 ff       	sbrs	r18, 7
     a6c:	09 c0       	rjmp	.+18     	; 0xa80 <__pack_f+0xf6>
     a6e:	20 5c       	subi	r18, 0xC0	; 192
     a70:	3f 4f       	sbci	r19, 0xFF	; 255
     a72:	4f 4f       	sbci	r20, 0xFF	; 255
     a74:	5f 4f       	sbci	r21, 0xFF	; 255
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <__pack_f+0xf6>
     a78:	21 5c       	subi	r18, 0xC1	; 193
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	4f 4f       	sbci	r20, 0xFF	; 255
     a7e:	5f 4f       	sbci	r21, 0xFF	; 255
     a80:	e0 e0       	ldi	r30, 0x00	; 0
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	20 30       	cpi	r18, 0x00	; 0
     a86:	a0 e0       	ldi	r26, 0x00	; 0
     a88:	3a 07       	cpc	r19, r26
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	4a 07       	cpc	r20, r26
     a8e:	a0 e4       	ldi	r26, 0x40	; 64
     a90:	5a 07       	cpc	r21, r26
     a92:	10 f0       	brcs	.+4      	; 0xa98 <__pack_f+0x10e>
     a94:	e1 e0       	ldi	r30, 0x01	; 1
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	79 01       	movw	r14, r18
     a9a:	8a 01       	movw	r16, r20
     a9c:	27 c0       	rjmp	.+78     	; 0xaec <__pack_f+0x162>
     a9e:	60 38       	cpi	r22, 0x80	; 128
     aa0:	71 05       	cpc	r23, r1
     aa2:	64 f5       	brge	.+88     	; 0xafc <__pack_f+0x172>
     aa4:	fb 01       	movw	r30, r22
     aa6:	e1 58       	subi	r30, 0x81	; 129
     aa8:	ff 4f       	sbci	r31, 0xFF	; 255
     aaa:	d8 01       	movw	r26, r16
     aac:	c7 01       	movw	r24, r14
     aae:	8f 77       	andi	r24, 0x7F	; 127
     ab0:	90 70       	andi	r25, 0x00	; 0
     ab2:	a0 70       	andi	r26, 0x00	; 0
     ab4:	b0 70       	andi	r27, 0x00	; 0
     ab6:	80 34       	cpi	r24, 0x40	; 64
     ab8:	91 05       	cpc	r25, r1
     aba:	a1 05       	cpc	r26, r1
     abc:	b1 05       	cpc	r27, r1
     abe:	39 f4       	brne	.+14     	; 0xace <__pack_f+0x144>
     ac0:	e7 fe       	sbrs	r14, 7
     ac2:	0d c0       	rjmp	.+26     	; 0xade <__pack_f+0x154>
     ac4:	80 e4       	ldi	r24, 0x40	; 64
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	a0 e0       	ldi	r26, 0x00	; 0
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	04 c0       	rjmp	.+8      	; 0xad6 <__pack_f+0x14c>
     ace:	8f e3       	ldi	r24, 0x3F	; 63
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	a0 e0       	ldi	r26, 0x00	; 0
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	e8 0e       	add	r14, r24
     ad8:	f9 1e       	adc	r15, r25
     ada:	0a 1f       	adc	r16, r26
     adc:	1b 1f       	adc	r17, r27
     ade:	17 ff       	sbrs	r17, 7
     ae0:	05 c0       	rjmp	.+10     	; 0xaec <__pack_f+0x162>
     ae2:	16 95       	lsr	r17
     ae4:	07 95       	ror	r16
     ae6:	f7 94       	ror	r15
     ae8:	e7 94       	ror	r14
     aea:	31 96       	adiw	r30, 0x01	; 1
     aec:	87 e0       	ldi	r24, 0x07	; 7
     aee:	16 95       	lsr	r17
     af0:	07 95       	ror	r16
     af2:	f7 94       	ror	r15
     af4:	e7 94       	ror	r14
     af6:	8a 95       	dec	r24
     af8:	d1 f7       	brne	.-12     	; 0xaee <__pack_f+0x164>
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__pack_f+0x17c>
     afc:	ee 24       	eor	r14, r14
     afe:	ff 24       	eor	r15, r15
     b00:	87 01       	movw	r16, r14
     b02:	ef ef       	ldi	r30, 0xFF	; 255
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	6e 2f       	mov	r22, r30
     b08:	67 95       	ror	r22
     b0a:	66 27       	eor	r22, r22
     b0c:	67 95       	ror	r22
     b0e:	90 2f       	mov	r25, r16
     b10:	9f 77       	andi	r25, 0x7F	; 127
     b12:	d7 94       	ror	r13
     b14:	dd 24       	eor	r13, r13
     b16:	d7 94       	ror	r13
     b18:	8e 2f       	mov	r24, r30
     b1a:	86 95       	lsr	r24
     b1c:	49 2f       	mov	r20, r25
     b1e:	46 2b       	or	r20, r22
     b20:	58 2f       	mov	r21, r24
     b22:	5d 29       	or	r21, r13
     b24:	b7 01       	movw	r22, r14
     b26:	ca 01       	movw	r24, r20
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	df 90       	pop	r13
     b32:	08 95       	ret

00000b34 <__unpack_f>:
     b34:	fc 01       	movw	r30, r24
     b36:	db 01       	movw	r26, r22
     b38:	40 81       	ld	r20, Z
     b3a:	51 81       	ldd	r21, Z+1	; 0x01
     b3c:	22 81       	ldd	r18, Z+2	; 0x02
     b3e:	62 2f       	mov	r22, r18
     b40:	6f 77       	andi	r22, 0x7F	; 127
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	22 1f       	adc	r18, r18
     b46:	22 27       	eor	r18, r18
     b48:	22 1f       	adc	r18, r18
     b4a:	93 81       	ldd	r25, Z+3	; 0x03
     b4c:	89 2f       	mov	r24, r25
     b4e:	88 0f       	add	r24, r24
     b50:	82 2b       	or	r24, r18
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	99 1f       	adc	r25, r25
     b58:	99 27       	eor	r25, r25
     b5a:	99 1f       	adc	r25, r25
     b5c:	11 96       	adiw	r26, 0x01	; 1
     b5e:	9c 93       	st	X, r25
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	21 15       	cp	r18, r1
     b64:	31 05       	cpc	r19, r1
     b66:	a9 f5       	brne	.+106    	; 0xbd2 <__unpack_f+0x9e>
     b68:	41 15       	cp	r20, r1
     b6a:	51 05       	cpc	r21, r1
     b6c:	61 05       	cpc	r22, r1
     b6e:	71 05       	cpc	r23, r1
     b70:	11 f4       	brne	.+4      	; 0xb76 <__unpack_f+0x42>
     b72:	82 e0       	ldi	r24, 0x02	; 2
     b74:	37 c0       	rjmp	.+110    	; 0xbe4 <__unpack_f+0xb0>
     b76:	82 e8       	ldi	r24, 0x82	; 130
     b78:	9f ef       	ldi	r25, 0xFF	; 255
     b7a:	13 96       	adiw	r26, 0x03	; 3
     b7c:	9c 93       	st	X, r25
     b7e:	8e 93       	st	-X, r24
     b80:	12 97       	sbiw	r26, 0x02	; 2
     b82:	9a 01       	movw	r18, r20
     b84:	ab 01       	movw	r20, r22
     b86:	67 e0       	ldi	r22, 0x07	; 7
     b88:	22 0f       	add	r18, r18
     b8a:	33 1f       	adc	r19, r19
     b8c:	44 1f       	adc	r20, r20
     b8e:	55 1f       	adc	r21, r21
     b90:	6a 95       	dec	r22
     b92:	d1 f7       	brne	.-12     	; 0xb88 <__unpack_f+0x54>
     b94:	83 e0       	ldi	r24, 0x03	; 3
     b96:	8c 93       	st	X, r24
     b98:	0d c0       	rjmp	.+26     	; 0xbb4 <__unpack_f+0x80>
     b9a:	22 0f       	add	r18, r18
     b9c:	33 1f       	adc	r19, r19
     b9e:	44 1f       	adc	r20, r20
     ba0:	55 1f       	adc	r21, r21
     ba2:	12 96       	adiw	r26, 0x02	; 2
     ba4:	8d 91       	ld	r24, X+
     ba6:	9c 91       	ld	r25, X
     ba8:	13 97       	sbiw	r26, 0x03	; 3
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	13 96       	adiw	r26, 0x03	; 3
     bae:	9c 93       	st	X, r25
     bb0:	8e 93       	st	-X, r24
     bb2:	12 97       	sbiw	r26, 0x02	; 2
     bb4:	20 30       	cpi	r18, 0x00	; 0
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	38 07       	cpc	r19, r24
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	48 07       	cpc	r20, r24
     bbe:	80 e4       	ldi	r24, 0x40	; 64
     bc0:	58 07       	cpc	r21, r24
     bc2:	58 f3       	brcs	.-42     	; 0xb9a <__unpack_f+0x66>
     bc4:	14 96       	adiw	r26, 0x04	; 4
     bc6:	2d 93       	st	X+, r18
     bc8:	3d 93       	st	X+, r19
     bca:	4d 93       	st	X+, r20
     bcc:	5c 93       	st	X, r21
     bce:	17 97       	sbiw	r26, 0x07	; 7
     bd0:	08 95       	ret
     bd2:	2f 3f       	cpi	r18, 0xFF	; 255
     bd4:	31 05       	cpc	r19, r1
     bd6:	79 f4       	brne	.+30     	; 0xbf6 <__unpack_f+0xc2>
     bd8:	41 15       	cp	r20, r1
     bda:	51 05       	cpc	r21, r1
     bdc:	61 05       	cpc	r22, r1
     bde:	71 05       	cpc	r23, r1
     be0:	19 f4       	brne	.+6      	; 0xbe8 <__unpack_f+0xb4>
     be2:	84 e0       	ldi	r24, 0x04	; 4
     be4:	8c 93       	st	X, r24
     be6:	08 95       	ret
     be8:	64 ff       	sbrs	r22, 4
     bea:	03 c0       	rjmp	.+6      	; 0xbf2 <__unpack_f+0xbe>
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	8c 93       	st	X, r24
     bf0:	12 c0       	rjmp	.+36     	; 0xc16 <__unpack_f+0xe2>
     bf2:	1c 92       	st	X, r1
     bf4:	10 c0       	rjmp	.+32     	; 0xc16 <__unpack_f+0xe2>
     bf6:	2f 57       	subi	r18, 0x7F	; 127
     bf8:	30 40       	sbci	r19, 0x00	; 0
     bfa:	13 96       	adiw	r26, 0x03	; 3
     bfc:	3c 93       	st	X, r19
     bfe:	2e 93       	st	-X, r18
     c00:	12 97       	sbiw	r26, 0x02	; 2
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	8c 93       	st	X, r24
     c06:	87 e0       	ldi	r24, 0x07	; 7
     c08:	44 0f       	add	r20, r20
     c0a:	55 1f       	adc	r21, r21
     c0c:	66 1f       	adc	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	8a 95       	dec	r24
     c12:	d1 f7       	brne	.-12     	; 0xc08 <__unpack_f+0xd4>
     c14:	70 64       	ori	r23, 0x40	; 64
     c16:	14 96       	adiw	r26, 0x04	; 4
     c18:	4d 93       	st	X+, r20
     c1a:	5d 93       	st	X+, r21
     c1c:	6d 93       	st	X+, r22
     c1e:	7c 93       	st	X, r23
     c20:	17 97       	sbiw	r26, 0x07	; 7
     c22:	08 95       	ret

00000c24 <__fpcmp_parts_f>:
     c24:	1f 93       	push	r17
     c26:	dc 01       	movw	r26, r24
     c28:	fb 01       	movw	r30, r22
     c2a:	9c 91       	ld	r25, X
     c2c:	92 30       	cpi	r25, 0x02	; 2
     c2e:	08 f4       	brcc	.+2      	; 0xc32 <__fpcmp_parts_f+0xe>
     c30:	47 c0       	rjmp	.+142    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c32:	80 81       	ld	r24, Z
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	08 f4       	brcc	.+2      	; 0xc3a <__fpcmp_parts_f+0x16>
     c38:	43 c0       	rjmp	.+134    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c3a:	94 30       	cpi	r25, 0x04	; 4
     c3c:	51 f4       	brne	.+20     	; 0xc52 <__fpcmp_parts_f+0x2e>
     c3e:	11 96       	adiw	r26, 0x01	; 1
     c40:	1c 91       	ld	r17, X
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	99 f5       	brne	.+102    	; 0xcac <__fpcmp_parts_f+0x88>
     c46:	81 81       	ldd	r24, Z+1	; 0x01
     c48:	68 2f       	mov	r22, r24
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	61 1b       	sub	r22, r17
     c4e:	71 09       	sbc	r23, r1
     c50:	3f c0       	rjmp	.+126    	; 0xcd0 <__fpcmp_parts_f+0xac>
     c52:	84 30       	cpi	r24, 0x04	; 4
     c54:	21 f0       	breq	.+8      	; 0xc5e <__fpcmp_parts_f+0x3a>
     c56:	92 30       	cpi	r25, 0x02	; 2
     c58:	31 f4       	brne	.+12     	; 0xc66 <__fpcmp_parts_f+0x42>
     c5a:	82 30       	cpi	r24, 0x02	; 2
     c5c:	b9 f1       	breq	.+110    	; 0xccc <__fpcmp_parts_f+0xa8>
     c5e:	81 81       	ldd	r24, Z+1	; 0x01
     c60:	88 23       	and	r24, r24
     c62:	89 f1       	breq	.+98     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     c64:	2d c0       	rjmp	.+90     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c66:	11 96       	adiw	r26, 0x01	; 1
     c68:	1c 91       	ld	r17, X
     c6a:	11 97       	sbiw	r26, 0x01	; 1
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	f1 f0       	breq	.+60     	; 0xcac <__fpcmp_parts_f+0x88>
     c70:	81 81       	ldd	r24, Z+1	; 0x01
     c72:	18 17       	cp	r17, r24
     c74:	d9 f4       	brne	.+54     	; 0xcac <__fpcmp_parts_f+0x88>
     c76:	12 96       	adiw	r26, 0x02	; 2
     c78:	2d 91       	ld	r18, X+
     c7a:	3c 91       	ld	r19, X
     c7c:	13 97       	sbiw	r26, 0x03	; 3
     c7e:	82 81       	ldd	r24, Z+2	; 0x02
     c80:	93 81       	ldd	r25, Z+3	; 0x03
     c82:	82 17       	cp	r24, r18
     c84:	93 07       	cpc	r25, r19
     c86:	94 f0       	brlt	.+36     	; 0xcac <__fpcmp_parts_f+0x88>
     c88:	28 17       	cp	r18, r24
     c8a:	39 07       	cpc	r19, r25
     c8c:	bc f0       	brlt	.+46     	; 0xcbc <__fpcmp_parts_f+0x98>
     c8e:	14 96       	adiw	r26, 0x04	; 4
     c90:	8d 91       	ld	r24, X+
     c92:	9d 91       	ld	r25, X+
     c94:	0d 90       	ld	r0, X+
     c96:	bc 91       	ld	r27, X
     c98:	a0 2d       	mov	r26, r0
     c9a:	24 81       	ldd	r18, Z+4	; 0x04
     c9c:	35 81       	ldd	r19, Z+5	; 0x05
     c9e:	46 81       	ldd	r20, Z+6	; 0x06
     ca0:	57 81       	ldd	r21, Z+7	; 0x07
     ca2:	28 17       	cp	r18, r24
     ca4:	39 07       	cpc	r19, r25
     ca6:	4a 07       	cpc	r20, r26
     ca8:	5b 07       	cpc	r21, r27
     caa:	18 f4       	brcc	.+6      	; 0xcb2 <__fpcmp_parts_f+0x8e>
     cac:	11 23       	and	r17, r17
     cae:	41 f0       	breq	.+16     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     cb0:	0a c0       	rjmp	.+20     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cb2:	82 17       	cp	r24, r18
     cb4:	93 07       	cpc	r25, r19
     cb6:	a4 07       	cpc	r26, r20
     cb8:	b5 07       	cpc	r27, r21
     cba:	40 f4       	brcc	.+16     	; 0xccc <__fpcmp_parts_f+0xa8>
     cbc:	11 23       	and	r17, r17
     cbe:	19 f0       	breq	.+6      	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cc0:	61 e0       	ldi	r22, 0x01	; 1
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <__fpcmp_parts_f+0xac>
     cc6:	6f ef       	ldi	r22, 0xFF	; 255
     cc8:	7f ef       	ldi	r23, 0xFF	; 255
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <__fpcmp_parts_f+0xac>
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	cb 01       	movw	r24, r22
     cd2:	1f 91       	pop	r17
     cd4:	08 95       	ret

00000cd6 <SmartHomeWelcome>:

#define F_CPU 12000000UL


void SmartHomeWelcome(void)
{
     cd6:	df 93       	push	r29
     cd8:	cf 93       	push	r28
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
     cde:	2e 97       	sbiw	r28, 0x0e	; 14
     ce0:	0f b6       	in	r0, 0x3f	; 63
     ce2:	f8 94       	cli
     ce4:	de bf       	out	0x3e, r29	; 62
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	cd bf       	out	0x3d, r28	; 61
	HLCD_vDisplayString("Hello Helal");
     cea:	80 e6       	ldi	r24, 0x60	; 96
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	a8 e4       	ldi	r26, 0x48	; 72
     cf8:	b3 e4       	ldi	r27, 0x43	; 67
     cfa:	8b 87       	std	Y+11, r24	; 0x0b
     cfc:	9c 87       	std	Y+12, r25	; 0x0c
     cfe:	ad 87       	std	Y+13, r26	; 0x0d
     d00:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d02:	6b 85       	ldd	r22, Y+11	; 0x0b
     d04:	7c 85       	ldd	r23, Y+12	; 0x0c
     d06:	8d 85       	ldd	r24, Y+13	; 0x0d
     d08:	9e 85       	ldd	r25, Y+14	; 0x0e
     d0a:	20 e0       	ldi	r18, 0x00	; 0
     d0c:	30 e8       	ldi	r19, 0x80	; 128
     d0e:	4b e3       	ldi	r20, 0x3B	; 59
     d10:	55 e4       	ldi	r21, 0x45	; 69
     d12:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d16:	dc 01       	movw	r26, r24
     d18:	cb 01       	movw	r24, r22
     d1a:	8f 83       	std	Y+7, r24	; 0x07
     d1c:	98 87       	std	Y+8, r25	; 0x08
     d1e:	a9 87       	std	Y+9, r26	; 0x09
     d20:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d22:	6f 81       	ldd	r22, Y+7	; 0x07
     d24:	78 85       	ldd	r23, Y+8	; 0x08
     d26:	89 85       	ldd	r24, Y+9	; 0x09
     d28:	9a 85       	ldd	r25, Y+10	; 0x0a
     d2a:	20 e0       	ldi	r18, 0x00	; 0
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	40 e8       	ldi	r20, 0x80	; 128
     d30:	5f e3       	ldi	r21, 0x3F	; 63
     d32:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d36:	88 23       	and	r24, r24
     d38:	2c f4       	brge	.+10     	; 0xd44 <SmartHomeWelcome+0x6e>
		__ticks = 1;
     d3a:	81 e0       	ldi	r24, 0x01	; 1
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	9e 83       	std	Y+6, r25	; 0x06
     d40:	8d 83       	std	Y+5, r24	; 0x05
     d42:	3f c0       	rjmp	.+126    	; 0xdc2 <SmartHomeWelcome+0xec>
	else if (__tmp > 65535)
     d44:	6f 81       	ldd	r22, Y+7	; 0x07
     d46:	78 85       	ldd	r23, Y+8	; 0x08
     d48:	89 85       	ldd	r24, Y+9	; 0x09
     d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	3f ef       	ldi	r19, 0xFF	; 255
     d50:	4f e7       	ldi	r20, 0x7F	; 127
     d52:	57 e4       	ldi	r21, 0x47	; 71
     d54:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d58:	18 16       	cp	r1, r24
     d5a:	4c f5       	brge	.+82     	; 0xdae <SmartHomeWelcome+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d5c:	6b 85       	ldd	r22, Y+11	; 0x0b
     d5e:	7c 85       	ldd	r23, Y+12	; 0x0c
     d60:	8d 85       	ldd	r24, Y+13	; 0x0d
     d62:	9e 85       	ldd	r25, Y+14	; 0x0e
     d64:	20 e0       	ldi	r18, 0x00	; 0
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	40 e2       	ldi	r20, 0x20	; 32
     d6a:	51 e4       	ldi	r21, 0x41	; 65
     d6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d70:	dc 01       	movw	r26, r24
     d72:	cb 01       	movw	r24, r22
     d74:	bc 01       	movw	r22, r24
     d76:	cd 01       	movw	r24, r26
     d78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	0f c0       	rjmp	.+30     	; 0xda4 <SmartHomeWelcome+0xce>
     d86:	8c e2       	ldi	r24, 0x2C	; 44
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	9c 83       	std	Y+4, r25	; 0x04
     d8c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d8e:	8b 81       	ldd	r24, Y+3	; 0x03
     d90:	9c 81       	ldd	r25, Y+4	; 0x04
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	f1 f7       	brne	.-4      	; 0xd92 <SmartHomeWelcome+0xbc>
     d96:	9c 83       	std	Y+4, r25	; 0x04
     d98:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d9a:	8d 81       	ldd	r24, Y+5	; 0x05
     d9c:	9e 81       	ldd	r25, Y+6	; 0x06
     d9e:	01 97       	sbiw	r24, 0x01	; 1
     da0:	9e 83       	std	Y+6, r25	; 0x06
     da2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     da4:	8d 81       	ldd	r24, Y+5	; 0x05
     da6:	9e 81       	ldd	r25, Y+6	; 0x06
     da8:	00 97       	sbiw	r24, 0x00	; 0
     daa:	69 f7       	brne	.-38     	; 0xd86 <SmartHomeWelcome+0xb0>
     dac:	14 c0       	rjmp	.+40     	; 0xdd6 <SmartHomeWelcome+0x100>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dae:	6f 81       	ldd	r22, Y+7	; 0x07
     db0:	78 85       	ldd	r23, Y+8	; 0x08
     db2:	89 85       	ldd	r24, Y+9	; 0x09
     db4:	9a 85       	ldd	r25, Y+10	; 0x0a
     db6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     dba:	dc 01       	movw	r26, r24
     dbc:	cb 01       	movw	r24, r22
     dbe:	9e 83       	std	Y+6, r25	; 0x06
     dc0:	8d 83       	std	Y+5, r24	; 0x05
     dc2:	8d 81       	ldd	r24, Y+5	; 0x05
     dc4:	9e 81       	ldd	r25, Y+6	; 0x06
     dc6:	9a 83       	std	Y+2, r25	; 0x02
     dc8:	89 83       	std	Y+1, r24	; 0x01
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	9a 81       	ldd	r25, Y+2	; 0x02
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	f1 f7       	brne	.-4      	; 0xdce <SmartHomeWelcome+0xf8>
     dd2:	9a 83       	std	Y+2, r25	; 0x02
     dd4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(200);
	HLCD_vClearDisplay();
     dd6:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
}
     dda:	2e 96       	adiw	r28, 0x0e	; 14
     ddc:	0f b6       	in	r0, 0x3f	; 63
     dde:	f8 94       	cli
     de0:	de bf       	out	0x3e, r29	; 62
     de2:	0f be       	out	0x3f, r0	; 63
     de4:	cd bf       	out	0x3d, r28	; 61
     de6:	cf 91       	pop	r28
     de8:	df 91       	pop	r29
     dea:	08 95       	ret

00000dec <SmartHomeLoginPassword>:

void SmartHomeLoginPassword()
{
     dec:	df 93       	push	r29
     dee:	cf 93       	push	r28
     df0:	cd b7       	in	r28, 0x3d	; 61
     df2:	de b7       	in	r29, 0x3e	; 62
     df4:	ae 97       	sbiw	r28, 0x2e	; 46
     df6:	0f b6       	in	r0, 0x3f	; 63
     df8:	f8 94       	cli
     dfa:	de bf       	out	0x3e, r29	; 62
     dfc:	0f be       	out	0x3f, r0	; 63
     dfe:	cd bf       	out	0x3d, r28	; 61
	u16 L_Password;
	u8 PasswordStatus = UnValid;
     e00:	1c a6       	std	Y+44, r1	; 0x2c

	HLCD_vDisplayString("Enter password: ");
     e02:	8c e6       	ldi	r24, 0x6C	; 108
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
     e0a:	82 e0       	ldi	r24, 0x02	; 2
     e0c:	61 e0       	ldi	r22, 0x01	; 1
     e0e:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>



	for(u8 i=0; i <3; i++)
     e12:	1b a6       	std	Y+43, r1	; 0x2b
     e14:	8a c1       	rjmp	.+788    	; 0x112a <SmartHomeLoginPassword+0x33e>
	{
		L_Password= HKEYPAD_u16MultiDigitInput();
     e16:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <HKEYPAD_u16MultiDigitInput>
     e1a:	9e a7       	std	Y+46, r25	; 0x2e
     e1c:	8d a7       	std	Y+45, r24	; 0x2d

		if(L_Password == Password)
     e1e:	8d a5       	ldd	r24, Y+45	; 0x2d
     e20:	9e a5       	ldd	r25, Y+46	; 0x2e
     e22:	8b 37       	cpi	r24, 0x7B	; 123
     e24:	91 05       	cpc	r25, r1
     e26:	11 f4       	brne	.+4      	; 0xe2c <SmartHomeLoginPassword+0x40>
		{
			PasswordStatus = Valid;
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	8c a7       	std	Y+44, r24	; 0x2c
		}
		if(PasswordStatus == Valid)
     e2c:	8c a5       	ldd	r24, Y+44	; 0x2c
     e2e:	81 30       	cpi	r24, 0x01	; 1
     e30:	09 f0       	breq	.+2      	; 0xe34 <SmartHomeLoginPassword+0x48>
     e32:	7b c0       	rjmp	.+246    	; 0xf2a <SmartHomeLoginPassword+0x13e>
		{
			HLCD_vClearDisplay();
     e34:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Welcome Helal");
     e38:	8d e7       	ldi	r24, 0x7D	; 125
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	a8 e4       	ldi	r26, 0x48	; 72
     e46:	b3 e4       	ldi	r27, 0x43	; 67
     e48:	8f a3       	std	Y+39, r24	; 0x27
     e4a:	98 a7       	std	Y+40, r25	; 0x28
     e4c:	a9 a7       	std	Y+41, r26	; 0x29
     e4e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e50:	6f a1       	ldd	r22, Y+39	; 0x27
     e52:	78 a5       	ldd	r23, Y+40	; 0x28
     e54:	89 a5       	ldd	r24, Y+41	; 0x29
     e56:	9a a5       	ldd	r25, Y+42	; 0x2a
     e58:	20 e0       	ldi	r18, 0x00	; 0
     e5a:	30 e8       	ldi	r19, 0x80	; 128
     e5c:	4b e3       	ldi	r20, 0x3B	; 59
     e5e:	55 e4       	ldi	r21, 0x45	; 69
     e60:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e64:	dc 01       	movw	r26, r24
     e66:	cb 01       	movw	r24, r22
     e68:	8b a3       	std	Y+35, r24	; 0x23
     e6a:	9c a3       	std	Y+36, r25	; 0x24
     e6c:	ad a3       	std	Y+37, r26	; 0x25
     e6e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     e70:	6b a1       	ldd	r22, Y+35	; 0x23
     e72:	7c a1       	ldd	r23, Y+36	; 0x24
     e74:	8d a1       	ldd	r24, Y+37	; 0x25
     e76:	9e a1       	ldd	r25, Y+38	; 0x26
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	40 e8       	ldi	r20, 0x80	; 128
     e7e:	5f e3       	ldi	r21, 0x3F	; 63
     e80:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     e84:	88 23       	and	r24, r24
     e86:	2c f4       	brge	.+10     	; 0xe92 <SmartHomeLoginPassword+0xa6>
		__ticks = 1;
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	9a a3       	std	Y+34, r25	; 0x22
     e8e:	89 a3       	std	Y+33, r24	; 0x21
     e90:	3f c0       	rjmp	.+126    	; 0xf10 <SmartHomeLoginPassword+0x124>
	else if (__tmp > 65535)
     e92:	6b a1       	ldd	r22, Y+35	; 0x23
     e94:	7c a1       	ldd	r23, Y+36	; 0x24
     e96:	8d a1       	ldd	r24, Y+37	; 0x25
     e98:	9e a1       	ldd	r25, Y+38	; 0x26
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	3f ef       	ldi	r19, 0xFF	; 255
     e9e:	4f e7       	ldi	r20, 0x7F	; 127
     ea0:	57 e4       	ldi	r21, 0x47	; 71
     ea2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     ea6:	18 16       	cp	r1, r24
     ea8:	4c f5       	brge	.+82     	; 0xefc <SmartHomeLoginPassword+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eaa:	6f a1       	ldd	r22, Y+39	; 0x27
     eac:	78 a5       	ldd	r23, Y+40	; 0x28
     eae:	89 a5       	ldd	r24, Y+41	; 0x29
     eb0:	9a a5       	ldd	r25, Y+42	; 0x2a
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	40 e2       	ldi	r20, 0x20	; 32
     eb8:	51 e4       	ldi	r21, 0x41	; 65
     eba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ebe:	dc 01       	movw	r26, r24
     ec0:	cb 01       	movw	r24, r22
     ec2:	bc 01       	movw	r22, r24
     ec4:	cd 01       	movw	r24, r26
     ec6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     eca:	dc 01       	movw	r26, r24
     ecc:	cb 01       	movw	r24, r22
     ece:	9a a3       	std	Y+34, r25	; 0x22
     ed0:	89 a3       	std	Y+33, r24	; 0x21
     ed2:	0f c0       	rjmp	.+30     	; 0xef2 <SmartHomeLoginPassword+0x106>
     ed4:	8c e2       	ldi	r24, 0x2C	; 44
     ed6:	91 e0       	ldi	r25, 0x01	; 1
     ed8:	98 a3       	std	Y+32, r25	; 0x20
     eda:	8f 8f       	std	Y+31, r24	; 0x1f
     edc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     ede:	98 a1       	ldd	r25, Y+32	; 0x20
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	f1 f7       	brne	.-4      	; 0xee0 <SmartHomeLoginPassword+0xf4>
     ee4:	98 a3       	std	Y+32, r25	; 0x20
     ee6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ee8:	89 a1       	ldd	r24, Y+33	; 0x21
     eea:	9a a1       	ldd	r25, Y+34	; 0x22
     eec:	01 97       	sbiw	r24, 0x01	; 1
     eee:	9a a3       	std	Y+34, r25	; 0x22
     ef0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ef2:	89 a1       	ldd	r24, Y+33	; 0x21
     ef4:	9a a1       	ldd	r25, Y+34	; 0x22
     ef6:	00 97       	sbiw	r24, 0x00	; 0
     ef8:	69 f7       	brne	.-38     	; 0xed4 <SmartHomeLoginPassword+0xe8>
     efa:	14 c0       	rjmp	.+40     	; 0xf24 <SmartHomeLoginPassword+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     efc:	6b a1       	ldd	r22, Y+35	; 0x23
     efe:	7c a1       	ldd	r23, Y+36	; 0x24
     f00:	8d a1       	ldd	r24, Y+37	; 0x25
     f02:	9e a1       	ldd	r25, Y+38	; 0x26
     f04:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f08:	dc 01       	movw	r26, r24
     f0a:	cb 01       	movw	r24, r22
     f0c:	9a a3       	std	Y+34, r25	; 0x22
     f0e:	89 a3       	std	Y+33, r24	; 0x21
     f10:	89 a1       	ldd	r24, Y+33	; 0x21
     f12:	9a a1       	ldd	r25, Y+34	; 0x22
     f14:	9e 8f       	std	Y+30, r25	; 0x1e
     f16:	8d 8f       	std	Y+29, r24	; 0x1d
     f18:	8d 8d       	ldd	r24, Y+29	; 0x1d
     f1a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     f1c:	01 97       	sbiw	r24, 0x01	; 1
     f1e:	f1 f7       	brne	.-4      	; 0xf1c <SmartHomeLoginPassword+0x130>
     f20:	9e 8f       	std	Y+30, r25	; 0x1e
     f22:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(200);
			HLCD_vClearDisplay();
     f24:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
     f28:	04 c1       	rjmp	.+520    	; 0x1132 <SmartHomeLoginPassword+0x346>
			break;
		}
		else
		{
			if(i < 2)
     f2a:	8b a5       	ldd	r24, Y+43	; 0x2b
     f2c:	82 30       	cpi	r24, 0x02	; 2
     f2e:	08 f0       	brcs	.+2      	; 0xf32 <SmartHomeLoginPassword+0x146>
     f30:	7f c0       	rjmp	.+254    	; 0x1030 <SmartHomeLoginPassword+0x244>
			{
				HLCD_vClearDisplay();
     f32:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Try Again");
     f36:	8b e8       	ldi	r24, 0x8B	; 139
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
     f3e:	80 e0       	ldi	r24, 0x00	; 0
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	a8 e4       	ldi	r26, 0x48	; 72
     f44:	b3 e4       	ldi	r27, 0x43	; 67
     f46:	89 8f       	std	Y+25, r24	; 0x19
     f48:	9a 8f       	std	Y+26, r25	; 0x1a
     f4a:	ab 8f       	std	Y+27, r26	; 0x1b
     f4c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f4e:	69 8d       	ldd	r22, Y+25	; 0x19
     f50:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f52:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f54:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f56:	20 e0       	ldi	r18, 0x00	; 0
     f58:	30 e8       	ldi	r19, 0x80	; 128
     f5a:	4b e3       	ldi	r20, 0x3B	; 59
     f5c:	55 e4       	ldi	r21, 0x45	; 69
     f5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f62:	dc 01       	movw	r26, r24
     f64:	cb 01       	movw	r24, r22
     f66:	8d 8b       	std	Y+21, r24	; 0x15
     f68:	9e 8b       	std	Y+22, r25	; 0x16
     f6a:	af 8b       	std	Y+23, r26	; 0x17
     f6c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f6e:	6d 89       	ldd	r22, Y+21	; 0x15
     f70:	7e 89       	ldd	r23, Y+22	; 0x16
     f72:	8f 89       	ldd	r24, Y+23	; 0x17
     f74:	98 8d       	ldd	r25, Y+24	; 0x18
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	40 e8       	ldi	r20, 0x80	; 128
     f7c:	5f e3       	ldi	r21, 0x3F	; 63
     f7e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     f82:	88 23       	and	r24, r24
     f84:	2c f4       	brge	.+10     	; 0xf90 <SmartHomeLoginPassword+0x1a4>
		__ticks = 1;
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	9c 8b       	std	Y+20, r25	; 0x14
     f8c:	8b 8b       	std	Y+19, r24	; 0x13
     f8e:	3f c0       	rjmp	.+126    	; 0x100e <SmartHomeLoginPassword+0x222>
	else if (__tmp > 65535)
     f90:	6d 89       	ldd	r22, Y+21	; 0x15
     f92:	7e 89       	ldd	r23, Y+22	; 0x16
     f94:	8f 89       	ldd	r24, Y+23	; 0x17
     f96:	98 8d       	ldd	r25, Y+24	; 0x18
     f98:	20 e0       	ldi	r18, 0x00	; 0
     f9a:	3f ef       	ldi	r19, 0xFF	; 255
     f9c:	4f e7       	ldi	r20, 0x7F	; 127
     f9e:	57 e4       	ldi	r21, 0x47	; 71
     fa0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     fa4:	18 16       	cp	r1, r24
     fa6:	4c f5       	brge	.+82     	; 0xffa <SmartHomeLoginPassword+0x20e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fa8:	69 8d       	ldd	r22, Y+25	; 0x19
     faa:	7a 8d       	ldd	r23, Y+26	; 0x1a
     fac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     fae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	40 e2       	ldi	r20, 0x20	; 32
     fb6:	51 e4       	ldi	r21, 0x41	; 65
     fb8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fbc:	dc 01       	movw	r26, r24
     fbe:	cb 01       	movw	r24, r22
     fc0:	bc 01       	movw	r22, r24
     fc2:	cd 01       	movw	r24, r26
     fc4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     fc8:	dc 01       	movw	r26, r24
     fca:	cb 01       	movw	r24, r22
     fcc:	9c 8b       	std	Y+20, r25	; 0x14
     fce:	8b 8b       	std	Y+19, r24	; 0x13
     fd0:	0f c0       	rjmp	.+30     	; 0xff0 <SmartHomeLoginPassword+0x204>
     fd2:	8c e2       	ldi	r24, 0x2C	; 44
     fd4:	91 e0       	ldi	r25, 0x01	; 1
     fd6:	9a 8b       	std	Y+18, r25	; 0x12
     fd8:	89 8b       	std	Y+17, r24	; 0x11
     fda:	89 89       	ldd	r24, Y+17	; 0x11
     fdc:	9a 89       	ldd	r25, Y+18	; 0x12
     fde:	01 97       	sbiw	r24, 0x01	; 1
     fe0:	f1 f7       	brne	.-4      	; 0xfde <SmartHomeLoginPassword+0x1f2>
     fe2:	9a 8b       	std	Y+18, r25	; 0x12
     fe4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fe6:	8b 89       	ldd	r24, Y+19	; 0x13
     fe8:	9c 89       	ldd	r25, Y+20	; 0x14
     fea:	01 97       	sbiw	r24, 0x01	; 1
     fec:	9c 8b       	std	Y+20, r25	; 0x14
     fee:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ff0:	8b 89       	ldd	r24, Y+19	; 0x13
     ff2:	9c 89       	ldd	r25, Y+20	; 0x14
     ff4:	00 97       	sbiw	r24, 0x00	; 0
     ff6:	69 f7       	brne	.-38     	; 0xfd2 <SmartHomeLoginPassword+0x1e6>
     ff8:	14 c0       	rjmp	.+40     	; 0x1022 <SmartHomeLoginPassword+0x236>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ffa:	6d 89       	ldd	r22, Y+21	; 0x15
     ffc:	7e 89       	ldd	r23, Y+22	; 0x16
     ffe:	8f 89       	ldd	r24, Y+23	; 0x17
    1000:	98 8d       	ldd	r25, Y+24	; 0x18
    1002:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	9c 8b       	std	Y+20, r25	; 0x14
    100c:	8b 8b       	std	Y+19, r24	; 0x13
    100e:	8b 89       	ldd	r24, Y+19	; 0x13
    1010:	9c 89       	ldd	r25, Y+20	; 0x14
    1012:	98 8b       	std	Y+16, r25	; 0x10
    1014:	8f 87       	std	Y+15, r24	; 0x0f
    1016:	8f 85       	ldd	r24, Y+15	; 0x0f
    1018:	98 89       	ldd	r25, Y+16	; 0x10
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	f1 f7       	brne	.-4      	; 0x101a <SmartHomeLoginPassword+0x22e>
    101e:	98 8b       	std	Y+16, r25	; 0x10
    1020:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(200);
				HLCD_vClearDisplay();
    1022:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Enter password: ");
    1026:	8c e6       	ldi	r24, 0x6C	; 108
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    102e:	7a c0       	rjmp	.+244    	; 0x1124 <SmartHomeLoginPassword+0x338>
			}
			else
			{
				HLCD_vClearDisplay();
    1030:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Try Later");
    1034:	85 e9       	ldi	r24, 0x95	; 149
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	aa ef       	ldi	r26, 0xFA	; 250
    1042:	b3 e4       	ldi	r27, 0x43	; 67
    1044:	8b 87       	std	Y+11, r24	; 0x0b
    1046:	9c 87       	std	Y+12, r25	; 0x0c
    1048:	ad 87       	std	Y+13, r26	; 0x0d
    104a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    104c:	6b 85       	ldd	r22, Y+11	; 0x0b
    104e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1050:	8d 85       	ldd	r24, Y+13	; 0x0d
    1052:	9e 85       	ldd	r25, Y+14	; 0x0e
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e8       	ldi	r19, 0x80	; 128
    1058:	4b e3       	ldi	r20, 0x3B	; 59
    105a:	55 e4       	ldi	r21, 0x45	; 69
    105c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1060:	dc 01       	movw	r26, r24
    1062:	cb 01       	movw	r24, r22
    1064:	8f 83       	std	Y+7, r24	; 0x07
    1066:	98 87       	std	Y+8, r25	; 0x08
    1068:	a9 87       	std	Y+9, r26	; 0x09
    106a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    106c:	6f 81       	ldd	r22, Y+7	; 0x07
    106e:	78 85       	ldd	r23, Y+8	; 0x08
    1070:	89 85       	ldd	r24, Y+9	; 0x09
    1072:	9a 85       	ldd	r25, Y+10	; 0x0a
    1074:	20 e0       	ldi	r18, 0x00	; 0
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	40 e8       	ldi	r20, 0x80	; 128
    107a:	5f e3       	ldi	r21, 0x3F	; 63
    107c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1080:	88 23       	and	r24, r24
    1082:	2c f4       	brge	.+10     	; 0x108e <SmartHomeLoginPassword+0x2a2>
		__ticks = 1;
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	9e 83       	std	Y+6, r25	; 0x06
    108a:	8d 83       	std	Y+5, r24	; 0x05
    108c:	3f c0       	rjmp	.+126    	; 0x110c <SmartHomeLoginPassword+0x320>
	else if (__tmp > 65535)
    108e:	6f 81       	ldd	r22, Y+7	; 0x07
    1090:	78 85       	ldd	r23, Y+8	; 0x08
    1092:	89 85       	ldd	r24, Y+9	; 0x09
    1094:	9a 85       	ldd	r25, Y+10	; 0x0a
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	3f ef       	ldi	r19, 0xFF	; 255
    109a:	4f e7       	ldi	r20, 0x7F	; 127
    109c:	57 e4       	ldi	r21, 0x47	; 71
    109e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    10a2:	18 16       	cp	r1, r24
    10a4:	4c f5       	brge	.+82     	; 0x10f8 <SmartHomeLoginPassword+0x30c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    10a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    10aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    10ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    10ae:	20 e0       	ldi	r18, 0x00	; 0
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	40 e2       	ldi	r20, 0x20	; 32
    10b4:	51 e4       	ldi	r21, 0x41	; 65
    10b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10ba:	dc 01       	movw	r26, r24
    10bc:	cb 01       	movw	r24, r22
    10be:	bc 01       	movw	r22, r24
    10c0:	cd 01       	movw	r24, r26
    10c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	9e 83       	std	Y+6, r25	; 0x06
    10cc:	8d 83       	std	Y+5, r24	; 0x05
    10ce:	0f c0       	rjmp	.+30     	; 0x10ee <SmartHomeLoginPassword+0x302>
    10d0:	8c e2       	ldi	r24, 0x2C	; 44
    10d2:	91 e0       	ldi	r25, 0x01	; 1
    10d4:	9c 83       	std	Y+4, r25	; 0x04
    10d6:	8b 83       	std	Y+3, r24	; 0x03
    10d8:	8b 81       	ldd	r24, Y+3	; 0x03
    10da:	9c 81       	ldd	r25, Y+4	; 0x04
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	f1 f7       	brne	.-4      	; 0x10dc <SmartHomeLoginPassword+0x2f0>
    10e0:	9c 83       	std	Y+4, r25	; 0x04
    10e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10e4:	8d 81       	ldd	r24, Y+5	; 0x05
    10e6:	9e 81       	ldd	r25, Y+6	; 0x06
    10e8:	01 97       	sbiw	r24, 0x01	; 1
    10ea:	9e 83       	std	Y+6, r25	; 0x06
    10ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10ee:	8d 81       	ldd	r24, Y+5	; 0x05
    10f0:	9e 81       	ldd	r25, Y+6	; 0x06
    10f2:	00 97       	sbiw	r24, 0x00	; 0
    10f4:	69 f7       	brne	.-38     	; 0x10d0 <SmartHomeLoginPassword+0x2e4>
    10f6:	14 c0       	rjmp	.+40     	; 0x1120 <SmartHomeLoginPassword+0x334>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f8:	6f 81       	ldd	r22, Y+7	; 0x07
    10fa:	78 85       	ldd	r23, Y+8	; 0x08
    10fc:	89 85       	ldd	r24, Y+9	; 0x09
    10fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1100:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1104:	dc 01       	movw	r26, r24
    1106:	cb 01       	movw	r24, r22
    1108:	9e 83       	std	Y+6, r25	; 0x06
    110a:	8d 83       	std	Y+5, r24	; 0x05
    110c:	8d 81       	ldd	r24, Y+5	; 0x05
    110e:	9e 81       	ldd	r25, Y+6	; 0x06
    1110:	9a 83       	std	Y+2, r25	; 0x02
    1112:	89 83       	std	Y+1, r24	; 0x01
    1114:	89 81       	ldd	r24, Y+1	; 0x01
    1116:	9a 81       	ldd	r25, Y+2	; 0x02
    1118:	01 97       	sbiw	r24, 0x01	; 1
    111a:	f1 f7       	brne	.-4      	; 0x1118 <SmartHomeLoginPassword+0x32c>
    111c:	9a 83       	std	Y+2, r25	; 0x02
    111e:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(500);
				HLCD_vClearDisplay();
    1120:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
	HLCD_vDisplayString("Enter password: ");
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);



	for(u8 i=0; i <3; i++)
    1124:	8b a5       	ldd	r24, Y+43	; 0x2b
    1126:	8f 5f       	subi	r24, 0xFF	; 255
    1128:	8b a7       	std	Y+43, r24	; 0x2b
    112a:	8b a5       	ldd	r24, Y+43	; 0x2b
    112c:	83 30       	cpi	r24, 0x03	; 3
    112e:	08 f4       	brcc	.+2      	; 0x1132 <SmartHomeLoginPassword+0x346>
    1130:	72 ce       	rjmp	.-796    	; 0xe16 <SmartHomeLoginPassword+0x2a>
				HLCD_vClearDisplay();
				// sholud return to any point here
			}
		}
	} // end of FOR (password) loop
}
    1132:	ae 96       	adiw	r28, 0x2e	; 46
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	cf 91       	pop	r28
    1140:	df 91       	pop	r29
    1142:	08 95       	ret

00001144 <SmartHomeMenu>:


// ----------------------------------------

void SmartHomeMenu()
{
    1144:	0f 93       	push	r16
    1146:	1f 93       	push	r17
    1148:	df 93       	push	r29
    114a:	cf 93       	push	r28
    114c:	cd b7       	in	r28, 0x3d	; 61
    114e:	de b7       	in	r29, 0x3e	; 62
    1150:	cf 5d       	subi	r28, 0xDF	; 223
    1152:	d0 40       	sbci	r29, 0x00	; 0
    1154:	0f b6       	in	r0, 0x3f	; 63
    1156:	f8 94       	cli
    1158:	de bf       	out	0x3e, r29	; 62
    115a:	0f be       	out	0x3f, r0	; 63
    115c:	cd bf       	out	0x3d, r28	; 61
	// Show Menu
	u8 key = NO_KEY_PRESSED;
    115e:	fe 01       	movw	r30, r28
    1160:	e9 52       	subi	r30, 0x29	; 41
    1162:	ff 4f       	sbci	r31, 0xFF	; 255
    1164:	8f ef       	ldi	r24, 0xFF	; 255
    1166:	80 83       	st	Z, r24
	HLCD_vClearDisplay();
    1168:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
	HLCD_vDisplayString("1- Light 3- Door");
    116c:	8f e9       	ldi	r24, 0x9F	; 159
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
    1174:	82 e0       	ldi	r24, 0x02	; 2
    1176:	61 e0       	ldi	r22, 0x01	; 1
    1178:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
	HLCD_vDisplayString("2- Timer");
    117c:	80 eb       	ldi	r24, 0xB0	; 176
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <SmartHomeMenu+0x4e>


	// waiting to enter an input
	while(key == NO_KEY_PRESSED)
	{
		key = HKEYPAD_u8GetPressedKey();
    1186:	0e 94 56 26 	call	0x4cac	; 0x4cac <HKEYPAD_u8GetPressedKey>
    118a:	fe 01       	movw	r30, r28
    118c:	e9 52       	subi	r30, 0x29	; 41
    118e:	ff 4f       	sbci	r31, 0xFF	; 255
    1190:	80 83       	st	Z, r24
	HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
	HLCD_vDisplayString("2- Timer");


	// waiting to enter an input
	while(key == NO_KEY_PRESSED)
    1192:	fe 01       	movw	r30, r28
    1194:	e9 52       	subi	r30, 0x29	; 41
    1196:	ff 4f       	sbci	r31, 0xFF	; 255
    1198:	80 81       	ld	r24, Z
    119a:	8f 3f       	cpi	r24, 0xFF	; 255
    119c:	a1 f3       	breq	.-24     	; 0x1186 <SmartHomeMenu+0x42>
	{
		key = HKEYPAD_u8GetPressedKey();
	}

	switch(key)
    119e:	fe 01       	movw	r30, r28
    11a0:	e9 52       	subi	r30, 0x29	; 41
    11a2:	ff 4f       	sbci	r31, 0xFF	; 255
    11a4:	80 81       	ld	r24, Z
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	c2 52       	subi	r28, 0x22	; 34
    11ac:	df 4f       	sbci	r29, 0xFF	; 255
    11ae:	39 83       	std	Y+1, r19	; 0x01
    11b0:	28 83       	st	Y, r18
    11b2:	ce 5d       	subi	r28, 0xDE	; 222
    11b4:	d0 40       	sbci	r29, 0x00	; 0
    11b6:	c2 52       	subi	r28, 0x22	; 34
    11b8:	df 4f       	sbci	r29, 0xFF	; 255
    11ba:	88 81       	ld	r24, Y
    11bc:	99 81       	ldd	r25, Y+1	; 0x01
    11be:	ce 5d       	subi	r28, 0xDE	; 222
    11c0:	d0 40       	sbci	r29, 0x00	; 0
    11c2:	82 33       	cpi	r24, 0x32	; 50
    11c4:	91 05       	cpc	r25, r1
    11c6:	09 f4       	brne	.+2      	; 0x11ca <SmartHomeMenu+0x86>
    11c8:	37 c4       	rjmp	.+2158   	; 0x1a38 <SmartHomeMenu+0x8f4>
    11ca:	c2 52       	subi	r28, 0x22	; 34
    11cc:	df 4f       	sbci	r29, 0xFF	; 255
    11ce:	e8 81       	ld	r30, Y
    11d0:	f9 81       	ldd	r31, Y+1	; 0x01
    11d2:	ce 5d       	subi	r28, 0xDE	; 222
    11d4:	d0 40       	sbci	r29, 0x00	; 0
    11d6:	e3 33       	cpi	r30, 0x33	; 51
    11d8:	f1 05       	cpc	r31, r1
    11da:	09 f4       	brne	.+2      	; 0x11de <SmartHomeMenu+0x9a>
    11dc:	c7 c6       	rjmp	.+3470   	; 0x1f6c <SmartHomeMenu+0xe28>
    11de:	c2 52       	subi	r28, 0x22	; 34
    11e0:	df 4f       	sbci	r29, 0xFF	; 255
    11e2:	28 81       	ld	r18, Y
    11e4:	39 81       	ldd	r19, Y+1	; 0x01
    11e6:	ce 5d       	subi	r28, 0xDE	; 222
    11e8:	d0 40       	sbci	r29, 0x00	; 0
    11ea:	21 33       	cpi	r18, 0x31	; 49
    11ec:	31 05       	cpc	r19, r1
    11ee:	11 f0       	breq	.+4      	; 0x11f4 <SmartHomeMenu+0xb0>
    11f0:	0c 94 06 14 	jmp	0x280c	; 0x280c <SmartHomeMenu+0x16c8>
	{

	// LED
	case '1':
	{ // to remove error of Declaration after label
		u8 LED_Action = NO_KEY_PRESSED;
    11f4:	fe 01       	movw	r30, r28
    11f6:	ea 52       	subi	r30, 0x2A	; 42
    11f8:	ff 4f       	sbci	r31, 0xFF	; 255
    11fa:	8f ef       	ldi	r24, 0xFF	; 255
    11fc:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
    11fe:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
		HLCD_vDisplayString("1-On 2-OFF");
    1202:	89 eb       	ldi	r24, 0xB9	; 185
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    120a:	82 e0       	ldi	r24, 0x02	; 2
    120c:	61 e0       	ldi	r22, 0x01	; 1
    120e:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
		HLCD_vDisplayString("3- Back");
    1212:	84 ec       	ldi	r24, 0xC4	; 196
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    121a:	06 c0       	rjmp	.+12     	; 0x1228 <SmartHomeMenu+0xe4>
		while(LED_Action == NO_KEY_PRESSED)
		{
			LED_Action = HKEYPAD_u8GetPressedKey();
    121c:	0e 94 56 26 	call	0x4cac	; 0x4cac <HKEYPAD_u8GetPressedKey>
    1220:	fe 01       	movw	r30, r28
    1222:	ea 52       	subi	r30, 0x2A	; 42
    1224:	ff 4f       	sbci	r31, 0xFF	; 255
    1226:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
		HLCD_vDisplayString("1-On 2-OFF");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("3- Back");
		while(LED_Action == NO_KEY_PRESSED)
    1228:	fe 01       	movw	r30, r28
    122a:	ea 52       	subi	r30, 0x2A	; 42
    122c:	ff 4f       	sbci	r31, 0xFF	; 255
    122e:	80 81       	ld	r24, Z
    1230:	8f 3f       	cpi	r24, 0xFF	; 255
    1232:	a1 f3       	breq	.-24     	; 0x121c <SmartHomeMenu+0xd8>
		{
			LED_Action = HKEYPAD_u8GetPressedKey();
		}

		switch (LED_Action)
    1234:	fe 01       	movw	r30, r28
    1236:	ea 52       	subi	r30, 0x2A	; 42
    1238:	ff 4f       	sbci	r31, 0xFF	; 255
    123a:	80 81       	ld	r24, Z
    123c:	e8 2f       	mov	r30, r24
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	c4 52       	subi	r28, 0x24	; 36
    1242:	df 4f       	sbci	r29, 0xFF	; 255
    1244:	f9 83       	std	Y+1, r31	; 0x01
    1246:	e8 83       	st	Y, r30
    1248:	cc 5d       	subi	r28, 0xDC	; 220
    124a:	d0 40       	sbci	r29, 0x00	; 0
    124c:	c4 52       	subi	r28, 0x24	; 36
    124e:	df 4f       	sbci	r29, 0xFF	; 255
    1250:	28 81       	ld	r18, Y
    1252:	39 81       	ldd	r19, Y+1	; 0x01
    1254:	cc 5d       	subi	r28, 0xDC	; 220
    1256:	d0 40       	sbci	r29, 0x00	; 0
    1258:	22 33       	cpi	r18, 0x32	; 50
    125a:	31 05       	cpc	r19, r1
    125c:	09 f4       	brne	.+2      	; 0x1260 <SmartHomeMenu+0x11c>
    125e:	9f c1       	rjmp	.+830    	; 0x159e <SmartHomeMenu+0x45a>
    1260:	c4 52       	subi	r28, 0x24	; 36
    1262:	df 4f       	sbci	r29, 0xFF	; 255
    1264:	88 81       	ld	r24, Y
    1266:	99 81       	ldd	r25, Y+1	; 0x01
    1268:	cc 5d       	subi	r28, 0xDC	; 220
    126a:	d0 40       	sbci	r29, 0x00	; 0
    126c:	83 33       	cpi	r24, 0x33	; 51
    126e:	91 05       	cpc	r25, r1
    1270:	09 f4       	brne	.+2      	; 0x1274 <SmartHomeMenu+0x130>
    1272:	1f c3       	rjmp	.+1598   	; 0x18b2 <SmartHomeMenu+0x76e>
    1274:	c4 52       	subi	r28, 0x24	; 36
    1276:	df 4f       	sbci	r29, 0xFF	; 255
    1278:	e8 81       	ld	r30, Y
    127a:	f9 81       	ldd	r31, Y+1	; 0x01
    127c:	cc 5d       	subi	r28, 0xDC	; 220
    127e:	d0 40       	sbci	r29, 0x00	; 0
    1280:	e1 33       	cpi	r30, 0x31	; 49
    1282:	f1 05       	cpc	r31, r1
    1284:	09 f0       	breq	.+2      	; 0x1288 <SmartHomeMenu+0x144>
    1286:	d1 c3       	rjmp	.+1954   	; 0x1a2a <SmartHomeMenu+0x8e6>
		{
		case '1':
			if(LED_Status == OFF)
    1288:	80 91 c7 02 	lds	r24, 0x02C7
    128c:	88 23       	and	r24, r24
    128e:	09 f0       	breq	.+2      	; 0x1292 <SmartHomeMenu+0x14e>
    1290:	c9 c0       	rjmp	.+402    	; 0x1424 <SmartHomeMenu+0x2e0>
			{
				HLCD_vClearDisplay();
    1292:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Lights ON");
    1296:	8c ec       	ldi	r24, 0xCC	; 204
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
				MDIO_vSetPinDir(LED_PORT,LED_PIN,DIO_OUTPUT);
    129e:	82 e0       	ldi	r24, 0x02	; 2
    12a0:	63 e0       	ldi	r22, 0x03	; 3
    12a2:	41 e0       	ldi	r20, 0x01	; 1
    12a4:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
				MDIO_vSetPinVal(LED_PORT,LED_PIN,DIO_HIGH);
    12a8:	82 e0       	ldi	r24, 0x02	; 2
    12aa:	63 e0       	ldi	r22, 0x03	; 3
    12ac:	41 e0       	ldi	r20, 0x01	; 1
    12ae:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    12b2:	fe 01       	movw	r30, r28
    12b4:	e1 53       	subi	r30, 0x31	; 49
    12b6:	ff 4f       	sbci	r31, 0xFF	; 255
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	aa ef       	ldi	r26, 0xFA	; 250
    12be:	b3 e4       	ldi	r27, 0x43	; 67
    12c0:	80 83       	st	Z, r24
    12c2:	91 83       	std	Z+1, r25	; 0x01
    12c4:	a2 83       	std	Z+2, r26	; 0x02
    12c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12c8:	8e 01       	movw	r16, r28
    12ca:	05 53       	subi	r16, 0x35	; 53
    12cc:	1f 4f       	sbci	r17, 0xFF	; 255
    12ce:	fe 01       	movw	r30, r28
    12d0:	e1 53       	subi	r30, 0x31	; 49
    12d2:	ff 4f       	sbci	r31, 0xFF	; 255
    12d4:	60 81       	ld	r22, Z
    12d6:	71 81       	ldd	r23, Z+1	; 0x01
    12d8:	82 81       	ldd	r24, Z+2	; 0x02
    12da:	93 81       	ldd	r25, Z+3	; 0x03
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e8       	ldi	r19, 0x80	; 128
    12e0:	4b e3       	ldi	r20, 0x3B	; 59
    12e2:	55 e4       	ldi	r21, 0x45	; 69
    12e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	f8 01       	movw	r30, r16
    12ee:	80 83       	st	Z, r24
    12f0:	91 83       	std	Z+1, r25	; 0x01
    12f2:	a2 83       	std	Z+2, r26	; 0x02
    12f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12f6:	fe 01       	movw	r30, r28
    12f8:	e5 53       	subi	r30, 0x35	; 53
    12fa:	ff 4f       	sbci	r31, 0xFF	; 255
    12fc:	60 81       	ld	r22, Z
    12fe:	71 81       	ldd	r23, Z+1	; 0x01
    1300:	82 81       	ldd	r24, Z+2	; 0x02
    1302:	93 81       	ldd	r25, Z+3	; 0x03
    1304:	20 e0       	ldi	r18, 0x00	; 0
    1306:	30 e0       	ldi	r19, 0x00	; 0
    1308:	40 e8       	ldi	r20, 0x80	; 128
    130a:	5f e3       	ldi	r21, 0x3F	; 63
    130c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1310:	88 23       	and	r24, r24
    1312:	44 f4       	brge	.+16     	; 0x1324 <SmartHomeMenu+0x1e0>
		__ticks = 1;
    1314:	fe 01       	movw	r30, r28
    1316:	e7 53       	subi	r30, 0x37	; 55
    1318:	ff 4f       	sbci	r31, 0xFF	; 255
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	91 83       	std	Z+1, r25	; 0x01
    1320:	80 83       	st	Z, r24
    1322:	64 c0       	rjmp	.+200    	; 0x13ec <SmartHomeMenu+0x2a8>
	else if (__tmp > 65535)
    1324:	fe 01       	movw	r30, r28
    1326:	e5 53       	subi	r30, 0x35	; 53
    1328:	ff 4f       	sbci	r31, 0xFF	; 255
    132a:	60 81       	ld	r22, Z
    132c:	71 81       	ldd	r23, Z+1	; 0x01
    132e:	82 81       	ldd	r24, Z+2	; 0x02
    1330:	93 81       	ldd	r25, Z+3	; 0x03
    1332:	20 e0       	ldi	r18, 0x00	; 0
    1334:	3f ef       	ldi	r19, 0xFF	; 255
    1336:	4f e7       	ldi	r20, 0x7F	; 127
    1338:	57 e4       	ldi	r21, 0x47	; 71
    133a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    133e:	18 16       	cp	r1, r24
    1340:	0c f0       	brlt	.+2      	; 0x1344 <SmartHomeMenu+0x200>
    1342:	43 c0       	rjmp	.+134    	; 0x13ca <SmartHomeMenu+0x286>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1344:	fe 01       	movw	r30, r28
    1346:	e1 53       	subi	r30, 0x31	; 49
    1348:	ff 4f       	sbci	r31, 0xFF	; 255
    134a:	60 81       	ld	r22, Z
    134c:	71 81       	ldd	r23, Z+1	; 0x01
    134e:	82 81       	ldd	r24, Z+2	; 0x02
    1350:	93 81       	ldd	r25, Z+3	; 0x03
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	40 e2       	ldi	r20, 0x20	; 32
    1358:	51 e4       	ldi	r21, 0x41	; 65
    135a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    135e:	dc 01       	movw	r26, r24
    1360:	cb 01       	movw	r24, r22
    1362:	8e 01       	movw	r16, r28
    1364:	07 53       	subi	r16, 0x37	; 55
    1366:	1f 4f       	sbci	r17, 0xFF	; 255
    1368:	bc 01       	movw	r22, r24
    136a:	cd 01       	movw	r24, r26
    136c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1370:	dc 01       	movw	r26, r24
    1372:	cb 01       	movw	r24, r22
    1374:	f8 01       	movw	r30, r16
    1376:	91 83       	std	Z+1, r25	; 0x01
    1378:	80 83       	st	Z, r24
    137a:	1f c0       	rjmp	.+62     	; 0x13ba <SmartHomeMenu+0x276>
    137c:	fe 01       	movw	r30, r28
    137e:	e9 53       	subi	r30, 0x39	; 57
    1380:	ff 4f       	sbci	r31, 0xFF	; 255
    1382:	8c e2       	ldi	r24, 0x2C	; 44
    1384:	91 e0       	ldi	r25, 0x01	; 1
    1386:	91 83       	std	Z+1, r25	; 0x01
    1388:	80 83       	st	Z, r24
    138a:	fe 01       	movw	r30, r28
    138c:	e9 53       	subi	r30, 0x39	; 57
    138e:	ff 4f       	sbci	r31, 0xFF	; 255
    1390:	80 81       	ld	r24, Z
    1392:	91 81       	ldd	r25, Z+1	; 0x01
    1394:	01 97       	sbiw	r24, 0x01	; 1
    1396:	f1 f7       	brne	.-4      	; 0x1394 <SmartHomeMenu+0x250>
    1398:	fe 01       	movw	r30, r28
    139a:	e9 53       	subi	r30, 0x39	; 57
    139c:	ff 4f       	sbci	r31, 0xFF	; 255
    139e:	91 83       	std	Z+1, r25	; 0x01
    13a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13a2:	de 01       	movw	r26, r28
    13a4:	a7 53       	subi	r26, 0x37	; 55
    13a6:	bf 4f       	sbci	r27, 0xFF	; 255
    13a8:	fe 01       	movw	r30, r28
    13aa:	e7 53       	subi	r30, 0x37	; 55
    13ac:	ff 4f       	sbci	r31, 0xFF	; 255
    13ae:	80 81       	ld	r24, Z
    13b0:	91 81       	ldd	r25, Z+1	; 0x01
    13b2:	01 97       	sbiw	r24, 0x01	; 1
    13b4:	11 96       	adiw	r26, 0x01	; 1
    13b6:	9c 93       	st	X, r25
    13b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13ba:	fe 01       	movw	r30, r28
    13bc:	e7 53       	subi	r30, 0x37	; 55
    13be:	ff 4f       	sbci	r31, 0xFF	; 255
    13c0:	80 81       	ld	r24, Z
    13c2:	91 81       	ldd	r25, Z+1	; 0x01
    13c4:	00 97       	sbiw	r24, 0x00	; 0
    13c6:	d1 f6       	brne	.-76     	; 0x137c <SmartHomeMenu+0x238>
    13c8:	28 c0       	rjmp	.+80     	; 0x141a <SmartHomeMenu+0x2d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ca:	8e 01       	movw	r16, r28
    13cc:	07 53       	subi	r16, 0x37	; 55
    13ce:	1f 4f       	sbci	r17, 0xFF	; 255
    13d0:	fe 01       	movw	r30, r28
    13d2:	e5 53       	subi	r30, 0x35	; 53
    13d4:	ff 4f       	sbci	r31, 0xFF	; 255
    13d6:	60 81       	ld	r22, Z
    13d8:	71 81       	ldd	r23, Z+1	; 0x01
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	93 81       	ldd	r25, Z+3	; 0x03
    13de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13e2:	dc 01       	movw	r26, r24
    13e4:	cb 01       	movw	r24, r22
    13e6:	f8 01       	movw	r30, r16
    13e8:	91 83       	std	Z+1, r25	; 0x01
    13ea:	80 83       	st	Z, r24
    13ec:	de 01       	movw	r26, r28
    13ee:	ab 53       	subi	r26, 0x3B	; 59
    13f0:	bf 4f       	sbci	r27, 0xFF	; 255
    13f2:	fe 01       	movw	r30, r28
    13f4:	e7 53       	subi	r30, 0x37	; 55
    13f6:	ff 4f       	sbci	r31, 0xFF	; 255
    13f8:	80 81       	ld	r24, Z
    13fa:	91 81       	ldd	r25, Z+1	; 0x01
    13fc:	11 96       	adiw	r26, 0x01	; 1
    13fe:	9c 93       	st	X, r25
    1400:	8e 93       	st	-X, r24
    1402:	fe 01       	movw	r30, r28
    1404:	eb 53       	subi	r30, 0x3B	; 59
    1406:	ff 4f       	sbci	r31, 0xFF	; 255
    1408:	80 81       	ld	r24, Z
    140a:	91 81       	ldd	r25, Z+1	; 0x01
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	f1 f7       	brne	.-4      	; 0x140c <SmartHomeMenu+0x2c8>
    1410:	fe 01       	movw	r30, r28
    1412:	eb 53       	subi	r30, 0x3B	; 59
    1414:	ff 4f       	sbci	r31, 0xFF	; 255
    1416:	91 83       	std	Z+1, r25	; 0x01
    1418:	80 83       	st	Z, r24
				_delay_ms(500);
				LED_Status = ON;
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	80 93 c7 02 	sts	0x02C7, r24
    1420:	0c 94 06 14 	jmp	0x280c	; 0x280c <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    1424:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already On");
    1428:	86 ed       	ldi	r24, 0xD6	; 214
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1430:	fe 01       	movw	r30, r28
    1432:	ef 53       	subi	r30, 0x3F	; 63
    1434:	ff 4f       	sbci	r31, 0xFF	; 255
    1436:	80 e0       	ldi	r24, 0x00	; 0
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	aa e7       	ldi	r26, 0x7A	; 122
    143c:	b4 e4       	ldi	r27, 0x44	; 68
    143e:	80 83       	st	Z, r24
    1440:	91 83       	std	Z+1, r25	; 0x01
    1442:	a2 83       	std	Z+2, r26	; 0x02
    1444:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1446:	8e 01       	movw	r16, r28
    1448:	03 54       	subi	r16, 0x43	; 67
    144a:	1f 4f       	sbci	r17, 0xFF	; 255
    144c:	fe 01       	movw	r30, r28
    144e:	ef 53       	subi	r30, 0x3F	; 63
    1450:	ff 4f       	sbci	r31, 0xFF	; 255
    1452:	60 81       	ld	r22, Z
    1454:	71 81       	ldd	r23, Z+1	; 0x01
    1456:	82 81       	ldd	r24, Z+2	; 0x02
    1458:	93 81       	ldd	r25, Z+3	; 0x03
    145a:	20 e0       	ldi	r18, 0x00	; 0
    145c:	30 e8       	ldi	r19, 0x80	; 128
    145e:	4b e3       	ldi	r20, 0x3B	; 59
    1460:	55 e4       	ldi	r21, 0x45	; 69
    1462:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1466:	dc 01       	movw	r26, r24
    1468:	cb 01       	movw	r24, r22
    146a:	f8 01       	movw	r30, r16
    146c:	80 83       	st	Z, r24
    146e:	91 83       	std	Z+1, r25	; 0x01
    1470:	a2 83       	std	Z+2, r26	; 0x02
    1472:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1474:	fe 01       	movw	r30, r28
    1476:	e3 54       	subi	r30, 0x43	; 67
    1478:	ff 4f       	sbci	r31, 0xFF	; 255
    147a:	60 81       	ld	r22, Z
    147c:	71 81       	ldd	r23, Z+1	; 0x01
    147e:	82 81       	ldd	r24, Z+2	; 0x02
    1480:	93 81       	ldd	r25, Z+3	; 0x03
    1482:	20 e0       	ldi	r18, 0x00	; 0
    1484:	30 e0       	ldi	r19, 0x00	; 0
    1486:	40 e8       	ldi	r20, 0x80	; 128
    1488:	5f e3       	ldi	r21, 0x3F	; 63
    148a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    148e:	88 23       	and	r24, r24
    1490:	44 f4       	brge	.+16     	; 0x14a2 <SmartHomeMenu+0x35e>
		__ticks = 1;
    1492:	fe 01       	movw	r30, r28
    1494:	e5 54       	subi	r30, 0x45	; 69
    1496:	ff 4f       	sbci	r31, 0xFF	; 255
    1498:	81 e0       	ldi	r24, 0x01	; 1
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	91 83       	std	Z+1, r25	; 0x01
    149e:	80 83       	st	Z, r24
    14a0:	64 c0       	rjmp	.+200    	; 0x156a <SmartHomeMenu+0x426>
	else if (__tmp > 65535)
    14a2:	fe 01       	movw	r30, r28
    14a4:	e3 54       	subi	r30, 0x43	; 67
    14a6:	ff 4f       	sbci	r31, 0xFF	; 255
    14a8:	60 81       	ld	r22, Z
    14aa:	71 81       	ldd	r23, Z+1	; 0x01
    14ac:	82 81       	ldd	r24, Z+2	; 0x02
    14ae:	93 81       	ldd	r25, Z+3	; 0x03
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	3f ef       	ldi	r19, 0xFF	; 255
    14b4:	4f e7       	ldi	r20, 0x7F	; 127
    14b6:	57 e4       	ldi	r21, 0x47	; 71
    14b8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14bc:	18 16       	cp	r1, r24
    14be:	0c f0       	brlt	.+2      	; 0x14c2 <SmartHomeMenu+0x37e>
    14c0:	43 c0       	rjmp	.+134    	; 0x1548 <SmartHomeMenu+0x404>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14c2:	fe 01       	movw	r30, r28
    14c4:	ef 53       	subi	r30, 0x3F	; 63
    14c6:	ff 4f       	sbci	r31, 0xFF	; 255
    14c8:	60 81       	ld	r22, Z
    14ca:	71 81       	ldd	r23, Z+1	; 0x01
    14cc:	82 81       	ldd	r24, Z+2	; 0x02
    14ce:	93 81       	ldd	r25, Z+3	; 0x03
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	40 e2       	ldi	r20, 0x20	; 32
    14d6:	51 e4       	ldi	r21, 0x41	; 65
    14d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14dc:	dc 01       	movw	r26, r24
    14de:	cb 01       	movw	r24, r22
    14e0:	8e 01       	movw	r16, r28
    14e2:	05 54       	subi	r16, 0x45	; 69
    14e4:	1f 4f       	sbci	r17, 0xFF	; 255
    14e6:	bc 01       	movw	r22, r24
    14e8:	cd 01       	movw	r24, r26
    14ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14ee:	dc 01       	movw	r26, r24
    14f0:	cb 01       	movw	r24, r22
    14f2:	f8 01       	movw	r30, r16
    14f4:	91 83       	std	Z+1, r25	; 0x01
    14f6:	80 83       	st	Z, r24
    14f8:	1f c0       	rjmp	.+62     	; 0x1538 <SmartHomeMenu+0x3f4>
    14fa:	fe 01       	movw	r30, r28
    14fc:	e7 54       	subi	r30, 0x47	; 71
    14fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1500:	8c e2       	ldi	r24, 0x2C	; 44
    1502:	91 e0       	ldi	r25, 0x01	; 1
    1504:	91 83       	std	Z+1, r25	; 0x01
    1506:	80 83       	st	Z, r24
    1508:	fe 01       	movw	r30, r28
    150a:	e7 54       	subi	r30, 0x47	; 71
    150c:	ff 4f       	sbci	r31, 0xFF	; 255
    150e:	80 81       	ld	r24, Z
    1510:	91 81       	ldd	r25, Z+1	; 0x01
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <SmartHomeMenu+0x3ce>
    1516:	fe 01       	movw	r30, r28
    1518:	e7 54       	subi	r30, 0x47	; 71
    151a:	ff 4f       	sbci	r31, 0xFF	; 255
    151c:	91 83       	std	Z+1, r25	; 0x01
    151e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1520:	de 01       	movw	r26, r28
    1522:	a5 54       	subi	r26, 0x45	; 69
    1524:	bf 4f       	sbci	r27, 0xFF	; 255
    1526:	fe 01       	movw	r30, r28
    1528:	e5 54       	subi	r30, 0x45	; 69
    152a:	ff 4f       	sbci	r31, 0xFF	; 255
    152c:	80 81       	ld	r24, Z
    152e:	91 81       	ldd	r25, Z+1	; 0x01
    1530:	01 97       	sbiw	r24, 0x01	; 1
    1532:	11 96       	adiw	r26, 0x01	; 1
    1534:	9c 93       	st	X, r25
    1536:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1538:	fe 01       	movw	r30, r28
    153a:	e5 54       	subi	r30, 0x45	; 69
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	80 81       	ld	r24, Z
    1540:	91 81       	ldd	r25, Z+1	; 0x01
    1542:	00 97       	sbiw	r24, 0x00	; 0
    1544:	d1 f6       	brne	.-76     	; 0x14fa <SmartHomeMenu+0x3b6>
    1546:	27 c0       	rjmp	.+78     	; 0x1596 <SmartHomeMenu+0x452>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1548:	8e 01       	movw	r16, r28
    154a:	05 54       	subi	r16, 0x45	; 69
    154c:	1f 4f       	sbci	r17, 0xFF	; 255
    154e:	fe 01       	movw	r30, r28
    1550:	e3 54       	subi	r30, 0x43	; 67
    1552:	ff 4f       	sbci	r31, 0xFF	; 255
    1554:	60 81       	ld	r22, Z
    1556:	71 81       	ldd	r23, Z+1	; 0x01
    1558:	82 81       	ldd	r24, Z+2	; 0x02
    155a:	93 81       	ldd	r25, Z+3	; 0x03
    155c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1560:	dc 01       	movw	r26, r24
    1562:	cb 01       	movw	r24, r22
    1564:	f8 01       	movw	r30, r16
    1566:	91 83       	std	Z+1, r25	; 0x01
    1568:	80 83       	st	Z, r24
    156a:	de 01       	movw	r26, r28
    156c:	a9 54       	subi	r26, 0x49	; 73
    156e:	bf 4f       	sbci	r27, 0xFF	; 255
    1570:	fe 01       	movw	r30, r28
    1572:	e5 54       	subi	r30, 0x45	; 69
    1574:	ff 4f       	sbci	r31, 0xFF	; 255
    1576:	80 81       	ld	r24, Z
    1578:	91 81       	ldd	r25, Z+1	; 0x01
    157a:	8d 93       	st	X+, r24
    157c:	9c 93       	st	X, r25
    157e:	fe 01       	movw	r30, r28
    1580:	e9 54       	subi	r30, 0x49	; 73
    1582:	ff 4f       	sbci	r31, 0xFF	; 255
    1584:	80 81       	ld	r24, Z
    1586:	91 81       	ldd	r25, Z+1	; 0x01
    1588:	01 97       	sbiw	r24, 0x01	; 1
    158a:	f1 f7       	brne	.-4      	; 0x1588 <SmartHomeMenu+0x444>
    158c:	fe 01       	movw	r30, r28
    158e:	e9 54       	subi	r30, 0x49	; 73
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	91 83       	std	Z+1, r25	; 0x01
    1594:	80 83       	st	Z, r24
				_delay_ms(1000);
				HLCD_vClearDisplay();
    1596:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    159a:	0c 94 06 14 	jmp	0x280c	; 0x280c <SmartHomeMenu+0x16c8>
			}
			break;
		case '2':
			if(LED_Status ==  ON)
    159e:	80 91 c7 02 	lds	r24, 0x02C7
    15a2:	81 30       	cpi	r24, 0x01	; 1
    15a4:	09 f0       	breq	.+2      	; 0x15a8 <SmartHomeMenu+0x464>
    15a6:	c8 c0       	rjmp	.+400    	; 0x1738 <SmartHomeMenu+0x5f4>
			{
				HLCD_vClearDisplay();
    15a8:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Lights OFF");
    15ac:	81 ee       	ldi	r24, 0xE1	; 225
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
				MDIO_vSetPinDir(LED_PORT,LED_PIN,DIO_OUTPUT);
    15b4:	82 e0       	ldi	r24, 0x02	; 2
    15b6:	63 e0       	ldi	r22, 0x03	; 3
    15b8:	41 e0       	ldi	r20, 0x01	; 1
    15ba:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
				MDIO_vSetPinVal(LED_PORT,LED_PIN,DIO_LOW);
    15be:	82 e0       	ldi	r24, 0x02	; 2
    15c0:	63 e0       	ldi	r22, 0x03	; 3
    15c2:	40 e0       	ldi	r20, 0x00	; 0
    15c4:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    15c8:	fe 01       	movw	r30, r28
    15ca:	ed 54       	subi	r30, 0x4D	; 77
    15cc:	ff 4f       	sbci	r31, 0xFF	; 255
    15ce:	80 e0       	ldi	r24, 0x00	; 0
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	aa ef       	ldi	r26, 0xFA	; 250
    15d4:	b3 e4       	ldi	r27, 0x43	; 67
    15d6:	80 83       	st	Z, r24
    15d8:	91 83       	std	Z+1, r25	; 0x01
    15da:	a2 83       	std	Z+2, r26	; 0x02
    15dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15de:	8e 01       	movw	r16, r28
    15e0:	01 55       	subi	r16, 0x51	; 81
    15e2:	1f 4f       	sbci	r17, 0xFF	; 255
    15e4:	fe 01       	movw	r30, r28
    15e6:	ed 54       	subi	r30, 0x4D	; 77
    15e8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ea:	60 81       	ld	r22, Z
    15ec:	71 81       	ldd	r23, Z+1	; 0x01
    15ee:	82 81       	ldd	r24, Z+2	; 0x02
    15f0:	93 81       	ldd	r25, Z+3	; 0x03
    15f2:	20 e0       	ldi	r18, 0x00	; 0
    15f4:	30 e8       	ldi	r19, 0x80	; 128
    15f6:	4b e3       	ldi	r20, 0x3B	; 59
    15f8:	55 e4       	ldi	r21, 0x45	; 69
    15fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	f8 01       	movw	r30, r16
    1604:	80 83       	st	Z, r24
    1606:	91 83       	std	Z+1, r25	; 0x01
    1608:	a2 83       	std	Z+2, r26	; 0x02
    160a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    160c:	fe 01       	movw	r30, r28
    160e:	e1 55       	subi	r30, 0x51	; 81
    1610:	ff 4f       	sbci	r31, 0xFF	; 255
    1612:	60 81       	ld	r22, Z
    1614:	71 81       	ldd	r23, Z+1	; 0x01
    1616:	82 81       	ldd	r24, Z+2	; 0x02
    1618:	93 81       	ldd	r25, Z+3	; 0x03
    161a:	20 e0       	ldi	r18, 0x00	; 0
    161c:	30 e0       	ldi	r19, 0x00	; 0
    161e:	40 e8       	ldi	r20, 0x80	; 128
    1620:	5f e3       	ldi	r21, 0x3F	; 63
    1622:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1626:	88 23       	and	r24, r24
    1628:	44 f4       	brge	.+16     	; 0x163a <SmartHomeMenu+0x4f6>
		__ticks = 1;
    162a:	fe 01       	movw	r30, r28
    162c:	e3 55       	subi	r30, 0x53	; 83
    162e:	ff 4f       	sbci	r31, 0xFF	; 255
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	91 83       	std	Z+1, r25	; 0x01
    1636:	80 83       	st	Z, r24
    1638:	64 c0       	rjmp	.+200    	; 0x1702 <SmartHomeMenu+0x5be>
	else if (__tmp > 65535)
    163a:	fe 01       	movw	r30, r28
    163c:	e1 55       	subi	r30, 0x51	; 81
    163e:	ff 4f       	sbci	r31, 0xFF	; 255
    1640:	60 81       	ld	r22, Z
    1642:	71 81       	ldd	r23, Z+1	; 0x01
    1644:	82 81       	ldd	r24, Z+2	; 0x02
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	3f ef       	ldi	r19, 0xFF	; 255
    164c:	4f e7       	ldi	r20, 0x7F	; 127
    164e:	57 e4       	ldi	r21, 0x47	; 71
    1650:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1654:	18 16       	cp	r1, r24
    1656:	0c f0       	brlt	.+2      	; 0x165a <SmartHomeMenu+0x516>
    1658:	43 c0       	rjmp	.+134    	; 0x16e0 <SmartHomeMenu+0x59c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    165a:	fe 01       	movw	r30, r28
    165c:	ed 54       	subi	r30, 0x4D	; 77
    165e:	ff 4f       	sbci	r31, 0xFF	; 255
    1660:	60 81       	ld	r22, Z
    1662:	71 81       	ldd	r23, Z+1	; 0x01
    1664:	82 81       	ldd	r24, Z+2	; 0x02
    1666:	93 81       	ldd	r25, Z+3	; 0x03
    1668:	20 e0       	ldi	r18, 0x00	; 0
    166a:	30 e0       	ldi	r19, 0x00	; 0
    166c:	40 e2       	ldi	r20, 0x20	; 32
    166e:	51 e4       	ldi	r21, 0x41	; 65
    1670:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1674:	dc 01       	movw	r26, r24
    1676:	cb 01       	movw	r24, r22
    1678:	8e 01       	movw	r16, r28
    167a:	03 55       	subi	r16, 0x53	; 83
    167c:	1f 4f       	sbci	r17, 0xFF	; 255
    167e:	bc 01       	movw	r22, r24
    1680:	cd 01       	movw	r24, r26
    1682:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	f8 01       	movw	r30, r16
    168c:	91 83       	std	Z+1, r25	; 0x01
    168e:	80 83       	st	Z, r24
    1690:	1f c0       	rjmp	.+62     	; 0x16d0 <SmartHomeMenu+0x58c>
    1692:	fe 01       	movw	r30, r28
    1694:	e5 55       	subi	r30, 0x55	; 85
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	8c e2       	ldi	r24, 0x2C	; 44
    169a:	91 e0       	ldi	r25, 0x01	; 1
    169c:	91 83       	std	Z+1, r25	; 0x01
    169e:	80 83       	st	Z, r24
    16a0:	fe 01       	movw	r30, r28
    16a2:	e5 55       	subi	r30, 0x55	; 85
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	80 81       	ld	r24, Z
    16a8:	91 81       	ldd	r25, Z+1	; 0x01
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	f1 f7       	brne	.-4      	; 0x16aa <SmartHomeMenu+0x566>
    16ae:	fe 01       	movw	r30, r28
    16b0:	e5 55       	subi	r30, 0x55	; 85
    16b2:	ff 4f       	sbci	r31, 0xFF	; 255
    16b4:	91 83       	std	Z+1, r25	; 0x01
    16b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16b8:	de 01       	movw	r26, r28
    16ba:	a3 55       	subi	r26, 0x53	; 83
    16bc:	bf 4f       	sbci	r27, 0xFF	; 255
    16be:	fe 01       	movw	r30, r28
    16c0:	e3 55       	subi	r30, 0x53	; 83
    16c2:	ff 4f       	sbci	r31, 0xFF	; 255
    16c4:	80 81       	ld	r24, Z
    16c6:	91 81       	ldd	r25, Z+1	; 0x01
    16c8:	01 97       	sbiw	r24, 0x01	; 1
    16ca:	11 96       	adiw	r26, 0x01	; 1
    16cc:	9c 93       	st	X, r25
    16ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16d0:	fe 01       	movw	r30, r28
    16d2:	e3 55       	subi	r30, 0x53	; 83
    16d4:	ff 4f       	sbci	r31, 0xFF	; 255
    16d6:	80 81       	ld	r24, Z
    16d8:	91 81       	ldd	r25, Z+1	; 0x01
    16da:	00 97       	sbiw	r24, 0x00	; 0
    16dc:	d1 f6       	brne	.-76     	; 0x1692 <SmartHomeMenu+0x54e>
    16de:	28 c0       	rjmp	.+80     	; 0x1730 <SmartHomeMenu+0x5ec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16e0:	8e 01       	movw	r16, r28
    16e2:	03 55       	subi	r16, 0x53	; 83
    16e4:	1f 4f       	sbci	r17, 0xFF	; 255
    16e6:	fe 01       	movw	r30, r28
    16e8:	e1 55       	subi	r30, 0x51	; 81
    16ea:	ff 4f       	sbci	r31, 0xFF	; 255
    16ec:	60 81       	ld	r22, Z
    16ee:	71 81       	ldd	r23, Z+1	; 0x01
    16f0:	82 81       	ldd	r24, Z+2	; 0x02
    16f2:	93 81       	ldd	r25, Z+3	; 0x03
    16f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16f8:	dc 01       	movw	r26, r24
    16fa:	cb 01       	movw	r24, r22
    16fc:	f8 01       	movw	r30, r16
    16fe:	91 83       	std	Z+1, r25	; 0x01
    1700:	80 83       	st	Z, r24
    1702:	de 01       	movw	r26, r28
    1704:	a7 55       	subi	r26, 0x57	; 87
    1706:	bf 4f       	sbci	r27, 0xFF	; 255
    1708:	fe 01       	movw	r30, r28
    170a:	e3 55       	subi	r30, 0x53	; 83
    170c:	ff 4f       	sbci	r31, 0xFF	; 255
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	11 96       	adiw	r26, 0x01	; 1
    1714:	9c 93       	st	X, r25
    1716:	8e 93       	st	-X, r24
    1718:	fe 01       	movw	r30, r28
    171a:	e7 55       	subi	r30, 0x57	; 87
    171c:	ff 4f       	sbci	r31, 0xFF	; 255
    171e:	80 81       	ld	r24, Z
    1720:	91 81       	ldd	r25, Z+1	; 0x01
    1722:	01 97       	sbiw	r24, 0x01	; 1
    1724:	f1 f7       	brne	.-4      	; 0x1722 <SmartHomeMenu+0x5de>
    1726:	fe 01       	movw	r30, r28
    1728:	e7 55       	subi	r30, 0x57	; 87
    172a:	ff 4f       	sbci	r31, 0xFF	; 255
    172c:	91 83       	std	Z+1, r25	; 0x01
    172e:	80 83       	st	Z, r24
				_delay_ms(500);
				LED_Status = OFF;
    1730:	10 92 c7 02 	sts	0x02C7, r1
    1734:	0c 94 06 14 	jmp	0x280c	; 0x280c <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    1738:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Off");
    173c:	8c ee       	ldi	r24, 0xEC	; 236
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1744:	fe 01       	movw	r30, r28
    1746:	eb 55       	subi	r30, 0x5B	; 91
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	aa e7       	ldi	r26, 0x7A	; 122
    1750:	b4 e4       	ldi	r27, 0x44	; 68
    1752:	80 83       	st	Z, r24
    1754:	91 83       	std	Z+1, r25	; 0x01
    1756:	a2 83       	std	Z+2, r26	; 0x02
    1758:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    175a:	8e 01       	movw	r16, r28
    175c:	0f 55       	subi	r16, 0x5F	; 95
    175e:	1f 4f       	sbci	r17, 0xFF	; 255
    1760:	fe 01       	movw	r30, r28
    1762:	eb 55       	subi	r30, 0x5B	; 91
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	60 81       	ld	r22, Z
    1768:	71 81       	ldd	r23, Z+1	; 0x01
    176a:	82 81       	ldd	r24, Z+2	; 0x02
    176c:	93 81       	ldd	r25, Z+3	; 0x03
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e8       	ldi	r19, 0x80	; 128
    1772:	4b e3       	ldi	r20, 0x3B	; 59
    1774:	55 e4       	ldi	r21, 0x45	; 69
    1776:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    177a:	dc 01       	movw	r26, r24
    177c:	cb 01       	movw	r24, r22
    177e:	f8 01       	movw	r30, r16
    1780:	80 83       	st	Z, r24
    1782:	91 83       	std	Z+1, r25	; 0x01
    1784:	a2 83       	std	Z+2, r26	; 0x02
    1786:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1788:	fe 01       	movw	r30, r28
    178a:	ef 55       	subi	r30, 0x5F	; 95
    178c:	ff 4f       	sbci	r31, 0xFF	; 255
    178e:	60 81       	ld	r22, Z
    1790:	71 81       	ldd	r23, Z+1	; 0x01
    1792:	82 81       	ldd	r24, Z+2	; 0x02
    1794:	93 81       	ldd	r25, Z+3	; 0x03
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	30 e0       	ldi	r19, 0x00	; 0
    179a:	40 e8       	ldi	r20, 0x80	; 128
    179c:	5f e3       	ldi	r21, 0x3F	; 63
    179e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    17a2:	88 23       	and	r24, r24
    17a4:	44 f4       	brge	.+16     	; 0x17b6 <SmartHomeMenu+0x672>
		__ticks = 1;
    17a6:	fe 01       	movw	r30, r28
    17a8:	e1 56       	subi	r30, 0x61	; 97
    17aa:	ff 4f       	sbci	r31, 0xFF	; 255
    17ac:	81 e0       	ldi	r24, 0x01	; 1
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	91 83       	std	Z+1, r25	; 0x01
    17b2:	80 83       	st	Z, r24
    17b4:	64 c0       	rjmp	.+200    	; 0x187e <SmartHomeMenu+0x73a>
	else if (__tmp > 65535)
    17b6:	fe 01       	movw	r30, r28
    17b8:	ef 55       	subi	r30, 0x5F	; 95
    17ba:	ff 4f       	sbci	r31, 0xFF	; 255
    17bc:	60 81       	ld	r22, Z
    17be:	71 81       	ldd	r23, Z+1	; 0x01
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	93 81       	ldd	r25, Z+3	; 0x03
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	3f ef       	ldi	r19, 0xFF	; 255
    17c8:	4f e7       	ldi	r20, 0x7F	; 127
    17ca:	57 e4       	ldi	r21, 0x47	; 71
    17cc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    17d0:	18 16       	cp	r1, r24
    17d2:	0c f0       	brlt	.+2      	; 0x17d6 <SmartHomeMenu+0x692>
    17d4:	43 c0       	rjmp	.+134    	; 0x185c <SmartHomeMenu+0x718>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17d6:	fe 01       	movw	r30, r28
    17d8:	eb 55       	subi	r30, 0x5B	; 91
    17da:	ff 4f       	sbci	r31, 0xFF	; 255
    17dc:	60 81       	ld	r22, Z
    17de:	71 81       	ldd	r23, Z+1	; 0x01
    17e0:	82 81       	ldd	r24, Z+2	; 0x02
    17e2:	93 81       	ldd	r25, Z+3	; 0x03
    17e4:	20 e0       	ldi	r18, 0x00	; 0
    17e6:	30 e0       	ldi	r19, 0x00	; 0
    17e8:	40 e2       	ldi	r20, 0x20	; 32
    17ea:	51 e4       	ldi	r21, 0x41	; 65
    17ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17f0:	dc 01       	movw	r26, r24
    17f2:	cb 01       	movw	r24, r22
    17f4:	8e 01       	movw	r16, r28
    17f6:	01 56       	subi	r16, 0x61	; 97
    17f8:	1f 4f       	sbci	r17, 0xFF	; 255
    17fa:	bc 01       	movw	r22, r24
    17fc:	cd 01       	movw	r24, r26
    17fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	f8 01       	movw	r30, r16
    1808:	91 83       	std	Z+1, r25	; 0x01
    180a:	80 83       	st	Z, r24
    180c:	1f c0       	rjmp	.+62     	; 0x184c <SmartHomeMenu+0x708>
    180e:	fe 01       	movw	r30, r28
    1810:	e3 56       	subi	r30, 0x63	; 99
    1812:	ff 4f       	sbci	r31, 0xFF	; 255
    1814:	8c e2       	ldi	r24, 0x2C	; 44
    1816:	91 e0       	ldi	r25, 0x01	; 1
    1818:	91 83       	std	Z+1, r25	; 0x01
    181a:	80 83       	st	Z, r24
    181c:	fe 01       	movw	r30, r28
    181e:	e3 56       	subi	r30, 0x63	; 99
    1820:	ff 4f       	sbci	r31, 0xFF	; 255
    1822:	80 81       	ld	r24, Z
    1824:	91 81       	ldd	r25, Z+1	; 0x01
    1826:	01 97       	sbiw	r24, 0x01	; 1
    1828:	f1 f7       	brne	.-4      	; 0x1826 <SmartHomeMenu+0x6e2>
    182a:	fe 01       	movw	r30, r28
    182c:	e3 56       	subi	r30, 0x63	; 99
    182e:	ff 4f       	sbci	r31, 0xFF	; 255
    1830:	91 83       	std	Z+1, r25	; 0x01
    1832:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1834:	de 01       	movw	r26, r28
    1836:	a1 56       	subi	r26, 0x61	; 97
    1838:	bf 4f       	sbci	r27, 0xFF	; 255
    183a:	fe 01       	movw	r30, r28
    183c:	e1 56       	subi	r30, 0x61	; 97
    183e:	ff 4f       	sbci	r31, 0xFF	; 255
    1840:	80 81       	ld	r24, Z
    1842:	91 81       	ldd	r25, Z+1	; 0x01
    1844:	01 97       	sbiw	r24, 0x01	; 1
    1846:	11 96       	adiw	r26, 0x01	; 1
    1848:	9c 93       	st	X, r25
    184a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    184c:	fe 01       	movw	r30, r28
    184e:	e1 56       	subi	r30, 0x61	; 97
    1850:	ff 4f       	sbci	r31, 0xFF	; 255
    1852:	80 81       	ld	r24, Z
    1854:	91 81       	ldd	r25, Z+1	; 0x01
    1856:	00 97       	sbiw	r24, 0x00	; 0
    1858:	d1 f6       	brne	.-76     	; 0x180e <SmartHomeMenu+0x6ca>
    185a:	27 c0       	rjmp	.+78     	; 0x18aa <SmartHomeMenu+0x766>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    185c:	8e 01       	movw	r16, r28
    185e:	01 56       	subi	r16, 0x61	; 97
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	fe 01       	movw	r30, r28
    1864:	ef 55       	subi	r30, 0x5F	; 95
    1866:	ff 4f       	sbci	r31, 0xFF	; 255
    1868:	60 81       	ld	r22, Z
    186a:	71 81       	ldd	r23, Z+1	; 0x01
    186c:	82 81       	ldd	r24, Z+2	; 0x02
    186e:	93 81       	ldd	r25, Z+3	; 0x03
    1870:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	f8 01       	movw	r30, r16
    187a:	91 83       	std	Z+1, r25	; 0x01
    187c:	80 83       	st	Z, r24
    187e:	de 01       	movw	r26, r28
    1880:	a5 56       	subi	r26, 0x65	; 101
    1882:	bf 4f       	sbci	r27, 0xFF	; 255
    1884:	fe 01       	movw	r30, r28
    1886:	e1 56       	subi	r30, 0x61	; 97
    1888:	ff 4f       	sbci	r31, 0xFF	; 255
    188a:	80 81       	ld	r24, Z
    188c:	91 81       	ldd	r25, Z+1	; 0x01
    188e:	8d 93       	st	X+, r24
    1890:	9c 93       	st	X, r25
    1892:	fe 01       	movw	r30, r28
    1894:	e5 56       	subi	r30, 0x65	; 101
    1896:	ff 4f       	sbci	r31, 0xFF	; 255
    1898:	80 81       	ld	r24, Z
    189a:	91 81       	ldd	r25, Z+1	; 0x01
    189c:	01 97       	sbiw	r24, 0x01	; 1
    189e:	f1 f7       	brne	.-4      	; 0x189c <SmartHomeMenu+0x758>
    18a0:	fe 01       	movw	r30, r28
    18a2:	e5 56       	subi	r30, 0x65	; 101
    18a4:	ff 4f       	sbci	r31, 0xFF	; 255
    18a6:	91 83       	std	Z+1, r25	; 0x01
    18a8:	80 83       	st	Z, r24
				_delay_ms(1000);
				HLCD_vClearDisplay();
    18aa:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    18ae:	0c 94 06 14 	jmp	0x280c	; 0x280c <SmartHomeMenu+0x16c8>
			}

			break;

		case '3':
			HLCD_vClearDisplay();
    18b2:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    18b6:	88 ef       	ldi	r24, 0xF8	; 248
    18b8:	90 e0       	ldi	r25, 0x00	; 0
    18ba:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    18be:	fe 01       	movw	r30, r28
    18c0:	e9 56       	subi	r30, 0x69	; 105
    18c2:	ff 4f       	sbci	r31, 0xFF	; 255
    18c4:	80 e0       	ldi	r24, 0x00	; 0
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	a8 e4       	ldi	r26, 0x48	; 72
    18ca:	b3 e4       	ldi	r27, 0x43	; 67
    18cc:	80 83       	st	Z, r24
    18ce:	91 83       	std	Z+1, r25	; 0x01
    18d0:	a2 83       	std	Z+2, r26	; 0x02
    18d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18d4:	8e 01       	movw	r16, r28
    18d6:	0d 56       	subi	r16, 0x6D	; 109
    18d8:	1f 4f       	sbci	r17, 0xFF	; 255
    18da:	fe 01       	movw	r30, r28
    18dc:	e9 56       	subi	r30, 0x69	; 105
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	60 81       	ld	r22, Z
    18e2:	71 81       	ldd	r23, Z+1	; 0x01
    18e4:	82 81       	ldd	r24, Z+2	; 0x02
    18e6:	93 81       	ldd	r25, Z+3	; 0x03
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	30 e8       	ldi	r19, 0x80	; 128
    18ec:	4b e3       	ldi	r20, 0x3B	; 59
    18ee:	55 e4       	ldi	r21, 0x45	; 69
    18f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18f4:	dc 01       	movw	r26, r24
    18f6:	cb 01       	movw	r24, r22
    18f8:	f8 01       	movw	r30, r16
    18fa:	80 83       	st	Z, r24
    18fc:	91 83       	std	Z+1, r25	; 0x01
    18fe:	a2 83       	std	Z+2, r26	; 0x02
    1900:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1902:	fe 01       	movw	r30, r28
    1904:	ed 56       	subi	r30, 0x6D	; 109
    1906:	ff 4f       	sbci	r31, 0xFF	; 255
    1908:	60 81       	ld	r22, Z
    190a:	71 81       	ldd	r23, Z+1	; 0x01
    190c:	82 81       	ldd	r24, Z+2	; 0x02
    190e:	93 81       	ldd	r25, Z+3	; 0x03
    1910:	20 e0       	ldi	r18, 0x00	; 0
    1912:	30 e0       	ldi	r19, 0x00	; 0
    1914:	40 e8       	ldi	r20, 0x80	; 128
    1916:	5f e3       	ldi	r21, 0x3F	; 63
    1918:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    191c:	88 23       	and	r24, r24
    191e:	44 f4       	brge	.+16     	; 0x1930 <SmartHomeMenu+0x7ec>
		__ticks = 1;
    1920:	fe 01       	movw	r30, r28
    1922:	ef 56       	subi	r30, 0x6F	; 111
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	91 83       	std	Z+1, r25	; 0x01
    192c:	80 83       	st	Z, r24
    192e:	64 c0       	rjmp	.+200    	; 0x19f8 <SmartHomeMenu+0x8b4>
	else if (__tmp > 65535)
    1930:	fe 01       	movw	r30, r28
    1932:	ed 56       	subi	r30, 0x6D	; 109
    1934:	ff 4f       	sbci	r31, 0xFF	; 255
    1936:	60 81       	ld	r22, Z
    1938:	71 81       	ldd	r23, Z+1	; 0x01
    193a:	82 81       	ldd	r24, Z+2	; 0x02
    193c:	93 81       	ldd	r25, Z+3	; 0x03
    193e:	20 e0       	ldi	r18, 0x00	; 0
    1940:	3f ef       	ldi	r19, 0xFF	; 255
    1942:	4f e7       	ldi	r20, 0x7F	; 127
    1944:	57 e4       	ldi	r21, 0x47	; 71
    1946:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    194a:	18 16       	cp	r1, r24
    194c:	0c f0       	brlt	.+2      	; 0x1950 <SmartHomeMenu+0x80c>
    194e:	43 c0       	rjmp	.+134    	; 0x19d6 <SmartHomeMenu+0x892>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1950:	fe 01       	movw	r30, r28
    1952:	e9 56       	subi	r30, 0x69	; 105
    1954:	ff 4f       	sbci	r31, 0xFF	; 255
    1956:	60 81       	ld	r22, Z
    1958:	71 81       	ldd	r23, Z+1	; 0x01
    195a:	82 81       	ldd	r24, Z+2	; 0x02
    195c:	93 81       	ldd	r25, Z+3	; 0x03
    195e:	20 e0       	ldi	r18, 0x00	; 0
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	40 e2       	ldi	r20, 0x20	; 32
    1964:	51 e4       	ldi	r21, 0x41	; 65
    1966:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    196a:	dc 01       	movw	r26, r24
    196c:	cb 01       	movw	r24, r22
    196e:	8e 01       	movw	r16, r28
    1970:	0f 56       	subi	r16, 0x6F	; 111
    1972:	1f 4f       	sbci	r17, 0xFF	; 255
    1974:	bc 01       	movw	r22, r24
    1976:	cd 01       	movw	r24, r26
    1978:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    197c:	dc 01       	movw	r26, r24
    197e:	cb 01       	movw	r24, r22
    1980:	f8 01       	movw	r30, r16
    1982:	91 83       	std	Z+1, r25	; 0x01
    1984:	80 83       	st	Z, r24
    1986:	1f c0       	rjmp	.+62     	; 0x19c6 <SmartHomeMenu+0x882>
    1988:	fe 01       	movw	r30, r28
    198a:	e1 57       	subi	r30, 0x71	; 113
    198c:	ff 4f       	sbci	r31, 0xFF	; 255
    198e:	8c e2       	ldi	r24, 0x2C	; 44
    1990:	91 e0       	ldi	r25, 0x01	; 1
    1992:	91 83       	std	Z+1, r25	; 0x01
    1994:	80 83       	st	Z, r24
    1996:	fe 01       	movw	r30, r28
    1998:	e1 57       	subi	r30, 0x71	; 113
    199a:	ff 4f       	sbci	r31, 0xFF	; 255
    199c:	80 81       	ld	r24, Z
    199e:	91 81       	ldd	r25, Z+1	; 0x01
    19a0:	01 97       	sbiw	r24, 0x01	; 1
    19a2:	f1 f7       	brne	.-4      	; 0x19a0 <SmartHomeMenu+0x85c>
    19a4:	fe 01       	movw	r30, r28
    19a6:	e1 57       	subi	r30, 0x71	; 113
    19a8:	ff 4f       	sbci	r31, 0xFF	; 255
    19aa:	91 83       	std	Z+1, r25	; 0x01
    19ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ae:	de 01       	movw	r26, r28
    19b0:	af 56       	subi	r26, 0x6F	; 111
    19b2:	bf 4f       	sbci	r27, 0xFF	; 255
    19b4:	fe 01       	movw	r30, r28
    19b6:	ef 56       	subi	r30, 0x6F	; 111
    19b8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ba:	80 81       	ld	r24, Z
    19bc:	91 81       	ldd	r25, Z+1	; 0x01
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	11 96       	adiw	r26, 0x01	; 1
    19c2:	9c 93       	st	X, r25
    19c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c6:	fe 01       	movw	r30, r28
    19c8:	ef 56       	subi	r30, 0x6F	; 111
    19ca:	ff 4f       	sbci	r31, 0xFF	; 255
    19cc:	80 81       	ld	r24, Z
    19ce:	91 81       	ldd	r25, Z+1	; 0x01
    19d0:	00 97       	sbiw	r24, 0x00	; 0
    19d2:	d1 f6       	brne	.-76     	; 0x1988 <SmartHomeMenu+0x844>
    19d4:	27 c0       	rjmp	.+78     	; 0x1a24 <SmartHomeMenu+0x8e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d6:	8e 01       	movw	r16, r28
    19d8:	0f 56       	subi	r16, 0x6F	; 111
    19da:	1f 4f       	sbci	r17, 0xFF	; 255
    19dc:	fe 01       	movw	r30, r28
    19de:	ed 56       	subi	r30, 0x6D	; 109
    19e0:	ff 4f       	sbci	r31, 0xFF	; 255
    19e2:	60 81       	ld	r22, Z
    19e4:	71 81       	ldd	r23, Z+1	; 0x01
    19e6:	82 81       	ldd	r24, Z+2	; 0x02
    19e8:	93 81       	ldd	r25, Z+3	; 0x03
    19ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19ee:	dc 01       	movw	r26, r24
    19f0:	cb 01       	movw	r24, r22
    19f2:	f8 01       	movw	r30, r16
    19f4:	91 83       	std	Z+1, r25	; 0x01
    19f6:	80 83       	st	Z, r24
    19f8:	de 01       	movw	r26, r28
    19fa:	a3 57       	subi	r26, 0x73	; 115
    19fc:	bf 4f       	sbci	r27, 0xFF	; 255
    19fe:	fe 01       	movw	r30, r28
    1a00:	ef 56       	subi	r30, 0x6F	; 111
    1a02:	ff 4f       	sbci	r31, 0xFF	; 255
    1a04:	80 81       	ld	r24, Z
    1a06:	91 81       	ldd	r25, Z+1	; 0x01
    1a08:	8d 93       	st	X+, r24
    1a0a:	9c 93       	st	X, r25
    1a0c:	fe 01       	movw	r30, r28
    1a0e:	e3 57       	subi	r30, 0x73	; 115
    1a10:	ff 4f       	sbci	r31, 0xFF	; 255
    1a12:	80 81       	ld	r24, Z
    1a14:	91 81       	ldd	r25, Z+1	; 0x01
    1a16:	01 97       	sbiw	r24, 0x01	; 1
    1a18:	f1 f7       	brne	.-4      	; 0x1a16 <SmartHomeMenu+0x8d2>
    1a1a:	fe 01       	movw	r30, r28
    1a1c:	e3 57       	subi	r30, 0x73	; 115
    1a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a20:	91 83       	std	Z+1, r25	; 0x01
    1a22:	80 83       	st	Z, r24
			_delay_ms(200);
			HLCD_vClearDisplay();
    1a24:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    1a28:	f1 c6       	rjmp	.+3554   	; 0x280c <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    1a2a:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    1a2e:	8d ef       	ldi	r24, 0xFD	; 253
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1a36:	ea c6       	rjmp	.+3540   	; 0x280c <SmartHomeMenu+0x16c8>


	// Timer
	case '2':
	{
		u8 Timer_Action = NO_KEY_PRESSED;
    1a38:	fe 01       	movw	r30, r28
    1a3a:	eb 52       	subi	r30, 0x2B	; 43
    1a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3e:	8f ef       	ldi	r24, 0xFF	; 255
    1a40:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
    1a42:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
		HLCD_vDisplayLongString("1- Set Timer");
    1a46:	89 e0       	ldi	r24, 0x09	; 9
    1a48:	91 e0       	ldi	r25, 0x01	; 1
    1a4a:	0e 94 32 25 	call	0x4a64	; 0x4a64 <HLCD_vDisplayLongString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    1a4e:	82 e0       	ldi	r24, 0x02	; 2
    1a50:	61 e0       	ldi	r22, 0x01	; 1
    1a52:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
		HLCD_vDisplayString("2- Back");
    1a56:	86 e1       	ldi	r24, 0x16	; 22
    1a58:	91 e0       	ldi	r25, 0x01	; 1
    1a5a:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1a5e:	06 c0       	rjmp	.+12     	; 0x1a6c <SmartHomeMenu+0x928>
		while(Timer_Action == NO_KEY_PRESSED)
		{
			Timer_Action = HKEYPAD_u8GetPressedKey();
    1a60:	0e 94 56 26 	call	0x4cac	; 0x4cac <HKEYPAD_u8GetPressedKey>
    1a64:	fe 01       	movw	r30, r28
    1a66:	eb 52       	subi	r30, 0x2B	; 43
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 83       	st	Z, r24

		HLCD_vClearDisplay();
		HLCD_vDisplayLongString("1- Set Timer");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("2- Back");
		while(Timer_Action == NO_KEY_PRESSED)
    1a6c:	fe 01       	movw	r30, r28
    1a6e:	eb 52       	subi	r30, 0x2B	; 43
    1a70:	ff 4f       	sbci	r31, 0xFF	; 255
    1a72:	80 81       	ld	r24, Z
    1a74:	8f 3f       	cpi	r24, 0xFF	; 255
    1a76:	a1 f3       	breq	.-24     	; 0x1a60 <SmartHomeMenu+0x91c>
		{
			Timer_Action = HKEYPAD_u8GetPressedKey();
		}

		switch(Timer_Action)
    1a78:	fe 01       	movw	r30, r28
    1a7a:	eb 52       	subi	r30, 0x2B	; 43
    1a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7e:	80 81       	ld	r24, Z
    1a80:	28 2f       	mov	r18, r24
    1a82:	30 e0       	ldi	r19, 0x00	; 0
    1a84:	c6 52       	subi	r28, 0x26	; 38
    1a86:	df 4f       	sbci	r29, 0xFF	; 255
    1a88:	39 83       	std	Y+1, r19	; 0x01
    1a8a:	28 83       	st	Y, r18
    1a8c:	ca 5d       	subi	r28, 0xDA	; 218
    1a8e:	d0 40       	sbci	r29, 0x00	; 0
    1a90:	c6 52       	subi	r28, 0x26	; 38
    1a92:	df 4f       	sbci	r29, 0xFF	; 255
    1a94:	88 81       	ld	r24, Y
    1a96:	99 81       	ldd	r25, Y+1	; 0x01
    1a98:	ca 5d       	subi	r28, 0xDA	; 218
    1a9a:	d0 40       	sbci	r29, 0x00	; 0
    1a9c:	81 33       	cpi	r24, 0x31	; 49
    1a9e:	91 05       	cpc	r25, r1
    1aa0:	59 f0       	breq	.+22     	; 0x1ab8 <SmartHomeMenu+0x974>
    1aa2:	c6 52       	subi	r28, 0x26	; 38
    1aa4:	df 4f       	sbci	r29, 0xFF	; 255
    1aa6:	e8 81       	ld	r30, Y
    1aa8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aaa:	ca 5d       	subi	r28, 0xDA	; 218
    1aac:	d0 40       	sbci	r29, 0x00	; 0
    1aae:	e2 33       	cpi	r30, 0x32	; 50
    1ab0:	f1 05       	cpc	r31, r1
    1ab2:	09 f4       	brne	.+2      	; 0x1ab6 <SmartHomeMenu+0x972>
    1ab4:	e3 c0       	rjmp	.+454    	; 0x1c7c <SmartHomeMenu+0xb38>
    1ab6:	9e c1       	rjmp	.+828    	; 0x1df4 <SmartHomeMenu+0xcb0>
		{
		case '1':
			HLCD_vClearDisplay();
    1ab8:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayLongString("Set Timer in Sec");
    1abc:	8e e1       	ldi	r24, 0x1E	; 30
    1abe:	91 e0       	ldi	r25, 0x01	; 1
    1ac0:	0e 94 32 25 	call	0x4a64	; 0x4a64 <HLCD_vDisplayLongString>
			u8 Time = HKEYPAD_u16MultiDigitInput();
    1ac4:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <HKEYPAD_u16MultiDigitInput>
    1ac8:	fe 01       	movw	r30, r28
    1aca:	ec 52       	subi	r30, 0x2C	; 44
    1acc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ace:	80 83       	st	Z, r24
			HLCD_vGoToPos(LCD_ROW2 , LCD_COL1);
    1ad0:	82 e0       	ldi	r24, 0x02	; 2
    1ad2:	61 e0       	ldi	r22, 0x01	; 1
    1ad4:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
			HLCD_vDisplayNumber(Time);
    1ad8:	fe 01       	movw	r30, r28
    1ada:	ec 52       	subi	r30, 0x2C	; 44
    1adc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ade:	80 81       	ld	r24, Z
    1ae0:	88 2f       	mov	r24, r24
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 aa 25 	call	0x4b54	; 0x4b54 <HLCD_vDisplayNumber>
			HSSD_vCountDown(SSD_PORT , Time , SSD_DELAY);
    1ae8:	fe 01       	movw	r30, r28
    1aea:	ec 52       	subi	r30, 0x2C	; 44
    1aec:	ff 4f       	sbci	r31, 0xFF	; 255
    1aee:	90 81       	ld	r25, Z
    1af0:	81 e0       	ldi	r24, 0x01	; 1
    1af2:	69 2f       	mov	r22, r25
    1af4:	44 ef       	ldi	r20, 0xF4	; 244
    1af6:	51 e0       	ldi	r21, 0x01	; 1
    1af8:	0e 94 f5 1d 	call	0x3bea	; 0x3bea <HSSD_vCountDown>
			HLCD_vClearDisplay();
    1afc:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HBUZZER_vTurnOn();
    1b00:	0e 94 49 28 	call	0x5092	; 0x5092 <HBUZZER_vTurnOn>
			HLCD_vDisplayString("Time Finished");
    1b04:	8f e2       	ldi	r24, 0x2F	; 47
    1b06:	91 e0       	ldi	r25, 0x01	; 1
    1b08:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	e7 57       	subi	r30, 0x77	; 119
    1b10:	ff 4f       	sbci	r31, 0xFF	; 255
    1b12:	80 e0       	ldi	r24, 0x00	; 0
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	aa ef       	ldi	r26, 0xFA	; 250
    1b18:	b3 e4       	ldi	r27, 0x43	; 67
    1b1a:	80 83       	st	Z, r24
    1b1c:	91 83       	std	Z+1, r25	; 0x01
    1b1e:	a2 83       	std	Z+2, r26	; 0x02
    1b20:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b22:	8e 01       	movw	r16, r28
    1b24:	0b 57       	subi	r16, 0x7B	; 123
    1b26:	1f 4f       	sbci	r17, 0xFF	; 255
    1b28:	fe 01       	movw	r30, r28
    1b2a:	e7 57       	subi	r30, 0x77	; 119
    1b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b2e:	60 81       	ld	r22, Z
    1b30:	71 81       	ldd	r23, Z+1	; 0x01
    1b32:	82 81       	ldd	r24, Z+2	; 0x02
    1b34:	93 81       	ldd	r25, Z+3	; 0x03
    1b36:	20 e0       	ldi	r18, 0x00	; 0
    1b38:	30 e8       	ldi	r19, 0x80	; 128
    1b3a:	4b e3       	ldi	r20, 0x3B	; 59
    1b3c:	55 e4       	ldi	r21, 0x45	; 69
    1b3e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b42:	dc 01       	movw	r26, r24
    1b44:	cb 01       	movw	r24, r22
    1b46:	f8 01       	movw	r30, r16
    1b48:	80 83       	st	Z, r24
    1b4a:	91 83       	std	Z+1, r25	; 0x01
    1b4c:	a2 83       	std	Z+2, r26	; 0x02
    1b4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b50:	fe 01       	movw	r30, r28
    1b52:	eb 57       	subi	r30, 0x7B	; 123
    1b54:	ff 4f       	sbci	r31, 0xFF	; 255
    1b56:	60 81       	ld	r22, Z
    1b58:	71 81       	ldd	r23, Z+1	; 0x01
    1b5a:	82 81       	ldd	r24, Z+2	; 0x02
    1b5c:	93 81       	ldd	r25, Z+3	; 0x03
    1b5e:	20 e0       	ldi	r18, 0x00	; 0
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	40 e8       	ldi	r20, 0x80	; 128
    1b64:	5f e3       	ldi	r21, 0x3F	; 63
    1b66:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b6a:	88 23       	and	r24, r24
    1b6c:	44 f4       	brge	.+16     	; 0x1b7e <SmartHomeMenu+0xa3a>
		__ticks = 1;
    1b6e:	fe 01       	movw	r30, r28
    1b70:	ed 57       	subi	r30, 0x7D	; 125
    1b72:	ff 4f       	sbci	r31, 0xFF	; 255
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	91 83       	std	Z+1, r25	; 0x01
    1b7a:	80 83       	st	Z, r24
    1b7c:	64 c0       	rjmp	.+200    	; 0x1c46 <SmartHomeMenu+0xb02>
	else if (__tmp > 65535)
    1b7e:	fe 01       	movw	r30, r28
    1b80:	eb 57       	subi	r30, 0x7B	; 123
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	3f ef       	ldi	r19, 0xFF	; 255
    1b90:	4f e7       	ldi	r20, 0x7F	; 127
    1b92:	57 e4       	ldi	r21, 0x47	; 71
    1b94:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b98:	18 16       	cp	r1, r24
    1b9a:	0c f0       	brlt	.+2      	; 0x1b9e <SmartHomeMenu+0xa5a>
    1b9c:	43 c0       	rjmp	.+134    	; 0x1c24 <SmartHomeMenu+0xae0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b9e:	fe 01       	movw	r30, r28
    1ba0:	e7 57       	subi	r30, 0x77	; 119
    1ba2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba4:	60 81       	ld	r22, Z
    1ba6:	71 81       	ldd	r23, Z+1	; 0x01
    1ba8:	82 81       	ldd	r24, Z+2	; 0x02
    1baa:	93 81       	ldd	r25, Z+3	; 0x03
    1bac:	20 e0       	ldi	r18, 0x00	; 0
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	40 e2       	ldi	r20, 0x20	; 32
    1bb2:	51 e4       	ldi	r21, 0x41	; 65
    1bb4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bb8:	dc 01       	movw	r26, r24
    1bba:	cb 01       	movw	r24, r22
    1bbc:	8e 01       	movw	r16, r28
    1bbe:	0d 57       	subi	r16, 0x7D	; 125
    1bc0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bc2:	bc 01       	movw	r22, r24
    1bc4:	cd 01       	movw	r24, r26
    1bc6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bca:	dc 01       	movw	r26, r24
    1bcc:	cb 01       	movw	r24, r22
    1bce:	f8 01       	movw	r30, r16
    1bd0:	91 83       	std	Z+1, r25	; 0x01
    1bd2:	80 83       	st	Z, r24
    1bd4:	1f c0       	rjmp	.+62     	; 0x1c14 <SmartHomeMenu+0xad0>
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	ef 57       	subi	r30, 0x7F	; 127
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	8c e2       	ldi	r24, 0x2C	; 44
    1bde:	91 e0       	ldi	r25, 0x01	; 1
    1be0:	91 83       	std	Z+1, r25	; 0x01
    1be2:	80 83       	st	Z, r24
    1be4:	fe 01       	movw	r30, r28
    1be6:	ef 57       	subi	r30, 0x7F	; 127
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	80 81       	ld	r24, Z
    1bec:	91 81       	ldd	r25, Z+1	; 0x01
    1bee:	01 97       	sbiw	r24, 0x01	; 1
    1bf0:	f1 f7       	brne	.-4      	; 0x1bee <SmartHomeMenu+0xaaa>
    1bf2:	fe 01       	movw	r30, r28
    1bf4:	ef 57       	subi	r30, 0x7F	; 127
    1bf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf8:	91 83       	std	Z+1, r25	; 0x01
    1bfa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bfc:	de 01       	movw	r26, r28
    1bfe:	ad 57       	subi	r26, 0x7D	; 125
    1c00:	bf 4f       	sbci	r27, 0xFF	; 255
    1c02:	fe 01       	movw	r30, r28
    1c04:	ed 57       	subi	r30, 0x7D	; 125
    1c06:	ff 4f       	sbci	r31, 0xFF	; 255
    1c08:	80 81       	ld	r24, Z
    1c0a:	91 81       	ldd	r25, Z+1	; 0x01
    1c0c:	01 97       	sbiw	r24, 0x01	; 1
    1c0e:	11 96       	adiw	r26, 0x01	; 1
    1c10:	9c 93       	st	X, r25
    1c12:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c14:	fe 01       	movw	r30, r28
    1c16:	ed 57       	subi	r30, 0x7D	; 125
    1c18:	ff 4f       	sbci	r31, 0xFF	; 255
    1c1a:	80 81       	ld	r24, Z
    1c1c:	91 81       	ldd	r25, Z+1	; 0x01
    1c1e:	00 97       	sbiw	r24, 0x00	; 0
    1c20:	d1 f6       	brne	.-76     	; 0x1bd6 <SmartHomeMenu+0xa92>
    1c22:	27 c0       	rjmp	.+78     	; 0x1c72 <SmartHomeMenu+0xb2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c24:	8e 01       	movw	r16, r28
    1c26:	0d 57       	subi	r16, 0x7D	; 125
    1c28:	1f 4f       	sbci	r17, 0xFF	; 255
    1c2a:	fe 01       	movw	r30, r28
    1c2c:	eb 57       	subi	r30, 0x7B	; 123
    1c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c30:	60 81       	ld	r22, Z
    1c32:	71 81       	ldd	r23, Z+1	; 0x01
    1c34:	82 81       	ldd	r24, Z+2	; 0x02
    1c36:	93 81       	ldd	r25, Z+3	; 0x03
    1c38:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c3c:	dc 01       	movw	r26, r24
    1c3e:	cb 01       	movw	r24, r22
    1c40:	f8 01       	movw	r30, r16
    1c42:	91 83       	std	Z+1, r25	; 0x01
    1c44:	80 83       	st	Z, r24
    1c46:	de 01       	movw	r26, r28
    1c48:	a1 58       	subi	r26, 0x81	; 129
    1c4a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c4c:	fe 01       	movw	r30, r28
    1c4e:	ed 57       	subi	r30, 0x7D	; 125
    1c50:	ff 4f       	sbci	r31, 0xFF	; 255
    1c52:	80 81       	ld	r24, Z
    1c54:	91 81       	ldd	r25, Z+1	; 0x01
    1c56:	8d 93       	st	X+, r24
    1c58:	9c 93       	st	X, r25
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	e1 58       	subi	r30, 0x81	; 129
    1c5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c60:	80 81       	ld	r24, Z
    1c62:	91 81       	ldd	r25, Z+1	; 0x01
    1c64:	01 97       	sbiw	r24, 0x01	; 1
    1c66:	f1 f7       	brne	.-4      	; 0x1c64 <SmartHomeMenu+0xb20>
    1c68:	fe 01       	movw	r30, r28
    1c6a:	e1 58       	subi	r30, 0x81	; 129
    1c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6e:	91 83       	std	Z+1, r25	; 0x01
    1c70:	80 83       	st	Z, r24
			_delay_ms(500);
			HBUZZER_vTurnOff();
    1c72:	0e 94 55 28 	call	0x50aa	; 0x50aa <HBUZZER_vTurnOff>
			HLCD_vClearDisplay();
    1c76:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    1c7a:	c8 c5       	rjmp	.+2960   	; 0x280c <SmartHomeMenu+0x16c8>
			break;

		case '2':
			HLCD_vClearDisplay();
    1c7c:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    1c80:	88 ef       	ldi	r24, 0xF8	; 248
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1c88:	fe 01       	movw	r30, r28
    1c8a:	e5 58       	subi	r30, 0x85	; 133
    1c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8e:	80 e0       	ldi	r24, 0x00	; 0
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	a8 e4       	ldi	r26, 0x48	; 72
    1c94:	b3 e4       	ldi	r27, 0x43	; 67
    1c96:	80 83       	st	Z, r24
    1c98:	91 83       	std	Z+1, r25	; 0x01
    1c9a:	a2 83       	std	Z+2, r26	; 0x02
    1c9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c9e:	8e 01       	movw	r16, r28
    1ca0:	09 58       	subi	r16, 0x89	; 137
    1ca2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e5 58       	subi	r30, 0x85	; 133
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	60 81       	ld	r22, Z
    1cac:	71 81       	ldd	r23, Z+1	; 0x01
    1cae:	82 81       	ldd	r24, Z+2	; 0x02
    1cb0:	93 81       	ldd	r25, Z+3	; 0x03
    1cb2:	20 e0       	ldi	r18, 0x00	; 0
    1cb4:	30 e8       	ldi	r19, 0x80	; 128
    1cb6:	4b e3       	ldi	r20, 0x3B	; 59
    1cb8:	55 e4       	ldi	r21, 0x45	; 69
    1cba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1cbe:	dc 01       	movw	r26, r24
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	f8 01       	movw	r30, r16
    1cc4:	80 83       	st	Z, r24
    1cc6:	91 83       	std	Z+1, r25	; 0x01
    1cc8:	a2 83       	std	Z+2, r26	; 0x02
    1cca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ccc:	fe 01       	movw	r30, r28
    1cce:	e9 58       	subi	r30, 0x89	; 137
    1cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd2:	60 81       	ld	r22, Z
    1cd4:	71 81       	ldd	r23, Z+1	; 0x01
    1cd6:	82 81       	ldd	r24, Z+2	; 0x02
    1cd8:	93 81       	ldd	r25, Z+3	; 0x03
    1cda:	20 e0       	ldi	r18, 0x00	; 0
    1cdc:	30 e0       	ldi	r19, 0x00	; 0
    1cde:	40 e8       	ldi	r20, 0x80	; 128
    1ce0:	5f e3       	ldi	r21, 0x3F	; 63
    1ce2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ce6:	88 23       	and	r24, r24
    1ce8:	44 f4       	brge	.+16     	; 0x1cfa <SmartHomeMenu+0xbb6>
		__ticks = 1;
    1cea:	fe 01       	movw	r30, r28
    1cec:	eb 58       	subi	r30, 0x8B	; 139
    1cee:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf0:	81 e0       	ldi	r24, 0x01	; 1
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	91 83       	std	Z+1, r25	; 0x01
    1cf6:	80 83       	st	Z, r24
    1cf8:	64 c0       	rjmp	.+200    	; 0x1dc2 <SmartHomeMenu+0xc7e>
	else if (__tmp > 65535)
    1cfa:	fe 01       	movw	r30, r28
    1cfc:	e9 58       	subi	r30, 0x89	; 137
    1cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1d00:	60 81       	ld	r22, Z
    1d02:	71 81       	ldd	r23, Z+1	; 0x01
    1d04:	82 81       	ldd	r24, Z+2	; 0x02
    1d06:	93 81       	ldd	r25, Z+3	; 0x03
    1d08:	20 e0       	ldi	r18, 0x00	; 0
    1d0a:	3f ef       	ldi	r19, 0xFF	; 255
    1d0c:	4f e7       	ldi	r20, 0x7F	; 127
    1d0e:	57 e4       	ldi	r21, 0x47	; 71
    1d10:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d14:	18 16       	cp	r1, r24
    1d16:	0c f0       	brlt	.+2      	; 0x1d1a <SmartHomeMenu+0xbd6>
    1d18:	43 c0       	rjmp	.+134    	; 0x1da0 <SmartHomeMenu+0xc5c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	e5 58       	subi	r30, 0x85	; 133
    1d1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d20:	60 81       	ld	r22, Z
    1d22:	71 81       	ldd	r23, Z+1	; 0x01
    1d24:	82 81       	ldd	r24, Z+2	; 0x02
    1d26:	93 81       	ldd	r25, Z+3	; 0x03
    1d28:	20 e0       	ldi	r18, 0x00	; 0
    1d2a:	30 e0       	ldi	r19, 0x00	; 0
    1d2c:	40 e2       	ldi	r20, 0x20	; 32
    1d2e:	51 e4       	ldi	r21, 0x41	; 65
    1d30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d34:	dc 01       	movw	r26, r24
    1d36:	cb 01       	movw	r24, r22
    1d38:	8e 01       	movw	r16, r28
    1d3a:	0b 58       	subi	r16, 0x8B	; 139
    1d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d3e:	bc 01       	movw	r22, r24
    1d40:	cd 01       	movw	r24, r26
    1d42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d46:	dc 01       	movw	r26, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	f8 01       	movw	r30, r16
    1d4c:	91 83       	std	Z+1, r25	; 0x01
    1d4e:	80 83       	st	Z, r24
    1d50:	1f c0       	rjmp	.+62     	; 0x1d90 <SmartHomeMenu+0xc4c>
    1d52:	fe 01       	movw	r30, r28
    1d54:	ed 58       	subi	r30, 0x8D	; 141
    1d56:	ff 4f       	sbci	r31, 0xFF	; 255
    1d58:	8c e2       	ldi	r24, 0x2C	; 44
    1d5a:	91 e0       	ldi	r25, 0x01	; 1
    1d5c:	91 83       	std	Z+1, r25	; 0x01
    1d5e:	80 83       	st	Z, r24
    1d60:	fe 01       	movw	r30, r28
    1d62:	ed 58       	subi	r30, 0x8D	; 141
    1d64:	ff 4f       	sbci	r31, 0xFF	; 255
    1d66:	80 81       	ld	r24, Z
    1d68:	91 81       	ldd	r25, Z+1	; 0x01
    1d6a:	01 97       	sbiw	r24, 0x01	; 1
    1d6c:	f1 f7       	brne	.-4      	; 0x1d6a <SmartHomeMenu+0xc26>
    1d6e:	fe 01       	movw	r30, r28
    1d70:	ed 58       	subi	r30, 0x8D	; 141
    1d72:	ff 4f       	sbci	r31, 0xFF	; 255
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d78:	de 01       	movw	r26, r28
    1d7a:	ab 58       	subi	r26, 0x8B	; 139
    1d7c:	bf 4f       	sbci	r27, 0xFF	; 255
    1d7e:	fe 01       	movw	r30, r28
    1d80:	eb 58       	subi	r30, 0x8B	; 139
    1d82:	ff 4f       	sbci	r31, 0xFF	; 255
    1d84:	80 81       	ld	r24, Z
    1d86:	91 81       	ldd	r25, Z+1	; 0x01
    1d88:	01 97       	sbiw	r24, 0x01	; 1
    1d8a:	11 96       	adiw	r26, 0x01	; 1
    1d8c:	9c 93       	st	X, r25
    1d8e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d90:	fe 01       	movw	r30, r28
    1d92:	eb 58       	subi	r30, 0x8B	; 139
    1d94:	ff 4f       	sbci	r31, 0xFF	; 255
    1d96:	80 81       	ld	r24, Z
    1d98:	91 81       	ldd	r25, Z+1	; 0x01
    1d9a:	00 97       	sbiw	r24, 0x00	; 0
    1d9c:	d1 f6       	brne	.-76     	; 0x1d52 <SmartHomeMenu+0xc0e>
    1d9e:	27 c0       	rjmp	.+78     	; 0x1dee <SmartHomeMenu+0xcaa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1da0:	8e 01       	movw	r16, r28
    1da2:	0b 58       	subi	r16, 0x8B	; 139
    1da4:	1f 4f       	sbci	r17, 0xFF	; 255
    1da6:	fe 01       	movw	r30, r28
    1da8:	e9 58       	subi	r30, 0x89	; 137
    1daa:	ff 4f       	sbci	r31, 0xFF	; 255
    1dac:	60 81       	ld	r22, Z
    1dae:	71 81       	ldd	r23, Z+1	; 0x01
    1db0:	82 81       	ldd	r24, Z+2	; 0x02
    1db2:	93 81       	ldd	r25, Z+3	; 0x03
    1db4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1db8:	dc 01       	movw	r26, r24
    1dba:	cb 01       	movw	r24, r22
    1dbc:	f8 01       	movw	r30, r16
    1dbe:	91 83       	std	Z+1, r25	; 0x01
    1dc0:	80 83       	st	Z, r24
    1dc2:	de 01       	movw	r26, r28
    1dc4:	af 58       	subi	r26, 0x8F	; 143
    1dc6:	bf 4f       	sbci	r27, 0xFF	; 255
    1dc8:	fe 01       	movw	r30, r28
    1dca:	eb 58       	subi	r30, 0x8B	; 139
    1dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dce:	80 81       	ld	r24, Z
    1dd0:	91 81       	ldd	r25, Z+1	; 0x01
    1dd2:	8d 93       	st	X+, r24
    1dd4:	9c 93       	st	X, r25
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	ef 58       	subi	r30, 0x8F	; 143
    1dda:	ff 4f       	sbci	r31, 0xFF	; 255
    1ddc:	80 81       	ld	r24, Z
    1dde:	91 81       	ldd	r25, Z+1	; 0x01
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <SmartHomeMenu+0xc9c>
    1de4:	fe 01       	movw	r30, r28
    1de6:	ef 58       	subi	r30, 0x8F	; 143
    1de8:	ff 4f       	sbci	r31, 0xFF	; 255
    1dea:	91 83       	std	Z+1, r25	; 0x01
    1dec:	80 83       	st	Z, r24
			_delay_ms(200);
			HLCD_vClearDisplay();
    1dee:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    1df2:	0c c5       	rjmp	.+2584   	; 0x280c <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    1df4:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    1df8:	8d ef       	ldi	r24, 0xFD	; 253
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1e00:	fe 01       	movw	r30, r28
    1e02:	e3 59       	subi	r30, 0x93	; 147
    1e04:	ff 4f       	sbci	r31, 0xFF	; 255
    1e06:	80 e0       	ldi	r24, 0x00	; 0
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	aa ef       	ldi	r26, 0xFA	; 250
    1e0c:	b3 e4       	ldi	r27, 0x43	; 67
    1e0e:	80 83       	st	Z, r24
    1e10:	91 83       	std	Z+1, r25	; 0x01
    1e12:	a2 83       	std	Z+2, r26	; 0x02
    1e14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e16:	8e 01       	movw	r16, r28
    1e18:	07 59       	subi	r16, 0x97	; 151
    1e1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e1c:	fe 01       	movw	r30, r28
    1e1e:	e3 59       	subi	r30, 0x93	; 147
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	60 81       	ld	r22, Z
    1e24:	71 81       	ldd	r23, Z+1	; 0x01
    1e26:	82 81       	ldd	r24, Z+2	; 0x02
    1e28:	93 81       	ldd	r25, Z+3	; 0x03
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	30 e8       	ldi	r19, 0x80	; 128
    1e2e:	4b e3       	ldi	r20, 0x3B	; 59
    1e30:	55 e4       	ldi	r21, 0x45	; 69
    1e32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e36:	dc 01       	movw	r26, r24
    1e38:	cb 01       	movw	r24, r22
    1e3a:	f8 01       	movw	r30, r16
    1e3c:	80 83       	st	Z, r24
    1e3e:	91 83       	std	Z+1, r25	; 0x01
    1e40:	a2 83       	std	Z+2, r26	; 0x02
    1e42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e44:	fe 01       	movw	r30, r28
    1e46:	e7 59       	subi	r30, 0x97	; 151
    1e48:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4a:	60 81       	ld	r22, Z
    1e4c:	71 81       	ldd	r23, Z+1	; 0x01
    1e4e:	82 81       	ldd	r24, Z+2	; 0x02
    1e50:	93 81       	ldd	r25, Z+3	; 0x03
    1e52:	20 e0       	ldi	r18, 0x00	; 0
    1e54:	30 e0       	ldi	r19, 0x00	; 0
    1e56:	40 e8       	ldi	r20, 0x80	; 128
    1e58:	5f e3       	ldi	r21, 0x3F	; 63
    1e5a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1e5e:	88 23       	and	r24, r24
    1e60:	44 f4       	brge	.+16     	; 0x1e72 <SmartHomeMenu+0xd2e>
		__ticks = 1;
    1e62:	fe 01       	movw	r30, r28
    1e64:	e9 59       	subi	r30, 0x99	; 153
    1e66:	ff 4f       	sbci	r31, 0xFF	; 255
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	91 83       	std	Z+1, r25	; 0x01
    1e6e:	80 83       	st	Z, r24
    1e70:	64 c0       	rjmp	.+200    	; 0x1f3a <SmartHomeMenu+0xdf6>
	else if (__tmp > 65535)
    1e72:	fe 01       	movw	r30, r28
    1e74:	e7 59       	subi	r30, 0x97	; 151
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	60 81       	ld	r22, Z
    1e7a:	71 81       	ldd	r23, Z+1	; 0x01
    1e7c:	82 81       	ldd	r24, Z+2	; 0x02
    1e7e:	93 81       	ldd	r25, Z+3	; 0x03
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	3f ef       	ldi	r19, 0xFF	; 255
    1e84:	4f e7       	ldi	r20, 0x7F	; 127
    1e86:	57 e4       	ldi	r21, 0x47	; 71
    1e88:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e8c:	18 16       	cp	r1, r24
    1e8e:	0c f0       	brlt	.+2      	; 0x1e92 <SmartHomeMenu+0xd4e>
    1e90:	43 c0       	rjmp	.+134    	; 0x1f18 <SmartHomeMenu+0xdd4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e92:	fe 01       	movw	r30, r28
    1e94:	e3 59       	subi	r30, 0x93	; 147
    1e96:	ff 4f       	sbci	r31, 0xFF	; 255
    1e98:	60 81       	ld	r22, Z
    1e9a:	71 81       	ldd	r23, Z+1	; 0x01
    1e9c:	82 81       	ldd	r24, Z+2	; 0x02
    1e9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ea0:	20 e0       	ldi	r18, 0x00	; 0
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	40 e2       	ldi	r20, 0x20	; 32
    1ea6:	51 e4       	ldi	r21, 0x41	; 65
    1ea8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1eac:	dc 01       	movw	r26, r24
    1eae:	cb 01       	movw	r24, r22
    1eb0:	8e 01       	movw	r16, r28
    1eb2:	09 59       	subi	r16, 0x99	; 153
    1eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb6:	bc 01       	movw	r22, r24
    1eb8:	cd 01       	movw	r24, r26
    1eba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ebe:	dc 01       	movw	r26, r24
    1ec0:	cb 01       	movw	r24, r22
    1ec2:	f8 01       	movw	r30, r16
    1ec4:	91 83       	std	Z+1, r25	; 0x01
    1ec6:	80 83       	st	Z, r24
    1ec8:	1f c0       	rjmp	.+62     	; 0x1f08 <SmartHomeMenu+0xdc4>
    1eca:	fe 01       	movw	r30, r28
    1ecc:	eb 59       	subi	r30, 0x9B	; 155
    1ece:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed0:	8c e2       	ldi	r24, 0x2C	; 44
    1ed2:	91 e0       	ldi	r25, 0x01	; 1
    1ed4:	91 83       	std	Z+1, r25	; 0x01
    1ed6:	80 83       	st	Z, r24
    1ed8:	fe 01       	movw	r30, r28
    1eda:	eb 59       	subi	r30, 0x9B	; 155
    1edc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ede:	80 81       	ld	r24, Z
    1ee0:	91 81       	ldd	r25, Z+1	; 0x01
    1ee2:	01 97       	sbiw	r24, 0x01	; 1
    1ee4:	f1 f7       	brne	.-4      	; 0x1ee2 <SmartHomeMenu+0xd9e>
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	eb 59       	subi	r30, 0x9B	; 155
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	91 83       	std	Z+1, r25	; 0x01
    1eee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ef0:	de 01       	movw	r26, r28
    1ef2:	a9 59       	subi	r26, 0x99	; 153
    1ef4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	e9 59       	subi	r30, 0x99	; 153
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	80 81       	ld	r24, Z
    1efe:	91 81       	ldd	r25, Z+1	; 0x01
    1f00:	01 97       	sbiw	r24, 0x01	; 1
    1f02:	11 96       	adiw	r26, 0x01	; 1
    1f04:	9c 93       	st	X, r25
    1f06:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f08:	fe 01       	movw	r30, r28
    1f0a:	e9 59       	subi	r30, 0x99	; 153
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	80 81       	ld	r24, Z
    1f10:	91 81       	ldd	r25, Z+1	; 0x01
    1f12:	00 97       	sbiw	r24, 0x00	; 0
    1f14:	d1 f6       	brne	.-76     	; 0x1eca <SmartHomeMenu+0xd86>
    1f16:	27 c0       	rjmp	.+78     	; 0x1f66 <SmartHomeMenu+0xe22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f18:	8e 01       	movw	r16, r28
    1f1a:	09 59       	subi	r16, 0x99	; 153
    1f1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f1e:	fe 01       	movw	r30, r28
    1f20:	e7 59       	subi	r30, 0x97	; 151
    1f22:	ff 4f       	sbci	r31, 0xFF	; 255
    1f24:	60 81       	ld	r22, Z
    1f26:	71 81       	ldd	r23, Z+1	; 0x01
    1f28:	82 81       	ldd	r24, Z+2	; 0x02
    1f2a:	93 81       	ldd	r25, Z+3	; 0x03
    1f2c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f30:	dc 01       	movw	r26, r24
    1f32:	cb 01       	movw	r24, r22
    1f34:	f8 01       	movw	r30, r16
    1f36:	91 83       	std	Z+1, r25	; 0x01
    1f38:	80 83       	st	Z, r24
    1f3a:	de 01       	movw	r26, r28
    1f3c:	ad 59       	subi	r26, 0x9D	; 157
    1f3e:	bf 4f       	sbci	r27, 0xFF	; 255
    1f40:	fe 01       	movw	r30, r28
    1f42:	e9 59       	subi	r30, 0x99	; 153
    1f44:	ff 4f       	sbci	r31, 0xFF	; 255
    1f46:	80 81       	ld	r24, Z
    1f48:	91 81       	ldd	r25, Z+1	; 0x01
    1f4a:	8d 93       	st	X+, r24
    1f4c:	9c 93       	st	X, r25
    1f4e:	fe 01       	movw	r30, r28
    1f50:	ed 59       	subi	r30, 0x9D	; 157
    1f52:	ff 4f       	sbci	r31, 0xFF	; 255
    1f54:	80 81       	ld	r24, Z
    1f56:	91 81       	ldd	r25, Z+1	; 0x01
    1f58:	01 97       	sbiw	r24, 0x01	; 1
    1f5a:	f1 f7       	brne	.-4      	; 0x1f58 <SmartHomeMenu+0xe14>
    1f5c:	fe 01       	movw	r30, r28
    1f5e:	ed 59       	subi	r30, 0x9D	; 157
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	91 83       	std	Z+1, r25	; 0x01
    1f64:	80 83       	st	Z, r24
			_delay_ms(500);
			HLCD_vClearDisplay();
    1f66:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    1f6a:	50 c4       	rjmp	.+2208   	; 0x280c <SmartHomeMenu+0x16c8>
	}// cause of declaration

	// Door
	case '3':
	{
		u8 Door_Action = NO_KEY_PRESSED;
    1f6c:	fe 01       	movw	r30, r28
    1f6e:	ed 52       	subi	r30, 0x2D	; 45
    1f70:	ff 4f       	sbci	r31, 0xFF	; 255
    1f72:	8f ef       	ldi	r24, 0xFF	; 255
    1f74:	80 83       	st	Z, r24
		HLCD_vClearDisplay();
    1f76:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
		HLCD_vDisplayString("1-Open 2-Close");
    1f7a:	8d e3       	ldi	r24, 0x3D	; 61
    1f7c:	91 e0       	ldi	r25, 0x01	; 1
    1f7e:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
    1f82:	82 e0       	ldi	r24, 0x02	; 2
    1f84:	61 e0       	ldi	r22, 0x01	; 1
    1f86:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
		HLCD_vDisplayString("3- Back");
    1f8a:	84 ec       	ldi	r24, 0xC4	; 196
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    1f92:	06 c0       	rjmp	.+12     	; 0x1fa0 <SmartHomeMenu+0xe5c>
		while(Door_Action == NO_KEY_PRESSED)
		{
			Door_Action = HKEYPAD_u8GetPressedKey();
    1f94:	0e 94 56 26 	call	0x4cac	; 0x4cac <HKEYPAD_u8GetPressedKey>
    1f98:	fe 01       	movw	r30, r28
    1f9a:	ed 52       	subi	r30, 0x2D	; 45
    1f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9e:	80 83       	st	Z, r24
		u8 Door_Action = NO_KEY_PRESSED;
		HLCD_vClearDisplay();
		HLCD_vDisplayString("1-Open 2-Close");
		HLCD_vGoToPos(LCD_ROW2, LCD_COL1);
		HLCD_vDisplayString("3- Back");
		while(Door_Action == NO_KEY_PRESSED)
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	ed 52       	subi	r30, 0x2D	; 45
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	80 81       	ld	r24, Z
    1fa8:	8f 3f       	cpi	r24, 0xFF	; 255
    1faa:	a1 f3       	breq	.-24     	; 0x1f94 <SmartHomeMenu+0xe50>
		{
			Door_Action = HKEYPAD_u8GetPressedKey();
		}

		switch (Door_Action)
    1fac:	fe 01       	movw	r30, r28
    1fae:	ed 52       	subi	r30, 0x2D	; 45
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	80 81       	ld	r24, Z
    1fb4:	28 2f       	mov	r18, r24
    1fb6:	30 e0       	ldi	r19, 0x00	; 0
    1fb8:	c8 52       	subi	r28, 0x28	; 40
    1fba:	df 4f       	sbci	r29, 0xFF	; 255
    1fbc:	39 83       	std	Y+1, r19	; 0x01
    1fbe:	28 83       	st	Y, r18
    1fc0:	c8 5d       	subi	r28, 0xD8	; 216
    1fc2:	d0 40       	sbci	r29, 0x00	; 0
    1fc4:	c8 52       	subi	r28, 0x28	; 40
    1fc6:	df 4f       	sbci	r29, 0xFF	; 255
    1fc8:	88 81       	ld	r24, Y
    1fca:	99 81       	ldd	r25, Y+1	; 0x01
    1fcc:	c8 5d       	subi	r28, 0xD8	; 216
    1fce:	d0 40       	sbci	r29, 0x00	; 0
    1fd0:	82 33       	cpi	r24, 0x32	; 50
    1fd2:	91 05       	cpc	r25, r1
    1fd4:	09 f4       	brne	.+2      	; 0x1fd8 <SmartHomeMenu+0xe94>
    1fd6:	22 c2       	rjmp	.+1092   	; 0x241c <SmartHomeMenu+0x12d8>
    1fd8:	c8 52       	subi	r28, 0x28	; 40
    1fda:	df 4f       	sbci	r29, 0xFF	; 255
    1fdc:	e8 81       	ld	r30, Y
    1fde:	f9 81       	ldd	r31, Y+1	; 0x01
    1fe0:	c8 5d       	subi	r28, 0xD8	; 216
    1fe2:	d0 40       	sbci	r29, 0x00	; 0
    1fe4:	e3 33       	cpi	r30, 0x33	; 51
    1fe6:	f1 05       	cpc	r31, r1
    1fe8:	09 f4       	brne	.+2      	; 0x1fec <SmartHomeMenu+0xea8>
    1fea:	8f c3       	rjmp	.+1822   	; 0x270a <SmartHomeMenu+0x15c6>
    1fec:	c8 52       	subi	r28, 0x28	; 40
    1fee:	df 4f       	sbci	r29, 0xFF	; 255
    1ff0:	28 81       	ld	r18, Y
    1ff2:	39 81       	ldd	r19, Y+1	; 0x01
    1ff4:	c8 5d       	subi	r28, 0xD8	; 216
    1ff6:	d0 40       	sbci	r29, 0x00	; 0
    1ff8:	21 33       	cpi	r18, 0x31	; 49
    1ffa:	31 05       	cpc	r19, r1
    1ffc:	09 f0       	breq	.+2      	; 0x2000 <SmartHomeMenu+0xebc>
    1ffe:	00 c4       	rjmp	.+2048   	; 0x2800 <SmartHomeMenu+0x16bc>
		{

		case '1':
			if(DoorStatus == OFF)
    2000:	80 91 c6 02 	lds	r24, 0x02C6
    2004:	88 23       	and	r24, r24
    2006:	09 f0       	breq	.+2      	; 0x200a <SmartHomeMenu+0xec6>
    2008:	7b c1       	rjmp	.+758    	; 0x2300 <SmartHomeMenu+0x11bc>
			{
				HLCD_vClearDisplay();
    200a:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HDCM_vRotateCW();
    200e:	0e 94 0a 28 	call	0x5014	; 0x5014 <HDCM_vRotateCW>
				HLCD_vDisplayString("Door Opening");
    2012:	8c e4       	ldi	r24, 0x4C	; 76
    2014:	91 e0       	ldi	r25, 0x01	; 1
    2016:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    201a:	fe 01       	movw	r30, r28
    201c:	e1 5a       	subi	r30, 0xA1	; 161
    201e:	ff 4f       	sbci	r31, 0xFF	; 255
    2020:	80 e0       	ldi	r24, 0x00	; 0
    2022:	90 e0       	ldi	r25, 0x00	; 0
    2024:	aa ef       	ldi	r26, 0xFA	; 250
    2026:	b4 e4       	ldi	r27, 0x44	; 68
    2028:	80 83       	st	Z, r24
    202a:	91 83       	std	Z+1, r25	; 0x01
    202c:	a2 83       	std	Z+2, r26	; 0x02
    202e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2030:	8e 01       	movw	r16, r28
    2032:	05 5a       	subi	r16, 0xA5	; 165
    2034:	1f 4f       	sbci	r17, 0xFF	; 255
    2036:	fe 01       	movw	r30, r28
    2038:	e1 5a       	subi	r30, 0xA1	; 161
    203a:	ff 4f       	sbci	r31, 0xFF	; 255
    203c:	60 81       	ld	r22, Z
    203e:	71 81       	ldd	r23, Z+1	; 0x01
    2040:	82 81       	ldd	r24, Z+2	; 0x02
    2042:	93 81       	ldd	r25, Z+3	; 0x03
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	30 e8       	ldi	r19, 0x80	; 128
    2048:	4b e3       	ldi	r20, 0x3B	; 59
    204a:	55 e4       	ldi	r21, 0x45	; 69
    204c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2050:	dc 01       	movw	r26, r24
    2052:	cb 01       	movw	r24, r22
    2054:	f8 01       	movw	r30, r16
    2056:	80 83       	st	Z, r24
    2058:	91 83       	std	Z+1, r25	; 0x01
    205a:	a2 83       	std	Z+2, r26	; 0x02
    205c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    205e:	fe 01       	movw	r30, r28
    2060:	e5 5a       	subi	r30, 0xA5	; 165
    2062:	ff 4f       	sbci	r31, 0xFF	; 255
    2064:	60 81       	ld	r22, Z
    2066:	71 81       	ldd	r23, Z+1	; 0x01
    2068:	82 81       	ldd	r24, Z+2	; 0x02
    206a:	93 81       	ldd	r25, Z+3	; 0x03
    206c:	20 e0       	ldi	r18, 0x00	; 0
    206e:	30 e0       	ldi	r19, 0x00	; 0
    2070:	40 e8       	ldi	r20, 0x80	; 128
    2072:	5f e3       	ldi	r21, 0x3F	; 63
    2074:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2078:	88 23       	and	r24, r24
    207a:	44 f4       	brge	.+16     	; 0x208c <SmartHomeMenu+0xf48>
		__ticks = 1;
    207c:	fe 01       	movw	r30, r28
    207e:	e7 5a       	subi	r30, 0xA7	; 167
    2080:	ff 4f       	sbci	r31, 0xFF	; 255
    2082:	81 e0       	ldi	r24, 0x01	; 1
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	91 83       	std	Z+1, r25	; 0x01
    2088:	80 83       	st	Z, r24
    208a:	64 c0       	rjmp	.+200    	; 0x2154 <SmartHomeMenu+0x1010>
	else if (__tmp > 65535)
    208c:	fe 01       	movw	r30, r28
    208e:	e5 5a       	subi	r30, 0xA5	; 165
    2090:	ff 4f       	sbci	r31, 0xFF	; 255
    2092:	60 81       	ld	r22, Z
    2094:	71 81       	ldd	r23, Z+1	; 0x01
    2096:	82 81       	ldd	r24, Z+2	; 0x02
    2098:	93 81       	ldd	r25, Z+3	; 0x03
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	3f ef       	ldi	r19, 0xFF	; 255
    209e:	4f e7       	ldi	r20, 0x7F	; 127
    20a0:	57 e4       	ldi	r21, 0x47	; 71
    20a2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    20a6:	18 16       	cp	r1, r24
    20a8:	0c f0       	brlt	.+2      	; 0x20ac <SmartHomeMenu+0xf68>
    20aa:	43 c0       	rjmp	.+134    	; 0x2132 <SmartHomeMenu+0xfee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20ac:	fe 01       	movw	r30, r28
    20ae:	e1 5a       	subi	r30, 0xA1	; 161
    20b0:	ff 4f       	sbci	r31, 0xFF	; 255
    20b2:	60 81       	ld	r22, Z
    20b4:	71 81       	ldd	r23, Z+1	; 0x01
    20b6:	82 81       	ldd	r24, Z+2	; 0x02
    20b8:	93 81       	ldd	r25, Z+3	; 0x03
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	40 e2       	ldi	r20, 0x20	; 32
    20c0:	51 e4       	ldi	r21, 0x41	; 65
    20c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20c6:	dc 01       	movw	r26, r24
    20c8:	cb 01       	movw	r24, r22
    20ca:	8e 01       	movw	r16, r28
    20cc:	07 5a       	subi	r16, 0xA7	; 167
    20ce:	1f 4f       	sbci	r17, 0xFF	; 255
    20d0:	bc 01       	movw	r22, r24
    20d2:	cd 01       	movw	r24, r26
    20d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20d8:	dc 01       	movw	r26, r24
    20da:	cb 01       	movw	r24, r22
    20dc:	f8 01       	movw	r30, r16
    20de:	91 83       	std	Z+1, r25	; 0x01
    20e0:	80 83       	st	Z, r24
    20e2:	1f c0       	rjmp	.+62     	; 0x2122 <SmartHomeMenu+0xfde>
    20e4:	fe 01       	movw	r30, r28
    20e6:	e9 5a       	subi	r30, 0xA9	; 169
    20e8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ea:	8c e2       	ldi	r24, 0x2C	; 44
    20ec:	91 e0       	ldi	r25, 0x01	; 1
    20ee:	91 83       	std	Z+1, r25	; 0x01
    20f0:	80 83       	st	Z, r24
    20f2:	fe 01       	movw	r30, r28
    20f4:	e9 5a       	subi	r30, 0xA9	; 169
    20f6:	ff 4f       	sbci	r31, 0xFF	; 255
    20f8:	80 81       	ld	r24, Z
    20fa:	91 81       	ldd	r25, Z+1	; 0x01
    20fc:	01 97       	sbiw	r24, 0x01	; 1
    20fe:	f1 f7       	brne	.-4      	; 0x20fc <SmartHomeMenu+0xfb8>
    2100:	fe 01       	movw	r30, r28
    2102:	e9 5a       	subi	r30, 0xA9	; 169
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	91 83       	std	Z+1, r25	; 0x01
    2108:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    210a:	de 01       	movw	r26, r28
    210c:	a7 5a       	subi	r26, 0xA7	; 167
    210e:	bf 4f       	sbci	r27, 0xFF	; 255
    2110:	fe 01       	movw	r30, r28
    2112:	e7 5a       	subi	r30, 0xA7	; 167
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	80 81       	ld	r24, Z
    2118:	91 81       	ldd	r25, Z+1	; 0x01
    211a:	01 97       	sbiw	r24, 0x01	; 1
    211c:	11 96       	adiw	r26, 0x01	; 1
    211e:	9c 93       	st	X, r25
    2120:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2122:	fe 01       	movw	r30, r28
    2124:	e7 5a       	subi	r30, 0xA7	; 167
    2126:	ff 4f       	sbci	r31, 0xFF	; 255
    2128:	80 81       	ld	r24, Z
    212a:	91 81       	ldd	r25, Z+1	; 0x01
    212c:	00 97       	sbiw	r24, 0x00	; 0
    212e:	d1 f6       	brne	.-76     	; 0x20e4 <SmartHomeMenu+0xfa0>
    2130:	27 c0       	rjmp	.+78     	; 0x2180 <SmartHomeMenu+0x103c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2132:	8e 01       	movw	r16, r28
    2134:	07 5a       	subi	r16, 0xA7	; 167
    2136:	1f 4f       	sbci	r17, 0xFF	; 255
    2138:	fe 01       	movw	r30, r28
    213a:	e5 5a       	subi	r30, 0xA5	; 165
    213c:	ff 4f       	sbci	r31, 0xFF	; 255
    213e:	60 81       	ld	r22, Z
    2140:	71 81       	ldd	r23, Z+1	; 0x01
    2142:	82 81       	ldd	r24, Z+2	; 0x02
    2144:	93 81       	ldd	r25, Z+3	; 0x03
    2146:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    214a:	dc 01       	movw	r26, r24
    214c:	cb 01       	movw	r24, r22
    214e:	f8 01       	movw	r30, r16
    2150:	91 83       	std	Z+1, r25	; 0x01
    2152:	80 83       	st	Z, r24
    2154:	de 01       	movw	r26, r28
    2156:	ab 5a       	subi	r26, 0xAB	; 171
    2158:	bf 4f       	sbci	r27, 0xFF	; 255
    215a:	fe 01       	movw	r30, r28
    215c:	e7 5a       	subi	r30, 0xA7	; 167
    215e:	ff 4f       	sbci	r31, 0xFF	; 255
    2160:	80 81       	ld	r24, Z
    2162:	91 81       	ldd	r25, Z+1	; 0x01
    2164:	8d 93       	st	X+, r24
    2166:	9c 93       	st	X, r25
    2168:	fe 01       	movw	r30, r28
    216a:	eb 5a       	subi	r30, 0xAB	; 171
    216c:	ff 4f       	sbci	r31, 0xFF	; 255
    216e:	80 81       	ld	r24, Z
    2170:	91 81       	ldd	r25, Z+1	; 0x01
    2172:	01 97       	sbiw	r24, 0x01	; 1
    2174:	f1 f7       	brne	.-4      	; 0x2172 <SmartHomeMenu+0x102e>
    2176:	fe 01       	movw	r30, r28
    2178:	eb 5a       	subi	r30, 0xAB	; 171
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	91 83       	std	Z+1, r25	; 0x01
    217e:	80 83       	st	Z, r24
				_delay_ms(2000);
				HDCM_vStop();
    2180:	0e 94 2c 28 	call	0x5058	; 0x5058 <HDCM_vStop>
				HLCD_vClearDisplay();
    2184:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Opened");
    2188:	89 e5       	ldi	r24, 0x59	; 89
    218a:	91 e0       	ldi	r25, 0x01	; 1
    218c:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    2190:	fe 01       	movw	r30, r28
    2192:	ef 5a       	subi	r30, 0xAF	; 175
    2194:	ff 4f       	sbci	r31, 0xFF	; 255
    2196:	80 e0       	ldi	r24, 0x00	; 0
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	aa e7       	ldi	r26, 0x7A	; 122
    219c:	b4 e4       	ldi	r27, 0x44	; 68
    219e:	80 83       	st	Z, r24
    21a0:	91 83       	std	Z+1, r25	; 0x01
    21a2:	a2 83       	std	Z+2, r26	; 0x02
    21a4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21a6:	8e 01       	movw	r16, r28
    21a8:	03 5b       	subi	r16, 0xB3	; 179
    21aa:	1f 4f       	sbci	r17, 0xFF	; 255
    21ac:	fe 01       	movw	r30, r28
    21ae:	ef 5a       	subi	r30, 0xAF	; 175
    21b0:	ff 4f       	sbci	r31, 0xFF	; 255
    21b2:	60 81       	ld	r22, Z
    21b4:	71 81       	ldd	r23, Z+1	; 0x01
    21b6:	82 81       	ldd	r24, Z+2	; 0x02
    21b8:	93 81       	ldd	r25, Z+3	; 0x03
    21ba:	20 e0       	ldi	r18, 0x00	; 0
    21bc:	30 e8       	ldi	r19, 0x80	; 128
    21be:	4b e3       	ldi	r20, 0x3B	; 59
    21c0:	55 e4       	ldi	r21, 0x45	; 69
    21c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    21c6:	dc 01       	movw	r26, r24
    21c8:	cb 01       	movw	r24, r22
    21ca:	f8 01       	movw	r30, r16
    21cc:	80 83       	st	Z, r24
    21ce:	91 83       	std	Z+1, r25	; 0x01
    21d0:	a2 83       	std	Z+2, r26	; 0x02
    21d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21d4:	fe 01       	movw	r30, r28
    21d6:	e3 5b       	subi	r30, 0xB3	; 179
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	60 81       	ld	r22, Z
    21dc:	71 81       	ldd	r23, Z+1	; 0x01
    21de:	82 81       	ldd	r24, Z+2	; 0x02
    21e0:	93 81       	ldd	r25, Z+3	; 0x03
    21e2:	20 e0       	ldi	r18, 0x00	; 0
    21e4:	30 e0       	ldi	r19, 0x00	; 0
    21e6:	40 e8       	ldi	r20, 0x80	; 128
    21e8:	5f e3       	ldi	r21, 0x3F	; 63
    21ea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    21ee:	88 23       	and	r24, r24
    21f0:	44 f4       	brge	.+16     	; 0x2202 <SmartHomeMenu+0x10be>
		__ticks = 1;
    21f2:	fe 01       	movw	r30, r28
    21f4:	e5 5b       	subi	r30, 0xB5	; 181
    21f6:	ff 4f       	sbci	r31, 0xFF	; 255
    21f8:	81 e0       	ldi	r24, 0x01	; 1
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	91 83       	std	Z+1, r25	; 0x01
    21fe:	80 83       	st	Z, r24
    2200:	64 c0       	rjmp	.+200    	; 0x22ca <SmartHomeMenu+0x1186>
	else if (__tmp > 65535)
    2202:	fe 01       	movw	r30, r28
    2204:	e3 5b       	subi	r30, 0xB3	; 179
    2206:	ff 4f       	sbci	r31, 0xFF	; 255
    2208:	60 81       	ld	r22, Z
    220a:	71 81       	ldd	r23, Z+1	; 0x01
    220c:	82 81       	ldd	r24, Z+2	; 0x02
    220e:	93 81       	ldd	r25, Z+3	; 0x03
    2210:	20 e0       	ldi	r18, 0x00	; 0
    2212:	3f ef       	ldi	r19, 0xFF	; 255
    2214:	4f e7       	ldi	r20, 0x7F	; 127
    2216:	57 e4       	ldi	r21, 0x47	; 71
    2218:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    221c:	18 16       	cp	r1, r24
    221e:	0c f0       	brlt	.+2      	; 0x2222 <SmartHomeMenu+0x10de>
    2220:	43 c0       	rjmp	.+134    	; 0x22a8 <SmartHomeMenu+0x1164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2222:	fe 01       	movw	r30, r28
    2224:	ef 5a       	subi	r30, 0xAF	; 175
    2226:	ff 4f       	sbci	r31, 0xFF	; 255
    2228:	60 81       	ld	r22, Z
    222a:	71 81       	ldd	r23, Z+1	; 0x01
    222c:	82 81       	ldd	r24, Z+2	; 0x02
    222e:	93 81       	ldd	r25, Z+3	; 0x03
    2230:	20 e0       	ldi	r18, 0x00	; 0
    2232:	30 e0       	ldi	r19, 0x00	; 0
    2234:	40 e2       	ldi	r20, 0x20	; 32
    2236:	51 e4       	ldi	r21, 0x41	; 65
    2238:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    223c:	dc 01       	movw	r26, r24
    223e:	cb 01       	movw	r24, r22
    2240:	8e 01       	movw	r16, r28
    2242:	05 5b       	subi	r16, 0xB5	; 181
    2244:	1f 4f       	sbci	r17, 0xFF	; 255
    2246:	bc 01       	movw	r22, r24
    2248:	cd 01       	movw	r24, r26
    224a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    224e:	dc 01       	movw	r26, r24
    2250:	cb 01       	movw	r24, r22
    2252:	f8 01       	movw	r30, r16
    2254:	91 83       	std	Z+1, r25	; 0x01
    2256:	80 83       	st	Z, r24
    2258:	1f c0       	rjmp	.+62     	; 0x2298 <SmartHomeMenu+0x1154>
    225a:	fe 01       	movw	r30, r28
    225c:	e7 5b       	subi	r30, 0xB7	; 183
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	8c e2       	ldi	r24, 0x2C	; 44
    2262:	91 e0       	ldi	r25, 0x01	; 1
    2264:	91 83       	std	Z+1, r25	; 0x01
    2266:	80 83       	st	Z, r24
    2268:	fe 01       	movw	r30, r28
    226a:	e7 5b       	subi	r30, 0xB7	; 183
    226c:	ff 4f       	sbci	r31, 0xFF	; 255
    226e:	80 81       	ld	r24, Z
    2270:	91 81       	ldd	r25, Z+1	; 0x01
    2272:	01 97       	sbiw	r24, 0x01	; 1
    2274:	f1 f7       	brne	.-4      	; 0x2272 <SmartHomeMenu+0x112e>
    2276:	fe 01       	movw	r30, r28
    2278:	e7 5b       	subi	r30, 0xB7	; 183
    227a:	ff 4f       	sbci	r31, 0xFF	; 255
    227c:	91 83       	std	Z+1, r25	; 0x01
    227e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2280:	de 01       	movw	r26, r28
    2282:	a5 5b       	subi	r26, 0xB5	; 181
    2284:	bf 4f       	sbci	r27, 0xFF	; 255
    2286:	fe 01       	movw	r30, r28
    2288:	e5 5b       	subi	r30, 0xB5	; 181
    228a:	ff 4f       	sbci	r31, 0xFF	; 255
    228c:	80 81       	ld	r24, Z
    228e:	91 81       	ldd	r25, Z+1	; 0x01
    2290:	01 97       	sbiw	r24, 0x01	; 1
    2292:	11 96       	adiw	r26, 0x01	; 1
    2294:	9c 93       	st	X, r25
    2296:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2298:	fe 01       	movw	r30, r28
    229a:	e5 5b       	subi	r30, 0xB5	; 181
    229c:	ff 4f       	sbci	r31, 0xFF	; 255
    229e:	80 81       	ld	r24, Z
    22a0:	91 81       	ldd	r25, Z+1	; 0x01
    22a2:	00 97       	sbiw	r24, 0x00	; 0
    22a4:	d1 f6       	brne	.-76     	; 0x225a <SmartHomeMenu+0x1116>
    22a6:	28 c0       	rjmp	.+80     	; 0x22f8 <SmartHomeMenu+0x11b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22a8:	8e 01       	movw	r16, r28
    22aa:	05 5b       	subi	r16, 0xB5	; 181
    22ac:	1f 4f       	sbci	r17, 0xFF	; 255
    22ae:	fe 01       	movw	r30, r28
    22b0:	e3 5b       	subi	r30, 0xB3	; 179
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	60 81       	ld	r22, Z
    22b6:	71 81       	ldd	r23, Z+1	; 0x01
    22b8:	82 81       	ldd	r24, Z+2	; 0x02
    22ba:	93 81       	ldd	r25, Z+3	; 0x03
    22bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22c0:	dc 01       	movw	r26, r24
    22c2:	cb 01       	movw	r24, r22
    22c4:	f8 01       	movw	r30, r16
    22c6:	91 83       	std	Z+1, r25	; 0x01
    22c8:	80 83       	st	Z, r24
    22ca:	de 01       	movw	r26, r28
    22cc:	a9 5b       	subi	r26, 0xB9	; 185
    22ce:	bf 4f       	sbci	r27, 0xFF	; 255
    22d0:	fe 01       	movw	r30, r28
    22d2:	e5 5b       	subi	r30, 0xB5	; 181
    22d4:	ff 4f       	sbci	r31, 0xFF	; 255
    22d6:	80 81       	ld	r24, Z
    22d8:	91 81       	ldd	r25, Z+1	; 0x01
    22da:	11 96       	adiw	r26, 0x01	; 1
    22dc:	9c 93       	st	X, r25
    22de:	8e 93       	st	-X, r24
    22e0:	fe 01       	movw	r30, r28
    22e2:	e9 5b       	subi	r30, 0xB9	; 185
    22e4:	ff 4f       	sbci	r31, 0xFF	; 255
    22e6:	80 81       	ld	r24, Z
    22e8:	91 81       	ldd	r25, Z+1	; 0x01
    22ea:	01 97       	sbiw	r24, 0x01	; 1
    22ec:	f1 f7       	brne	.-4      	; 0x22ea <SmartHomeMenu+0x11a6>
    22ee:	fe 01       	movw	r30, r28
    22f0:	e9 5b       	subi	r30, 0xB9	; 185
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	91 83       	std	Z+1, r25	; 0x01
    22f6:	80 83       	st	Z, r24
				_delay_ms(1000);
				DoorStatus = ON;
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	80 93 c6 02 	sts	0x02C6, r24
    22fe:	86 c2       	rjmp	.+1292   	; 0x280c <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    2300:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Opened");
    2304:	80 e6       	ldi	r24, 0x60	; 96
    2306:	91 e0       	ldi	r25, 0x01	; 1
    2308:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    230c:	fe 01       	movw	r30, r28
    230e:	ed 5b       	subi	r30, 0xBD	; 189
    2310:	ff 4f       	sbci	r31, 0xFF	; 255
    2312:	80 e0       	ldi	r24, 0x00	; 0
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	aa e7       	ldi	r26, 0x7A	; 122
    2318:	b4 e4       	ldi	r27, 0x44	; 68
    231a:	80 83       	st	Z, r24
    231c:	91 83       	std	Z+1, r25	; 0x01
    231e:	a2 83       	std	Z+2, r26	; 0x02
    2320:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2322:	8e 01       	movw	r16, r28
    2324:	01 5c       	subi	r16, 0xC1	; 193
    2326:	1f 4f       	sbci	r17, 0xFF	; 255
    2328:	fe 01       	movw	r30, r28
    232a:	ed 5b       	subi	r30, 0xBD	; 189
    232c:	ff 4f       	sbci	r31, 0xFF	; 255
    232e:	60 81       	ld	r22, Z
    2330:	71 81       	ldd	r23, Z+1	; 0x01
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	93 81       	ldd	r25, Z+3	; 0x03
    2336:	20 e0       	ldi	r18, 0x00	; 0
    2338:	30 e8       	ldi	r19, 0x80	; 128
    233a:	4b e3       	ldi	r20, 0x3B	; 59
    233c:	55 e4       	ldi	r21, 0x45	; 69
    233e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2342:	dc 01       	movw	r26, r24
    2344:	cb 01       	movw	r24, r22
    2346:	f8 01       	movw	r30, r16
    2348:	80 83       	st	Z, r24
    234a:	91 83       	std	Z+1, r25	; 0x01
    234c:	a2 83       	std	Z+2, r26	; 0x02
    234e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2350:	fe 01       	movw	r30, r28
    2352:	ff 96       	adiw	r30, 0x3f	; 63
    2354:	60 81       	ld	r22, Z
    2356:	71 81       	ldd	r23, Z+1	; 0x01
    2358:	82 81       	ldd	r24, Z+2	; 0x02
    235a:	93 81       	ldd	r25, Z+3	; 0x03
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	40 e8       	ldi	r20, 0x80	; 128
    2362:	5f e3       	ldi	r21, 0x3F	; 63
    2364:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2368:	88 23       	and	r24, r24
    236a:	2c f4       	brge	.+10     	; 0x2376 <SmartHomeMenu+0x1232>
		__ticks = 1;
    236c:	81 e0       	ldi	r24, 0x01	; 1
    236e:	90 e0       	ldi	r25, 0x00	; 0
    2370:	9e af       	std	Y+62, r25	; 0x3e
    2372:	8d af       	std	Y+61, r24	; 0x3d
    2374:	46 c0       	rjmp	.+140    	; 0x2402 <SmartHomeMenu+0x12be>
	else if (__tmp > 65535)
    2376:	fe 01       	movw	r30, r28
    2378:	ff 96       	adiw	r30, 0x3f	; 63
    237a:	60 81       	ld	r22, Z
    237c:	71 81       	ldd	r23, Z+1	; 0x01
    237e:	82 81       	ldd	r24, Z+2	; 0x02
    2380:	93 81       	ldd	r25, Z+3	; 0x03
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	3f ef       	ldi	r19, 0xFF	; 255
    2386:	4f e7       	ldi	r20, 0x7F	; 127
    2388:	57 e4       	ldi	r21, 0x47	; 71
    238a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    238e:	18 16       	cp	r1, r24
    2390:	64 f5       	brge	.+88     	; 0x23ea <SmartHomeMenu+0x12a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2392:	fe 01       	movw	r30, r28
    2394:	ed 5b       	subi	r30, 0xBD	; 189
    2396:	ff 4f       	sbci	r31, 0xFF	; 255
    2398:	60 81       	ld	r22, Z
    239a:	71 81       	ldd	r23, Z+1	; 0x01
    239c:	82 81       	ldd	r24, Z+2	; 0x02
    239e:	93 81       	ldd	r25, Z+3	; 0x03
    23a0:	20 e0       	ldi	r18, 0x00	; 0
    23a2:	30 e0       	ldi	r19, 0x00	; 0
    23a4:	40 e2       	ldi	r20, 0x20	; 32
    23a6:	51 e4       	ldi	r21, 0x41	; 65
    23a8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    23ac:	dc 01       	movw	r26, r24
    23ae:	cb 01       	movw	r24, r22
    23b0:	bc 01       	movw	r22, r24
    23b2:	cd 01       	movw	r24, r26
    23b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23b8:	dc 01       	movw	r26, r24
    23ba:	cb 01       	movw	r24, r22
    23bc:	9e af       	std	Y+62, r25	; 0x3e
    23be:	8d af       	std	Y+61, r24	; 0x3d
    23c0:	0f c0       	rjmp	.+30     	; 0x23e0 <SmartHomeMenu+0x129c>
    23c2:	8c e2       	ldi	r24, 0x2C	; 44
    23c4:	91 e0       	ldi	r25, 0x01	; 1
    23c6:	9c af       	std	Y+60, r25	; 0x3c
    23c8:	8b af       	std	Y+59, r24	; 0x3b
    23ca:	8b ad       	ldd	r24, Y+59	; 0x3b
    23cc:	9c ad       	ldd	r25, Y+60	; 0x3c
    23ce:	01 97       	sbiw	r24, 0x01	; 1
    23d0:	f1 f7       	brne	.-4      	; 0x23ce <SmartHomeMenu+0x128a>
    23d2:	9c af       	std	Y+60, r25	; 0x3c
    23d4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23d6:	8d ad       	ldd	r24, Y+61	; 0x3d
    23d8:	9e ad       	ldd	r25, Y+62	; 0x3e
    23da:	01 97       	sbiw	r24, 0x01	; 1
    23dc:	9e af       	std	Y+62, r25	; 0x3e
    23de:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23e0:	8d ad       	ldd	r24, Y+61	; 0x3d
    23e2:	9e ad       	ldd	r25, Y+62	; 0x3e
    23e4:	00 97       	sbiw	r24, 0x00	; 0
    23e6:	69 f7       	brne	.-38     	; 0x23c2 <SmartHomeMenu+0x127e>
    23e8:	16 c0       	rjmp	.+44     	; 0x2416 <SmartHomeMenu+0x12d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23ea:	fe 01       	movw	r30, r28
    23ec:	ff 96       	adiw	r30, 0x3f	; 63
    23ee:	60 81       	ld	r22, Z
    23f0:	71 81       	ldd	r23, Z+1	; 0x01
    23f2:	82 81       	ldd	r24, Z+2	; 0x02
    23f4:	93 81       	ldd	r25, Z+3	; 0x03
    23f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23fa:	dc 01       	movw	r26, r24
    23fc:	cb 01       	movw	r24, r22
    23fe:	9e af       	std	Y+62, r25	; 0x3e
    2400:	8d af       	std	Y+61, r24	; 0x3d
    2402:	8d ad       	ldd	r24, Y+61	; 0x3d
    2404:	9e ad       	ldd	r25, Y+62	; 0x3e
    2406:	9a af       	std	Y+58, r25	; 0x3a
    2408:	89 af       	std	Y+57, r24	; 0x39
    240a:	89 ad       	ldd	r24, Y+57	; 0x39
    240c:	9a ad       	ldd	r25, Y+58	; 0x3a
    240e:	01 97       	sbiw	r24, 0x01	; 1
    2410:	f1 f7       	brne	.-4      	; 0x240e <SmartHomeMenu+0x12ca>
    2412:	9a af       	std	Y+58, r25	; 0x3a
    2414:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(1000);
				HLCD_vClearDisplay();
    2416:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    241a:	f8 c1       	rjmp	.+1008   	; 0x280c <SmartHomeMenu+0x16c8>
			}
			break;

		case '2':
			if(DoorStatus == ON)
    241c:	80 91 c6 02 	lds	r24, 0x02C6
    2420:	81 30       	cpi	r24, 0x01	; 1
    2422:	09 f0       	breq	.+2      	; 0x2426 <SmartHomeMenu+0x12e2>
    2424:	f7 c0       	rjmp	.+494    	; 0x2614 <SmartHomeMenu+0x14d0>
			{
				HLCD_vClearDisplay();
    2426:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HDCM_vRotateCCW();
    242a:	0e 94 1b 28 	call	0x5036	; 0x5036 <HDCM_vRotateCCW>
				HLCD_vDisplayString("Door Closing");
    242e:	8f e6       	ldi	r24, 0x6F	; 111
    2430:	91 e0       	ldi	r25, 0x01	; 1
    2432:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	aa ef       	ldi	r26, 0xFA	; 250
    243c:	b4 e4       	ldi	r27, 0x44	; 68
    243e:	8d ab       	std	Y+53, r24	; 0x35
    2440:	9e ab       	std	Y+54, r25	; 0x36
    2442:	af ab       	std	Y+55, r26	; 0x37
    2444:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2446:	6d a9       	ldd	r22, Y+53	; 0x35
    2448:	7e a9       	ldd	r23, Y+54	; 0x36
    244a:	8f a9       	ldd	r24, Y+55	; 0x37
    244c:	98 ad       	ldd	r25, Y+56	; 0x38
    244e:	20 e0       	ldi	r18, 0x00	; 0
    2450:	30 e8       	ldi	r19, 0x80	; 128
    2452:	4b e3       	ldi	r20, 0x3B	; 59
    2454:	55 e4       	ldi	r21, 0x45	; 69
    2456:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    245a:	dc 01       	movw	r26, r24
    245c:	cb 01       	movw	r24, r22
    245e:	89 ab       	std	Y+49, r24	; 0x31
    2460:	9a ab       	std	Y+50, r25	; 0x32
    2462:	ab ab       	std	Y+51, r26	; 0x33
    2464:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2466:	69 a9       	ldd	r22, Y+49	; 0x31
    2468:	7a a9       	ldd	r23, Y+50	; 0x32
    246a:	8b a9       	ldd	r24, Y+51	; 0x33
    246c:	9c a9       	ldd	r25, Y+52	; 0x34
    246e:	20 e0       	ldi	r18, 0x00	; 0
    2470:	30 e0       	ldi	r19, 0x00	; 0
    2472:	40 e8       	ldi	r20, 0x80	; 128
    2474:	5f e3       	ldi	r21, 0x3F	; 63
    2476:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    247a:	88 23       	and	r24, r24
    247c:	2c f4       	brge	.+10     	; 0x2488 <SmartHomeMenu+0x1344>
		__ticks = 1;
    247e:	81 e0       	ldi	r24, 0x01	; 1
    2480:	90 e0       	ldi	r25, 0x00	; 0
    2482:	98 ab       	std	Y+48, r25	; 0x30
    2484:	8f a7       	std	Y+47, r24	; 0x2f
    2486:	3f c0       	rjmp	.+126    	; 0x2506 <SmartHomeMenu+0x13c2>
	else if (__tmp > 65535)
    2488:	69 a9       	ldd	r22, Y+49	; 0x31
    248a:	7a a9       	ldd	r23, Y+50	; 0x32
    248c:	8b a9       	ldd	r24, Y+51	; 0x33
    248e:	9c a9       	ldd	r25, Y+52	; 0x34
    2490:	20 e0       	ldi	r18, 0x00	; 0
    2492:	3f ef       	ldi	r19, 0xFF	; 255
    2494:	4f e7       	ldi	r20, 0x7F	; 127
    2496:	57 e4       	ldi	r21, 0x47	; 71
    2498:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    249c:	18 16       	cp	r1, r24
    249e:	4c f5       	brge	.+82     	; 0x24f2 <SmartHomeMenu+0x13ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24a0:	6d a9       	ldd	r22, Y+53	; 0x35
    24a2:	7e a9       	ldd	r23, Y+54	; 0x36
    24a4:	8f a9       	ldd	r24, Y+55	; 0x37
    24a6:	98 ad       	ldd	r25, Y+56	; 0x38
    24a8:	20 e0       	ldi	r18, 0x00	; 0
    24aa:	30 e0       	ldi	r19, 0x00	; 0
    24ac:	40 e2       	ldi	r20, 0x20	; 32
    24ae:	51 e4       	ldi	r21, 0x41	; 65
    24b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24b4:	dc 01       	movw	r26, r24
    24b6:	cb 01       	movw	r24, r22
    24b8:	bc 01       	movw	r22, r24
    24ba:	cd 01       	movw	r24, r26
    24bc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24c0:	dc 01       	movw	r26, r24
    24c2:	cb 01       	movw	r24, r22
    24c4:	98 ab       	std	Y+48, r25	; 0x30
    24c6:	8f a7       	std	Y+47, r24	; 0x2f
    24c8:	0f c0       	rjmp	.+30     	; 0x24e8 <SmartHomeMenu+0x13a4>
    24ca:	8c e2       	ldi	r24, 0x2C	; 44
    24cc:	91 e0       	ldi	r25, 0x01	; 1
    24ce:	9e a7       	std	Y+46, r25	; 0x2e
    24d0:	8d a7       	std	Y+45, r24	; 0x2d
    24d2:	8d a5       	ldd	r24, Y+45	; 0x2d
    24d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    24d6:	01 97       	sbiw	r24, 0x01	; 1
    24d8:	f1 f7       	brne	.-4      	; 0x24d6 <SmartHomeMenu+0x1392>
    24da:	9e a7       	std	Y+46, r25	; 0x2e
    24dc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24de:	8f a5       	ldd	r24, Y+47	; 0x2f
    24e0:	98 a9       	ldd	r25, Y+48	; 0x30
    24e2:	01 97       	sbiw	r24, 0x01	; 1
    24e4:	98 ab       	std	Y+48, r25	; 0x30
    24e6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    24ea:	98 a9       	ldd	r25, Y+48	; 0x30
    24ec:	00 97       	sbiw	r24, 0x00	; 0
    24ee:	69 f7       	brne	.-38     	; 0x24ca <SmartHomeMenu+0x1386>
    24f0:	14 c0       	rjmp	.+40     	; 0x251a <SmartHomeMenu+0x13d6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f2:	69 a9       	ldd	r22, Y+49	; 0x31
    24f4:	7a a9       	ldd	r23, Y+50	; 0x32
    24f6:	8b a9       	ldd	r24, Y+51	; 0x33
    24f8:	9c a9       	ldd	r25, Y+52	; 0x34
    24fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24fe:	dc 01       	movw	r26, r24
    2500:	cb 01       	movw	r24, r22
    2502:	98 ab       	std	Y+48, r25	; 0x30
    2504:	8f a7       	std	Y+47, r24	; 0x2f
    2506:	8f a5       	ldd	r24, Y+47	; 0x2f
    2508:	98 a9       	ldd	r25, Y+48	; 0x30
    250a:	9c a7       	std	Y+44, r25	; 0x2c
    250c:	8b a7       	std	Y+43, r24	; 0x2b
    250e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2510:	9c a5       	ldd	r25, Y+44	; 0x2c
    2512:	01 97       	sbiw	r24, 0x01	; 1
    2514:	f1 f7       	brne	.-4      	; 0x2512 <SmartHomeMenu+0x13ce>
    2516:	9c a7       	std	Y+44, r25	; 0x2c
    2518:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(2000);
				HDCM_vStop();
    251a:	0e 94 2c 28 	call	0x5058	; 0x5058 <HDCM_vStop>
				HLCD_vClearDisplay();
    251e:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Closed");
    2522:	8c e7       	ldi	r24, 0x7C	; 124
    2524:	91 e0       	ldi	r25, 0x01	; 1
    2526:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    252a:	80 e0       	ldi	r24, 0x00	; 0
    252c:	90 e0       	ldi	r25, 0x00	; 0
    252e:	aa e7       	ldi	r26, 0x7A	; 122
    2530:	b4 e4       	ldi	r27, 0x44	; 68
    2532:	8f a3       	std	Y+39, r24	; 0x27
    2534:	98 a7       	std	Y+40, r25	; 0x28
    2536:	a9 a7       	std	Y+41, r26	; 0x29
    2538:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    253a:	6f a1       	ldd	r22, Y+39	; 0x27
    253c:	78 a5       	ldd	r23, Y+40	; 0x28
    253e:	89 a5       	ldd	r24, Y+41	; 0x29
    2540:	9a a5       	ldd	r25, Y+42	; 0x2a
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	30 e8       	ldi	r19, 0x80	; 128
    2546:	4b e3       	ldi	r20, 0x3B	; 59
    2548:	55 e4       	ldi	r21, 0x45	; 69
    254a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    254e:	dc 01       	movw	r26, r24
    2550:	cb 01       	movw	r24, r22
    2552:	8b a3       	std	Y+35, r24	; 0x23
    2554:	9c a3       	std	Y+36, r25	; 0x24
    2556:	ad a3       	std	Y+37, r26	; 0x25
    2558:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    255a:	6b a1       	ldd	r22, Y+35	; 0x23
    255c:	7c a1       	ldd	r23, Y+36	; 0x24
    255e:	8d a1       	ldd	r24, Y+37	; 0x25
    2560:	9e a1       	ldd	r25, Y+38	; 0x26
    2562:	20 e0       	ldi	r18, 0x00	; 0
    2564:	30 e0       	ldi	r19, 0x00	; 0
    2566:	40 e8       	ldi	r20, 0x80	; 128
    2568:	5f e3       	ldi	r21, 0x3F	; 63
    256a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    256e:	88 23       	and	r24, r24
    2570:	2c f4       	brge	.+10     	; 0x257c <SmartHomeMenu+0x1438>
		__ticks = 1;
    2572:	81 e0       	ldi	r24, 0x01	; 1
    2574:	90 e0       	ldi	r25, 0x00	; 0
    2576:	9a a3       	std	Y+34, r25	; 0x22
    2578:	89 a3       	std	Y+33, r24	; 0x21
    257a:	3f c0       	rjmp	.+126    	; 0x25fa <SmartHomeMenu+0x14b6>
	else if (__tmp > 65535)
    257c:	6b a1       	ldd	r22, Y+35	; 0x23
    257e:	7c a1       	ldd	r23, Y+36	; 0x24
    2580:	8d a1       	ldd	r24, Y+37	; 0x25
    2582:	9e a1       	ldd	r25, Y+38	; 0x26
    2584:	20 e0       	ldi	r18, 0x00	; 0
    2586:	3f ef       	ldi	r19, 0xFF	; 255
    2588:	4f e7       	ldi	r20, 0x7F	; 127
    258a:	57 e4       	ldi	r21, 0x47	; 71
    258c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2590:	18 16       	cp	r1, r24
    2592:	4c f5       	brge	.+82     	; 0x25e6 <SmartHomeMenu+0x14a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2594:	6f a1       	ldd	r22, Y+39	; 0x27
    2596:	78 a5       	ldd	r23, Y+40	; 0x28
    2598:	89 a5       	ldd	r24, Y+41	; 0x29
    259a:	9a a5       	ldd	r25, Y+42	; 0x2a
    259c:	20 e0       	ldi	r18, 0x00	; 0
    259e:	30 e0       	ldi	r19, 0x00	; 0
    25a0:	40 e2       	ldi	r20, 0x20	; 32
    25a2:	51 e4       	ldi	r21, 0x41	; 65
    25a4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25a8:	dc 01       	movw	r26, r24
    25aa:	cb 01       	movw	r24, r22
    25ac:	bc 01       	movw	r22, r24
    25ae:	cd 01       	movw	r24, r26
    25b0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25b4:	dc 01       	movw	r26, r24
    25b6:	cb 01       	movw	r24, r22
    25b8:	9a a3       	std	Y+34, r25	; 0x22
    25ba:	89 a3       	std	Y+33, r24	; 0x21
    25bc:	0f c0       	rjmp	.+30     	; 0x25dc <SmartHomeMenu+0x1498>
    25be:	8c e2       	ldi	r24, 0x2C	; 44
    25c0:	91 e0       	ldi	r25, 0x01	; 1
    25c2:	98 a3       	std	Y+32, r25	; 0x20
    25c4:	8f 8f       	std	Y+31, r24	; 0x1f
    25c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    25c8:	98 a1       	ldd	r25, Y+32	; 0x20
    25ca:	01 97       	sbiw	r24, 0x01	; 1
    25cc:	f1 f7       	brne	.-4      	; 0x25ca <SmartHomeMenu+0x1486>
    25ce:	98 a3       	std	Y+32, r25	; 0x20
    25d0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d2:	89 a1       	ldd	r24, Y+33	; 0x21
    25d4:	9a a1       	ldd	r25, Y+34	; 0x22
    25d6:	01 97       	sbiw	r24, 0x01	; 1
    25d8:	9a a3       	std	Y+34, r25	; 0x22
    25da:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25dc:	89 a1       	ldd	r24, Y+33	; 0x21
    25de:	9a a1       	ldd	r25, Y+34	; 0x22
    25e0:	00 97       	sbiw	r24, 0x00	; 0
    25e2:	69 f7       	brne	.-38     	; 0x25be <SmartHomeMenu+0x147a>
    25e4:	14 c0       	rjmp	.+40     	; 0x260e <SmartHomeMenu+0x14ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25e6:	6b a1       	ldd	r22, Y+35	; 0x23
    25e8:	7c a1       	ldd	r23, Y+36	; 0x24
    25ea:	8d a1       	ldd	r24, Y+37	; 0x25
    25ec:	9e a1       	ldd	r25, Y+38	; 0x26
    25ee:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25f2:	dc 01       	movw	r26, r24
    25f4:	cb 01       	movw	r24, r22
    25f6:	9a a3       	std	Y+34, r25	; 0x22
    25f8:	89 a3       	std	Y+33, r24	; 0x21
    25fa:	89 a1       	ldd	r24, Y+33	; 0x21
    25fc:	9a a1       	ldd	r25, Y+34	; 0x22
    25fe:	9e 8f       	std	Y+30, r25	; 0x1e
    2600:	8d 8f       	std	Y+29, r24	; 0x1d
    2602:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2604:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2606:	01 97       	sbiw	r24, 0x01	; 1
    2608:	f1 f7       	brne	.-4      	; 0x2606 <SmartHomeMenu+0x14c2>
    260a:	9e 8f       	std	Y+30, r25	; 0x1e
    260c:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(1000);
				DoorStatus = OFF;
    260e:	10 92 c6 02 	sts	0x02C6, r1
    2612:	fc c0       	rjmp	.+504    	; 0x280c <SmartHomeMenu+0x16c8>
			}
			else
			{
				HLCD_vClearDisplay();
    2614:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
				HLCD_vDisplayString("Already Closed");
    2618:	83 e8       	ldi	r24, 0x83	; 131
    261a:	91 e0       	ldi	r25, 0x01	; 1
    261c:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    2620:	80 e0       	ldi	r24, 0x00	; 0
    2622:	90 e0       	ldi	r25, 0x00	; 0
    2624:	aa e7       	ldi	r26, 0x7A	; 122
    2626:	b4 e4       	ldi	r27, 0x44	; 68
    2628:	89 8f       	std	Y+25, r24	; 0x19
    262a:	9a 8f       	std	Y+26, r25	; 0x1a
    262c:	ab 8f       	std	Y+27, r26	; 0x1b
    262e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2630:	69 8d       	ldd	r22, Y+25	; 0x19
    2632:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2634:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2636:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2638:	20 e0       	ldi	r18, 0x00	; 0
    263a:	30 e8       	ldi	r19, 0x80	; 128
    263c:	4b e3       	ldi	r20, 0x3B	; 59
    263e:	55 e4       	ldi	r21, 0x45	; 69
    2640:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2644:	dc 01       	movw	r26, r24
    2646:	cb 01       	movw	r24, r22
    2648:	8d 8b       	std	Y+21, r24	; 0x15
    264a:	9e 8b       	std	Y+22, r25	; 0x16
    264c:	af 8b       	std	Y+23, r26	; 0x17
    264e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2650:	6d 89       	ldd	r22, Y+21	; 0x15
    2652:	7e 89       	ldd	r23, Y+22	; 0x16
    2654:	8f 89       	ldd	r24, Y+23	; 0x17
    2656:	98 8d       	ldd	r25, Y+24	; 0x18
    2658:	20 e0       	ldi	r18, 0x00	; 0
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	40 e8       	ldi	r20, 0x80	; 128
    265e:	5f e3       	ldi	r21, 0x3F	; 63
    2660:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2664:	88 23       	and	r24, r24
    2666:	2c f4       	brge	.+10     	; 0x2672 <SmartHomeMenu+0x152e>
		__ticks = 1;
    2668:	81 e0       	ldi	r24, 0x01	; 1
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	9c 8b       	std	Y+20, r25	; 0x14
    266e:	8b 8b       	std	Y+19, r24	; 0x13
    2670:	3f c0       	rjmp	.+126    	; 0x26f0 <SmartHomeMenu+0x15ac>
	else if (__tmp > 65535)
    2672:	6d 89       	ldd	r22, Y+21	; 0x15
    2674:	7e 89       	ldd	r23, Y+22	; 0x16
    2676:	8f 89       	ldd	r24, Y+23	; 0x17
    2678:	98 8d       	ldd	r25, Y+24	; 0x18
    267a:	20 e0       	ldi	r18, 0x00	; 0
    267c:	3f ef       	ldi	r19, 0xFF	; 255
    267e:	4f e7       	ldi	r20, 0x7F	; 127
    2680:	57 e4       	ldi	r21, 0x47	; 71
    2682:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2686:	18 16       	cp	r1, r24
    2688:	4c f5       	brge	.+82     	; 0x26dc <SmartHomeMenu+0x1598>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    268a:	69 8d       	ldd	r22, Y+25	; 0x19
    268c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    268e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2690:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2692:	20 e0       	ldi	r18, 0x00	; 0
    2694:	30 e0       	ldi	r19, 0x00	; 0
    2696:	40 e2       	ldi	r20, 0x20	; 32
    2698:	51 e4       	ldi	r21, 0x41	; 65
    269a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    269e:	dc 01       	movw	r26, r24
    26a0:	cb 01       	movw	r24, r22
    26a2:	bc 01       	movw	r22, r24
    26a4:	cd 01       	movw	r24, r26
    26a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26aa:	dc 01       	movw	r26, r24
    26ac:	cb 01       	movw	r24, r22
    26ae:	9c 8b       	std	Y+20, r25	; 0x14
    26b0:	8b 8b       	std	Y+19, r24	; 0x13
    26b2:	0f c0       	rjmp	.+30     	; 0x26d2 <SmartHomeMenu+0x158e>
    26b4:	8c e2       	ldi	r24, 0x2C	; 44
    26b6:	91 e0       	ldi	r25, 0x01	; 1
    26b8:	9a 8b       	std	Y+18, r25	; 0x12
    26ba:	89 8b       	std	Y+17, r24	; 0x11
    26bc:	89 89       	ldd	r24, Y+17	; 0x11
    26be:	9a 89       	ldd	r25, Y+18	; 0x12
    26c0:	01 97       	sbiw	r24, 0x01	; 1
    26c2:	f1 f7       	brne	.-4      	; 0x26c0 <SmartHomeMenu+0x157c>
    26c4:	9a 8b       	std	Y+18, r25	; 0x12
    26c6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26c8:	8b 89       	ldd	r24, Y+19	; 0x13
    26ca:	9c 89       	ldd	r25, Y+20	; 0x14
    26cc:	01 97       	sbiw	r24, 0x01	; 1
    26ce:	9c 8b       	std	Y+20, r25	; 0x14
    26d0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26d2:	8b 89       	ldd	r24, Y+19	; 0x13
    26d4:	9c 89       	ldd	r25, Y+20	; 0x14
    26d6:	00 97       	sbiw	r24, 0x00	; 0
    26d8:	69 f7       	brne	.-38     	; 0x26b4 <SmartHomeMenu+0x1570>
    26da:	14 c0       	rjmp	.+40     	; 0x2704 <SmartHomeMenu+0x15c0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26dc:	6d 89       	ldd	r22, Y+21	; 0x15
    26de:	7e 89       	ldd	r23, Y+22	; 0x16
    26e0:	8f 89       	ldd	r24, Y+23	; 0x17
    26e2:	98 8d       	ldd	r25, Y+24	; 0x18
    26e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26e8:	dc 01       	movw	r26, r24
    26ea:	cb 01       	movw	r24, r22
    26ec:	9c 8b       	std	Y+20, r25	; 0x14
    26ee:	8b 8b       	std	Y+19, r24	; 0x13
    26f0:	8b 89       	ldd	r24, Y+19	; 0x13
    26f2:	9c 89       	ldd	r25, Y+20	; 0x14
    26f4:	98 8b       	std	Y+16, r25	; 0x10
    26f6:	8f 87       	std	Y+15, r24	; 0x0f
    26f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    26fa:	98 89       	ldd	r25, Y+16	; 0x10
    26fc:	01 97       	sbiw	r24, 0x01	; 1
    26fe:	f1 f7       	brne	.-4      	; 0x26fc <SmartHomeMenu+0x15b8>
    2700:	98 8b       	std	Y+16, r25	; 0x10
    2702:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(1000);
				HLCD_vClearDisplay();
    2704:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    2708:	81 c0       	rjmp	.+258    	; 0x280c <SmartHomeMenu+0x16c8>
			}
			break;


		case '3':
			HLCD_vClearDisplay();
    270a:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Back");
    270e:	88 ef       	ldi	r24, 0xF8	; 248
    2710:	90 e0       	ldi	r25, 0x00	; 0
    2712:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a8 e4       	ldi	r26, 0x48	; 72
    271c:	b3 e4       	ldi	r27, 0x43	; 67
    271e:	8b 87       	std	Y+11, r24	; 0x0b
    2720:	9c 87       	std	Y+12, r25	; 0x0c
    2722:	ad 87       	std	Y+13, r26	; 0x0d
    2724:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2726:	6b 85       	ldd	r22, Y+11	; 0x0b
    2728:	7c 85       	ldd	r23, Y+12	; 0x0c
    272a:	8d 85       	ldd	r24, Y+13	; 0x0d
    272c:	9e 85       	ldd	r25, Y+14	; 0x0e
    272e:	20 e0       	ldi	r18, 0x00	; 0
    2730:	30 e8       	ldi	r19, 0x80	; 128
    2732:	4b e3       	ldi	r20, 0x3B	; 59
    2734:	55 e4       	ldi	r21, 0x45	; 69
    2736:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    273a:	dc 01       	movw	r26, r24
    273c:	cb 01       	movw	r24, r22
    273e:	8f 83       	std	Y+7, r24	; 0x07
    2740:	98 87       	std	Y+8, r25	; 0x08
    2742:	a9 87       	std	Y+9, r26	; 0x09
    2744:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2746:	6f 81       	ldd	r22, Y+7	; 0x07
    2748:	78 85       	ldd	r23, Y+8	; 0x08
    274a:	89 85       	ldd	r24, Y+9	; 0x09
    274c:	9a 85       	ldd	r25, Y+10	; 0x0a
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	40 e8       	ldi	r20, 0x80	; 128
    2754:	5f e3       	ldi	r21, 0x3F	; 63
    2756:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    275a:	88 23       	and	r24, r24
    275c:	2c f4       	brge	.+10     	; 0x2768 <SmartHomeMenu+0x1624>
		__ticks = 1;
    275e:	81 e0       	ldi	r24, 0x01	; 1
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	9e 83       	std	Y+6, r25	; 0x06
    2764:	8d 83       	std	Y+5, r24	; 0x05
    2766:	3f c0       	rjmp	.+126    	; 0x27e6 <SmartHomeMenu+0x16a2>
	else if (__tmp > 65535)
    2768:	6f 81       	ldd	r22, Y+7	; 0x07
    276a:	78 85       	ldd	r23, Y+8	; 0x08
    276c:	89 85       	ldd	r24, Y+9	; 0x09
    276e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2770:	20 e0       	ldi	r18, 0x00	; 0
    2772:	3f ef       	ldi	r19, 0xFF	; 255
    2774:	4f e7       	ldi	r20, 0x7F	; 127
    2776:	57 e4       	ldi	r21, 0x47	; 71
    2778:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    277c:	18 16       	cp	r1, r24
    277e:	4c f5       	brge	.+82     	; 0x27d2 <SmartHomeMenu+0x168e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2780:	6b 85       	ldd	r22, Y+11	; 0x0b
    2782:	7c 85       	ldd	r23, Y+12	; 0x0c
    2784:	8d 85       	ldd	r24, Y+13	; 0x0d
    2786:	9e 85       	ldd	r25, Y+14	; 0x0e
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	40 e2       	ldi	r20, 0x20	; 32
    278e:	51 e4       	ldi	r21, 0x41	; 65
    2790:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2794:	dc 01       	movw	r26, r24
    2796:	cb 01       	movw	r24, r22
    2798:	bc 01       	movw	r22, r24
    279a:	cd 01       	movw	r24, r26
    279c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27a0:	dc 01       	movw	r26, r24
    27a2:	cb 01       	movw	r24, r22
    27a4:	9e 83       	std	Y+6, r25	; 0x06
    27a6:	8d 83       	std	Y+5, r24	; 0x05
    27a8:	0f c0       	rjmp	.+30     	; 0x27c8 <SmartHomeMenu+0x1684>
    27aa:	8c e2       	ldi	r24, 0x2C	; 44
    27ac:	91 e0       	ldi	r25, 0x01	; 1
    27ae:	9c 83       	std	Y+4, r25	; 0x04
    27b0:	8b 83       	std	Y+3, r24	; 0x03
    27b2:	8b 81       	ldd	r24, Y+3	; 0x03
    27b4:	9c 81       	ldd	r25, Y+4	; 0x04
    27b6:	01 97       	sbiw	r24, 0x01	; 1
    27b8:	f1 f7       	brne	.-4      	; 0x27b6 <SmartHomeMenu+0x1672>
    27ba:	9c 83       	std	Y+4, r25	; 0x04
    27bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27be:	8d 81       	ldd	r24, Y+5	; 0x05
    27c0:	9e 81       	ldd	r25, Y+6	; 0x06
    27c2:	01 97       	sbiw	r24, 0x01	; 1
    27c4:	9e 83       	std	Y+6, r25	; 0x06
    27c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27c8:	8d 81       	ldd	r24, Y+5	; 0x05
    27ca:	9e 81       	ldd	r25, Y+6	; 0x06
    27cc:	00 97       	sbiw	r24, 0x00	; 0
    27ce:	69 f7       	brne	.-38     	; 0x27aa <SmartHomeMenu+0x1666>
    27d0:	14 c0       	rjmp	.+40     	; 0x27fa <SmartHomeMenu+0x16b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27d2:	6f 81       	ldd	r22, Y+7	; 0x07
    27d4:	78 85       	ldd	r23, Y+8	; 0x08
    27d6:	89 85       	ldd	r24, Y+9	; 0x09
    27d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    27da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27de:	dc 01       	movw	r26, r24
    27e0:	cb 01       	movw	r24, r22
    27e2:	9e 83       	std	Y+6, r25	; 0x06
    27e4:	8d 83       	std	Y+5, r24	; 0x05
    27e6:	8d 81       	ldd	r24, Y+5	; 0x05
    27e8:	9e 81       	ldd	r25, Y+6	; 0x06
    27ea:	9a 83       	std	Y+2, r25	; 0x02
    27ec:	89 83       	std	Y+1, r24	; 0x01
    27ee:	89 81       	ldd	r24, Y+1	; 0x01
    27f0:	9a 81       	ldd	r25, Y+2	; 0x02
    27f2:	01 97       	sbiw	r24, 0x01	; 1
    27f4:	f1 f7       	brne	.-4      	; 0x27f2 <SmartHomeMenu+0x16ae>
    27f6:	9a 83       	std	Y+2, r25	; 0x02
    27f8:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(200);
			HLCD_vClearDisplay();
    27fa:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
    27fe:	06 c0       	rjmp	.+12     	; 0x280c <SmartHomeMenu+0x16c8>
			break;

		default:
			HLCD_vClearDisplay();
    2800:	0e 94 aa 24 	call	0x4954	; 0x4954 <HLCD_vClearDisplay>
			HLCD_vDisplayString("Wrong Input");
    2804:	8d ef       	ldi	r24, 0xFD	; 253
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	0e 94 66 25 	call	0x4acc	; 0x4acc <HLCD_vDisplayString>
		}
		break; // Case 1 Break
	}

}
}
    280c:	c1 52       	subi	r28, 0x21	; 33
    280e:	df 4f       	sbci	r29, 0xFF	; 255
    2810:	0f b6       	in	r0, 0x3f	; 63
    2812:	f8 94       	cli
    2814:	de bf       	out	0x3e, r29	; 62
    2816:	0f be       	out	0x3f, r0	; 63
    2818:	cd bf       	out	0x3d, r28	; 61
    281a:	cf 91       	pop	r28
    281c:	df 91       	pop	r29
    281e:	1f 91       	pop	r17
    2820:	0f 91       	pop	r16
    2822:	08 95       	ret

00002824 <main>:



void main(void)
{
    2824:	df 93       	push	r29
    2826:	cf 93       	push	r28
    2828:	cd b7       	in	r28, 0x3d	; 61
    282a:	de b7       	in	r29, 0x3e	; 62
	// Init of KEYPAD , LCD , 7-Segment , DC Motor
	HKEYPAD_vInit();
    282c:	0e 94 47 26 	call	0x4c8e	; 0x4c8e <HKEYPAD_vInit>
	HLCD_vInit();
    2830:	0e 94 30 22 	call	0x4460	; 0x4460 <HLCD_vInit>
	HSSD_vInit(SSD_PORT);
    2834:	81 e0       	ldi	r24, 0x01	; 1
    2836:	0e 94 82 1a 	call	0x3504	; 0x3504 <HSSD_vInit>
	HDCM_vInit();
    283a:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <HDCM_vInit>
	HBUZZER_vInit();
    283e:	0e 94 3d 28 	call	0x507a	; 0x507a <HBUZZER_vInit>

	SmartHomeWelcome();
    2842:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <SmartHomeWelcome>
	SmartHomeLoginPassword(); // enter password and check it
    2846:	0e 94 f6 06 	call	0xdec	; 0xdec <SmartHomeLoginPassword>

	while(1)
	{
		SmartHomeMenu();
    284a:	0e 94 a2 08 	call	0x1144	; 0x1144 <SmartHomeMenu>
    284e:	fd cf       	rjmp	.-6      	; 0x284a <main+0x26>

00002850 <MDIO_vSetPinDir>:




void MDIO_vSetPinDir(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
    2850:	df 93       	push	r29
    2852:	cf 93       	push	r28
    2854:	cd b7       	in	r28, 0x3d	; 61
    2856:	de b7       	in	r29, 0x3e	; 62
    2858:	2d 97       	sbiw	r28, 0x0d	; 13
    285a:	0f b6       	in	r0, 0x3f	; 63
    285c:	f8 94       	cli
    285e:	de bf       	out	0x3e, r29	; 62
    2860:	0f be       	out	0x3f, r0	; 63
    2862:	cd bf       	out	0x3d, r28	; 61
    2864:	89 83       	std	Y+1, r24	; 0x01
    2866:	6a 83       	std	Y+2, r22	; 0x02
    2868:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
    286a:	89 81       	ldd	r24, Y+1	; 0x01
    286c:	84 30       	cpi	r24, 0x04	; 4
    286e:	08 f0       	brcs	.+2      	; 0x2872 <MDIO_vSetPinDir+0x22>
    2870:	09 c1       	rjmp	.+530    	; 0x2a84 <MDIO_vSetPinDir+0x234>
    2872:	8a 81       	ldd	r24, Y+2	; 0x02
    2874:	88 30       	cpi	r24, 0x08	; 8
    2876:	08 f0       	brcs	.+2      	; 0x287a <MDIO_vSetPinDir+0x2a>
    2878:	05 c1       	rjmp	.+522    	; 0x2a84 <MDIO_vSetPinDir+0x234>
    287a:	8b 81       	ldd	r24, Y+3	; 0x03
    287c:	82 30       	cpi	r24, 0x02	; 2
    287e:	08 f0       	brcs	.+2      	; 0x2882 <MDIO_vSetPinDir+0x32>
    2880:	01 c1       	rjmp	.+514    	; 0x2a84 <MDIO_vSetPinDir+0x234>
	{
		switch (A_portID)
    2882:	89 81       	ldd	r24, Y+1	; 0x01
    2884:	28 2f       	mov	r18, r24
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	3d 87       	std	Y+13, r19	; 0x0d
    288a:	2c 87       	std	Y+12, r18	; 0x0c
    288c:	8c 85       	ldd	r24, Y+12	; 0x0c
    288e:	9d 85       	ldd	r25, Y+13	; 0x0d
    2890:	81 30       	cpi	r24, 0x01	; 1
    2892:	91 05       	cpc	r25, r1
    2894:	09 f4       	brne	.+2      	; 0x2898 <MDIO_vSetPinDir+0x48>
    2896:	4f c0       	rjmp	.+158    	; 0x2936 <MDIO_vSetPinDir+0xe6>
    2898:	2c 85       	ldd	r18, Y+12	; 0x0c
    289a:	3d 85       	ldd	r19, Y+13	; 0x0d
    289c:	22 30       	cpi	r18, 0x02	; 2
    289e:	31 05       	cpc	r19, r1
    28a0:	2c f4       	brge	.+10     	; 0x28ac <MDIO_vSetPinDir+0x5c>
    28a2:	8c 85       	ldd	r24, Y+12	; 0x0c
    28a4:	9d 85       	ldd	r25, Y+13	; 0x0d
    28a6:	00 97       	sbiw	r24, 0x00	; 0
    28a8:	71 f0       	breq	.+28     	; 0x28c6 <MDIO_vSetPinDir+0x76>
    28aa:	ec c0       	rjmp	.+472    	; 0x2a84 <MDIO_vSetPinDir+0x234>
    28ac:	2c 85       	ldd	r18, Y+12	; 0x0c
    28ae:	3d 85       	ldd	r19, Y+13	; 0x0d
    28b0:	22 30       	cpi	r18, 0x02	; 2
    28b2:	31 05       	cpc	r19, r1
    28b4:	09 f4       	brne	.+2      	; 0x28b8 <MDIO_vSetPinDir+0x68>
    28b6:	77 c0       	rjmp	.+238    	; 0x29a6 <MDIO_vSetPinDir+0x156>
    28b8:	8c 85       	ldd	r24, Y+12	; 0x0c
    28ba:	9d 85       	ldd	r25, Y+13	; 0x0d
    28bc:	83 30       	cpi	r24, 0x03	; 3
    28be:	91 05       	cpc	r25, r1
    28c0:	09 f4       	brne	.+2      	; 0x28c4 <MDIO_vSetPinDir+0x74>
    28c2:	a9 c0       	rjmp	.+338    	; 0x2a16 <MDIO_vSetPinDir+0x1c6>
    28c4:	df c0       	rjmp	.+446    	; 0x2a84 <MDIO_vSetPinDir+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
    28c6:	8b 81       	ldd	r24, Y+3	; 0x03
    28c8:	28 2f       	mov	r18, r24
    28ca:	30 e0       	ldi	r19, 0x00	; 0
    28cc:	3b 87       	std	Y+11, r19	; 0x0b
    28ce:	2a 87       	std	Y+10, r18	; 0x0a
    28d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    28d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    28d4:	00 97       	sbiw	r24, 0x00	; 0
    28d6:	31 f0       	breq	.+12     	; 0x28e4 <MDIO_vSetPinDir+0x94>
    28d8:	2a 85       	ldd	r18, Y+10	; 0x0a
    28da:	3b 85       	ldd	r19, Y+11	; 0x0b
    28dc:	21 30       	cpi	r18, 0x01	; 1
    28de:	31 05       	cpc	r19, r1
    28e0:	b1 f0       	breq	.+44     	; 0x290e <MDIO_vSetPinDir+0xbe>
    28e2:	d0 c0       	rjmp	.+416    	; 0x2a84 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
    28e4:	aa e3       	ldi	r26, 0x3A	; 58
    28e6:	b0 e0       	ldi	r27, 0x00	; 0
    28e8:	ea e3       	ldi	r30, 0x3A	; 58
    28ea:	f0 e0       	ldi	r31, 0x00	; 0
    28ec:	80 81       	ld	r24, Z
    28ee:	48 2f       	mov	r20, r24
    28f0:	8a 81       	ldd	r24, Y+2	; 0x02
    28f2:	28 2f       	mov	r18, r24
    28f4:	30 e0       	ldi	r19, 0x00	; 0
    28f6:	81 e0       	ldi	r24, 0x01	; 1
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	02 2e       	mov	r0, r18
    28fc:	02 c0       	rjmp	.+4      	; 0x2902 <MDIO_vSetPinDir+0xb2>
    28fe:	88 0f       	add	r24, r24
    2900:	99 1f       	adc	r25, r25
    2902:	0a 94       	dec	r0
    2904:	e2 f7       	brpl	.-8      	; 0x28fe <MDIO_vSetPinDir+0xae>
    2906:	80 95       	com	r24
    2908:	84 23       	and	r24, r20
    290a:	8c 93       	st	X, r24
    290c:	bb c0       	rjmp	.+374    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
    290e:	aa e3       	ldi	r26, 0x3A	; 58
    2910:	b0 e0       	ldi	r27, 0x00	; 0
    2912:	ea e3       	ldi	r30, 0x3A	; 58
    2914:	f0 e0       	ldi	r31, 0x00	; 0
    2916:	80 81       	ld	r24, Z
    2918:	48 2f       	mov	r20, r24
    291a:	8a 81       	ldd	r24, Y+2	; 0x02
    291c:	28 2f       	mov	r18, r24
    291e:	30 e0       	ldi	r19, 0x00	; 0
    2920:	81 e0       	ldi	r24, 0x01	; 1
    2922:	90 e0       	ldi	r25, 0x00	; 0
    2924:	02 2e       	mov	r0, r18
    2926:	02 c0       	rjmp	.+4      	; 0x292c <MDIO_vSetPinDir+0xdc>
    2928:	88 0f       	add	r24, r24
    292a:	99 1f       	adc	r25, r25
    292c:	0a 94       	dec	r0
    292e:	e2 f7       	brpl	.-8      	; 0x2928 <MDIO_vSetPinDir+0xd8>
    2930:	84 2b       	or	r24, r20
    2932:	8c 93       	st	X, r24
    2934:	a7 c0       	rjmp	.+334    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
    2936:	8b 81       	ldd	r24, Y+3	; 0x03
    2938:	28 2f       	mov	r18, r24
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	39 87       	std	Y+9, r19	; 0x09
    293e:	28 87       	std	Y+8, r18	; 0x08
    2940:	88 85       	ldd	r24, Y+8	; 0x08
    2942:	99 85       	ldd	r25, Y+9	; 0x09
    2944:	00 97       	sbiw	r24, 0x00	; 0
    2946:	31 f0       	breq	.+12     	; 0x2954 <MDIO_vSetPinDir+0x104>
    2948:	28 85       	ldd	r18, Y+8	; 0x08
    294a:	39 85       	ldd	r19, Y+9	; 0x09
    294c:	21 30       	cpi	r18, 0x01	; 1
    294e:	31 05       	cpc	r19, r1
    2950:	b1 f0       	breq	.+44     	; 0x297e <MDIO_vSetPinDir+0x12e>
    2952:	98 c0       	rjmp	.+304    	; 0x2a84 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
    2954:	a7 e3       	ldi	r26, 0x37	; 55
    2956:	b0 e0       	ldi	r27, 0x00	; 0
    2958:	e7 e3       	ldi	r30, 0x37	; 55
    295a:	f0 e0       	ldi	r31, 0x00	; 0
    295c:	80 81       	ld	r24, Z
    295e:	48 2f       	mov	r20, r24
    2960:	8a 81       	ldd	r24, Y+2	; 0x02
    2962:	28 2f       	mov	r18, r24
    2964:	30 e0       	ldi	r19, 0x00	; 0
    2966:	81 e0       	ldi	r24, 0x01	; 1
    2968:	90 e0       	ldi	r25, 0x00	; 0
    296a:	02 2e       	mov	r0, r18
    296c:	02 c0       	rjmp	.+4      	; 0x2972 <MDIO_vSetPinDir+0x122>
    296e:	88 0f       	add	r24, r24
    2970:	99 1f       	adc	r25, r25
    2972:	0a 94       	dec	r0
    2974:	e2 f7       	brpl	.-8      	; 0x296e <MDIO_vSetPinDir+0x11e>
    2976:	80 95       	com	r24
    2978:	84 23       	and	r24, r20
    297a:	8c 93       	st	X, r24
    297c:	83 c0       	rjmp	.+262    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
    297e:	a7 e3       	ldi	r26, 0x37	; 55
    2980:	b0 e0       	ldi	r27, 0x00	; 0
    2982:	e7 e3       	ldi	r30, 0x37	; 55
    2984:	f0 e0       	ldi	r31, 0x00	; 0
    2986:	80 81       	ld	r24, Z
    2988:	48 2f       	mov	r20, r24
    298a:	8a 81       	ldd	r24, Y+2	; 0x02
    298c:	28 2f       	mov	r18, r24
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	81 e0       	ldi	r24, 0x01	; 1
    2992:	90 e0       	ldi	r25, 0x00	; 0
    2994:	02 2e       	mov	r0, r18
    2996:	02 c0       	rjmp	.+4      	; 0x299c <MDIO_vSetPinDir+0x14c>
    2998:	88 0f       	add	r24, r24
    299a:	99 1f       	adc	r25, r25
    299c:	0a 94       	dec	r0
    299e:	e2 f7       	brpl	.-8      	; 0x2998 <MDIO_vSetPinDir+0x148>
    29a0:	84 2b       	or	r24, r20
    29a2:	8c 93       	st	X, r24
    29a4:	6f c0       	rjmp	.+222    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
    29a6:	8b 81       	ldd	r24, Y+3	; 0x03
    29a8:	28 2f       	mov	r18, r24
    29aa:	30 e0       	ldi	r19, 0x00	; 0
    29ac:	3f 83       	std	Y+7, r19	; 0x07
    29ae:	2e 83       	std	Y+6, r18	; 0x06
    29b0:	8e 81       	ldd	r24, Y+6	; 0x06
    29b2:	9f 81       	ldd	r25, Y+7	; 0x07
    29b4:	00 97       	sbiw	r24, 0x00	; 0
    29b6:	31 f0       	breq	.+12     	; 0x29c4 <MDIO_vSetPinDir+0x174>
    29b8:	2e 81       	ldd	r18, Y+6	; 0x06
    29ba:	3f 81       	ldd	r19, Y+7	; 0x07
    29bc:	21 30       	cpi	r18, 0x01	; 1
    29be:	31 05       	cpc	r19, r1
    29c0:	b1 f0       	breq	.+44     	; 0x29ee <MDIO_vSetPinDir+0x19e>
    29c2:	60 c0       	rjmp	.+192    	; 0x2a84 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
    29c4:	a4 e3       	ldi	r26, 0x34	; 52
    29c6:	b0 e0       	ldi	r27, 0x00	; 0
    29c8:	e4 e3       	ldi	r30, 0x34	; 52
    29ca:	f0 e0       	ldi	r31, 0x00	; 0
    29cc:	80 81       	ld	r24, Z
    29ce:	48 2f       	mov	r20, r24
    29d0:	8a 81       	ldd	r24, Y+2	; 0x02
    29d2:	28 2f       	mov	r18, r24
    29d4:	30 e0       	ldi	r19, 0x00	; 0
    29d6:	81 e0       	ldi	r24, 0x01	; 1
    29d8:	90 e0       	ldi	r25, 0x00	; 0
    29da:	02 2e       	mov	r0, r18
    29dc:	02 c0       	rjmp	.+4      	; 0x29e2 <MDIO_vSetPinDir+0x192>
    29de:	88 0f       	add	r24, r24
    29e0:	99 1f       	adc	r25, r25
    29e2:	0a 94       	dec	r0
    29e4:	e2 f7       	brpl	.-8      	; 0x29de <MDIO_vSetPinDir+0x18e>
    29e6:	80 95       	com	r24
    29e8:	84 23       	and	r24, r20
    29ea:	8c 93       	st	X, r24
    29ec:	4b c0       	rjmp	.+150    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
    29ee:	a4 e3       	ldi	r26, 0x34	; 52
    29f0:	b0 e0       	ldi	r27, 0x00	; 0
    29f2:	e4 e3       	ldi	r30, 0x34	; 52
    29f4:	f0 e0       	ldi	r31, 0x00	; 0
    29f6:	80 81       	ld	r24, Z
    29f8:	48 2f       	mov	r20, r24
    29fa:	8a 81       	ldd	r24, Y+2	; 0x02
    29fc:	28 2f       	mov	r18, r24
    29fe:	30 e0       	ldi	r19, 0x00	; 0
    2a00:	81 e0       	ldi	r24, 0x01	; 1
    2a02:	90 e0       	ldi	r25, 0x00	; 0
    2a04:	02 2e       	mov	r0, r18
    2a06:	02 c0       	rjmp	.+4      	; 0x2a0c <MDIO_vSetPinDir+0x1bc>
    2a08:	88 0f       	add	r24, r24
    2a0a:	99 1f       	adc	r25, r25
    2a0c:	0a 94       	dec	r0
    2a0e:	e2 f7       	brpl	.-8      	; 0x2a08 <MDIO_vSetPinDir+0x1b8>
    2a10:	84 2b       	or	r24, r20
    2a12:	8c 93       	st	X, r24
    2a14:	37 c0       	rjmp	.+110    	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
    2a16:	8b 81       	ldd	r24, Y+3	; 0x03
    2a18:	28 2f       	mov	r18, r24
    2a1a:	30 e0       	ldi	r19, 0x00	; 0
    2a1c:	3d 83       	std	Y+5, r19	; 0x05
    2a1e:	2c 83       	std	Y+4, r18	; 0x04
    2a20:	8c 81       	ldd	r24, Y+4	; 0x04
    2a22:	9d 81       	ldd	r25, Y+5	; 0x05
    2a24:	00 97       	sbiw	r24, 0x00	; 0
    2a26:	31 f0       	breq	.+12     	; 0x2a34 <MDIO_vSetPinDir+0x1e4>
    2a28:	2c 81       	ldd	r18, Y+4	; 0x04
    2a2a:	3d 81       	ldd	r19, Y+5	; 0x05
    2a2c:	21 30       	cpi	r18, 0x01	; 1
    2a2e:	31 05       	cpc	r19, r1
    2a30:	b1 f0       	breq	.+44     	; 0x2a5e <MDIO_vSetPinDir+0x20e>
    2a32:	28 c0       	rjmp	.+80     	; 0x2a84 <MDIO_vSetPinDir+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
    2a34:	a1 e3       	ldi	r26, 0x31	; 49
    2a36:	b0 e0       	ldi	r27, 0x00	; 0
    2a38:	e1 e3       	ldi	r30, 0x31	; 49
    2a3a:	f0 e0       	ldi	r31, 0x00	; 0
    2a3c:	80 81       	ld	r24, Z
    2a3e:	48 2f       	mov	r20, r24
    2a40:	8a 81       	ldd	r24, Y+2	; 0x02
    2a42:	28 2f       	mov	r18, r24
    2a44:	30 e0       	ldi	r19, 0x00	; 0
    2a46:	81 e0       	ldi	r24, 0x01	; 1
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	02 2e       	mov	r0, r18
    2a4c:	02 c0       	rjmp	.+4      	; 0x2a52 <MDIO_vSetPinDir+0x202>
    2a4e:	88 0f       	add	r24, r24
    2a50:	99 1f       	adc	r25, r25
    2a52:	0a 94       	dec	r0
    2a54:	e2 f7       	brpl	.-8      	; 0x2a4e <MDIO_vSetPinDir+0x1fe>
    2a56:	80 95       	com	r24
    2a58:	84 23       	and	r24, r20
    2a5a:	8c 93       	st	X, r24
    2a5c:	13 c0       	rjmp	.+38     	; 0x2a84 <MDIO_vSetPinDir+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
    2a5e:	a1 e3       	ldi	r26, 0x31	; 49
    2a60:	b0 e0       	ldi	r27, 0x00	; 0
    2a62:	e1 e3       	ldi	r30, 0x31	; 49
    2a64:	f0 e0       	ldi	r31, 0x00	; 0
    2a66:	80 81       	ld	r24, Z
    2a68:	48 2f       	mov	r20, r24
    2a6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2a6c:	28 2f       	mov	r18, r24
    2a6e:	30 e0       	ldi	r19, 0x00	; 0
    2a70:	81 e0       	ldi	r24, 0x01	; 1
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	02 2e       	mov	r0, r18
    2a76:	02 c0       	rjmp	.+4      	; 0x2a7c <MDIO_vSetPinDir+0x22c>
    2a78:	88 0f       	add	r24, r24
    2a7a:	99 1f       	adc	r25, r25
    2a7c:	0a 94       	dec	r0
    2a7e:	e2 f7       	brpl	.-8      	; 0x2a78 <MDIO_vSetPinDir+0x228>
    2a80:	84 2b       	or	r24, r20
    2a82:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2a84:	2d 96       	adiw	r28, 0x0d	; 13
    2a86:	0f b6       	in	r0, 0x3f	; 63
    2a88:	f8 94       	cli
    2a8a:	de bf       	out	0x3e, r29	; 62
    2a8c:	0f be       	out	0x3f, r0	; 63
    2a8e:	cd bf       	out	0x3d, r28	; 61
    2a90:	cf 91       	pop	r28
    2a92:	df 91       	pop	r29
    2a94:	08 95       	ret

00002a96 <MDIO_vSetPinVal>:


void MDIO_vSetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
    2a96:	df 93       	push	r29
    2a98:	cf 93       	push	r28
    2a9a:	cd b7       	in	r28, 0x3d	; 61
    2a9c:	de b7       	in	r29, 0x3e	; 62
    2a9e:	2d 97       	sbiw	r28, 0x0d	; 13
    2aa0:	0f b6       	in	r0, 0x3f	; 63
    2aa2:	f8 94       	cli
    2aa4:	de bf       	out	0x3e, r29	; 62
    2aa6:	0f be       	out	0x3f, r0	; 63
    2aa8:	cd bf       	out	0x3d, r28	; 61
    2aaa:	89 83       	std	Y+1, r24	; 0x01
    2aac:	6a 83       	std	Y+2, r22	; 0x02
    2aae:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_HIGH) )
    2ab0:	89 81       	ldd	r24, Y+1	; 0x01
    2ab2:	84 30       	cpi	r24, 0x04	; 4
    2ab4:	08 f0       	brcs	.+2      	; 0x2ab8 <MDIO_vSetPinVal+0x22>
    2ab6:	09 c1       	rjmp	.+530    	; 0x2cca <MDIO_vSetPinVal+0x234>
    2ab8:	8a 81       	ldd	r24, Y+2	; 0x02
    2aba:	88 30       	cpi	r24, 0x08	; 8
    2abc:	08 f0       	brcs	.+2      	; 0x2ac0 <MDIO_vSetPinVal+0x2a>
    2abe:	05 c1       	rjmp	.+522    	; 0x2cca <MDIO_vSetPinVal+0x234>
    2ac0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ac2:	82 30       	cpi	r24, 0x02	; 2
    2ac4:	08 f0       	brcs	.+2      	; 0x2ac8 <MDIO_vSetPinVal+0x32>
    2ac6:	01 c1       	rjmp	.+514    	; 0x2cca <MDIO_vSetPinVal+0x234>
	{
		switch (A_portID)
    2ac8:	89 81       	ldd	r24, Y+1	; 0x01
    2aca:	28 2f       	mov	r18, r24
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	3d 87       	std	Y+13, r19	; 0x0d
    2ad0:	2c 87       	std	Y+12, r18	; 0x0c
    2ad2:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ad4:	9d 85       	ldd	r25, Y+13	; 0x0d
    2ad6:	81 30       	cpi	r24, 0x01	; 1
    2ad8:	91 05       	cpc	r25, r1
    2ada:	09 f4       	brne	.+2      	; 0x2ade <MDIO_vSetPinVal+0x48>
    2adc:	4f c0       	rjmp	.+158    	; 0x2b7c <MDIO_vSetPinVal+0xe6>
    2ade:	2c 85       	ldd	r18, Y+12	; 0x0c
    2ae0:	3d 85       	ldd	r19, Y+13	; 0x0d
    2ae2:	22 30       	cpi	r18, 0x02	; 2
    2ae4:	31 05       	cpc	r19, r1
    2ae6:	2c f4       	brge	.+10     	; 0x2af2 <MDIO_vSetPinVal+0x5c>
    2ae8:	8c 85       	ldd	r24, Y+12	; 0x0c
    2aea:	9d 85       	ldd	r25, Y+13	; 0x0d
    2aec:	00 97       	sbiw	r24, 0x00	; 0
    2aee:	71 f0       	breq	.+28     	; 0x2b0c <MDIO_vSetPinVal+0x76>
    2af0:	ec c0       	rjmp	.+472    	; 0x2cca <MDIO_vSetPinVal+0x234>
    2af2:	2c 85       	ldd	r18, Y+12	; 0x0c
    2af4:	3d 85       	ldd	r19, Y+13	; 0x0d
    2af6:	22 30       	cpi	r18, 0x02	; 2
    2af8:	31 05       	cpc	r19, r1
    2afa:	09 f4       	brne	.+2      	; 0x2afe <MDIO_vSetPinVal+0x68>
    2afc:	77 c0       	rjmp	.+238    	; 0x2bec <MDIO_vSetPinVal+0x156>
    2afe:	8c 85       	ldd	r24, Y+12	; 0x0c
    2b00:	9d 85       	ldd	r25, Y+13	; 0x0d
    2b02:	83 30       	cpi	r24, 0x03	; 3
    2b04:	91 05       	cpc	r25, r1
    2b06:	09 f4       	brne	.+2      	; 0x2b0a <MDIO_vSetPinVal+0x74>
    2b08:	a9 c0       	rjmp	.+338    	; 0x2c5c <MDIO_vSetPinVal+0x1c6>
    2b0a:	df c0       	rjmp	.+446    	; 0x2cca <MDIO_vSetPinVal+0x234>
		{
		case DIO_PORTA:
			switch (A_pinValue)
    2b0c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b0e:	28 2f       	mov	r18, r24
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	3b 87       	std	Y+11, r19	; 0x0b
    2b14:	2a 87       	std	Y+10, r18	; 0x0a
    2b16:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b18:	9b 85       	ldd	r25, Y+11	; 0x0b
    2b1a:	00 97       	sbiw	r24, 0x00	; 0
    2b1c:	31 f0       	breq	.+12     	; 0x2b2a <MDIO_vSetPinVal+0x94>
    2b1e:	2a 85       	ldd	r18, Y+10	; 0x0a
    2b20:	3b 85       	ldd	r19, Y+11	; 0x0b
    2b22:	21 30       	cpi	r18, 0x01	; 1
    2b24:	31 05       	cpc	r19, r1
    2b26:	b1 f0       	breq	.+44     	; 0x2b54 <MDIO_vSetPinVal+0xbe>
    2b28:	d0 c0       	rjmp	.+416    	; 0x2cca <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTA_REG,A_pinID);
    2b2a:	ab e3       	ldi	r26, 0x3B	; 59
    2b2c:	b0 e0       	ldi	r27, 0x00	; 0
    2b2e:	eb e3       	ldi	r30, 0x3B	; 59
    2b30:	f0 e0       	ldi	r31, 0x00	; 0
    2b32:	80 81       	ld	r24, Z
    2b34:	48 2f       	mov	r20, r24
    2b36:	8a 81       	ldd	r24, Y+2	; 0x02
    2b38:	28 2f       	mov	r18, r24
    2b3a:	30 e0       	ldi	r19, 0x00	; 0
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	90 e0       	ldi	r25, 0x00	; 0
    2b40:	02 2e       	mov	r0, r18
    2b42:	02 c0       	rjmp	.+4      	; 0x2b48 <MDIO_vSetPinVal+0xb2>
    2b44:	88 0f       	add	r24, r24
    2b46:	99 1f       	adc	r25, r25
    2b48:	0a 94       	dec	r0
    2b4a:	e2 f7       	brpl	.-8      	; 0x2b44 <MDIO_vSetPinVal+0xae>
    2b4c:	80 95       	com	r24
    2b4e:	84 23       	and	r24, r20
    2b50:	8c 93       	st	X, r24
    2b52:	bb c0       	rjmp	.+374    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTA_REG,A_pinID);
    2b54:	ab e3       	ldi	r26, 0x3B	; 59
    2b56:	b0 e0       	ldi	r27, 0x00	; 0
    2b58:	eb e3       	ldi	r30, 0x3B	; 59
    2b5a:	f0 e0       	ldi	r31, 0x00	; 0
    2b5c:	80 81       	ld	r24, Z
    2b5e:	48 2f       	mov	r20, r24
    2b60:	8a 81       	ldd	r24, Y+2	; 0x02
    2b62:	28 2f       	mov	r18, r24
    2b64:	30 e0       	ldi	r19, 0x00	; 0
    2b66:	81 e0       	ldi	r24, 0x01	; 1
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	02 2e       	mov	r0, r18
    2b6c:	02 c0       	rjmp	.+4      	; 0x2b72 <MDIO_vSetPinVal+0xdc>
    2b6e:	88 0f       	add	r24, r24
    2b70:	99 1f       	adc	r25, r25
    2b72:	0a 94       	dec	r0
    2b74:	e2 f7       	brpl	.-8      	; 0x2b6e <MDIO_vSetPinVal+0xd8>
    2b76:	84 2b       	or	r24, r20
    2b78:	8c 93       	st	X, r24
    2b7a:	a7 c0       	rjmp	.+334    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
    2b7c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b7e:	28 2f       	mov	r18, r24
    2b80:	30 e0       	ldi	r19, 0x00	; 0
    2b82:	39 87       	std	Y+9, r19	; 0x09
    2b84:	28 87       	std	Y+8, r18	; 0x08
    2b86:	88 85       	ldd	r24, Y+8	; 0x08
    2b88:	99 85       	ldd	r25, Y+9	; 0x09
    2b8a:	00 97       	sbiw	r24, 0x00	; 0
    2b8c:	31 f0       	breq	.+12     	; 0x2b9a <MDIO_vSetPinVal+0x104>
    2b8e:	28 85       	ldd	r18, Y+8	; 0x08
    2b90:	39 85       	ldd	r19, Y+9	; 0x09
    2b92:	21 30       	cpi	r18, 0x01	; 1
    2b94:	31 05       	cpc	r19, r1
    2b96:	b1 f0       	breq	.+44     	; 0x2bc4 <MDIO_vSetPinVal+0x12e>
    2b98:	98 c0       	rjmp	.+304    	; 0x2cca <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTB_REG,A_pinID);
    2b9a:	a8 e3       	ldi	r26, 0x38	; 56
    2b9c:	b0 e0       	ldi	r27, 0x00	; 0
    2b9e:	e8 e3       	ldi	r30, 0x38	; 56
    2ba0:	f0 e0       	ldi	r31, 0x00	; 0
    2ba2:	80 81       	ld	r24, Z
    2ba4:	48 2f       	mov	r20, r24
    2ba6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba8:	28 2f       	mov	r18, r24
    2baa:	30 e0       	ldi	r19, 0x00	; 0
    2bac:	81 e0       	ldi	r24, 0x01	; 1
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	02 2e       	mov	r0, r18
    2bb2:	02 c0       	rjmp	.+4      	; 0x2bb8 <MDIO_vSetPinVal+0x122>
    2bb4:	88 0f       	add	r24, r24
    2bb6:	99 1f       	adc	r25, r25
    2bb8:	0a 94       	dec	r0
    2bba:	e2 f7       	brpl	.-8      	; 0x2bb4 <MDIO_vSetPinVal+0x11e>
    2bbc:	80 95       	com	r24
    2bbe:	84 23       	and	r24, r20
    2bc0:	8c 93       	st	X, r24
    2bc2:	83 c0       	rjmp	.+262    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTB_REG,A_pinID);
    2bc4:	a8 e3       	ldi	r26, 0x38	; 56
    2bc6:	b0 e0       	ldi	r27, 0x00	; 0
    2bc8:	e8 e3       	ldi	r30, 0x38	; 56
    2bca:	f0 e0       	ldi	r31, 0x00	; 0
    2bcc:	80 81       	ld	r24, Z
    2bce:	48 2f       	mov	r20, r24
    2bd0:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd2:	28 2f       	mov	r18, r24
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	81 e0       	ldi	r24, 0x01	; 1
    2bd8:	90 e0       	ldi	r25, 0x00	; 0
    2bda:	02 2e       	mov	r0, r18
    2bdc:	02 c0       	rjmp	.+4      	; 0x2be2 <MDIO_vSetPinVal+0x14c>
    2bde:	88 0f       	add	r24, r24
    2be0:	99 1f       	adc	r25, r25
    2be2:	0a 94       	dec	r0
    2be4:	e2 f7       	brpl	.-8      	; 0x2bde <MDIO_vSetPinVal+0x148>
    2be6:	84 2b       	or	r24, r20
    2be8:	8c 93       	st	X, r24
    2bea:	6f c0       	rjmp	.+222    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
    2bec:	8b 81       	ldd	r24, Y+3	; 0x03
    2bee:	28 2f       	mov	r18, r24
    2bf0:	30 e0       	ldi	r19, 0x00	; 0
    2bf2:	3f 83       	std	Y+7, r19	; 0x07
    2bf4:	2e 83       	std	Y+6, r18	; 0x06
    2bf6:	8e 81       	ldd	r24, Y+6	; 0x06
    2bf8:	9f 81       	ldd	r25, Y+7	; 0x07
    2bfa:	00 97       	sbiw	r24, 0x00	; 0
    2bfc:	31 f0       	breq	.+12     	; 0x2c0a <MDIO_vSetPinVal+0x174>
    2bfe:	2e 81       	ldd	r18, Y+6	; 0x06
    2c00:	3f 81       	ldd	r19, Y+7	; 0x07
    2c02:	21 30       	cpi	r18, 0x01	; 1
    2c04:	31 05       	cpc	r19, r1
    2c06:	b1 f0       	breq	.+44     	; 0x2c34 <MDIO_vSetPinVal+0x19e>
    2c08:	60 c0       	rjmp	.+192    	; 0x2cca <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTC_REG,A_pinID);
    2c0a:	a5 e3       	ldi	r26, 0x35	; 53
    2c0c:	b0 e0       	ldi	r27, 0x00	; 0
    2c0e:	e5 e3       	ldi	r30, 0x35	; 53
    2c10:	f0 e0       	ldi	r31, 0x00	; 0
    2c12:	80 81       	ld	r24, Z
    2c14:	48 2f       	mov	r20, r24
    2c16:	8a 81       	ldd	r24, Y+2	; 0x02
    2c18:	28 2f       	mov	r18, r24
    2c1a:	30 e0       	ldi	r19, 0x00	; 0
    2c1c:	81 e0       	ldi	r24, 0x01	; 1
    2c1e:	90 e0       	ldi	r25, 0x00	; 0
    2c20:	02 2e       	mov	r0, r18
    2c22:	02 c0       	rjmp	.+4      	; 0x2c28 <MDIO_vSetPinVal+0x192>
    2c24:	88 0f       	add	r24, r24
    2c26:	99 1f       	adc	r25, r25
    2c28:	0a 94       	dec	r0
    2c2a:	e2 f7       	brpl	.-8      	; 0x2c24 <MDIO_vSetPinVal+0x18e>
    2c2c:	80 95       	com	r24
    2c2e:	84 23       	and	r24, r20
    2c30:	8c 93       	st	X, r24
    2c32:	4b c0       	rjmp	.+150    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTC_REG,A_pinID);
    2c34:	a5 e3       	ldi	r26, 0x35	; 53
    2c36:	b0 e0       	ldi	r27, 0x00	; 0
    2c38:	e5 e3       	ldi	r30, 0x35	; 53
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	80 81       	ld	r24, Z
    2c3e:	48 2f       	mov	r20, r24
    2c40:	8a 81       	ldd	r24, Y+2	; 0x02
    2c42:	28 2f       	mov	r18, r24
    2c44:	30 e0       	ldi	r19, 0x00	; 0
    2c46:	81 e0       	ldi	r24, 0x01	; 1
    2c48:	90 e0       	ldi	r25, 0x00	; 0
    2c4a:	02 2e       	mov	r0, r18
    2c4c:	02 c0       	rjmp	.+4      	; 0x2c52 <MDIO_vSetPinVal+0x1bc>
    2c4e:	88 0f       	add	r24, r24
    2c50:	99 1f       	adc	r25, r25
    2c52:	0a 94       	dec	r0
    2c54:	e2 f7       	brpl	.-8      	; 0x2c4e <MDIO_vSetPinVal+0x1b8>
    2c56:	84 2b       	or	r24, r20
    2c58:	8c 93       	st	X, r24
    2c5a:	37 c0       	rjmp	.+110    	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
    2c5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c5e:	28 2f       	mov	r18, r24
    2c60:	30 e0       	ldi	r19, 0x00	; 0
    2c62:	3d 83       	std	Y+5, r19	; 0x05
    2c64:	2c 83       	std	Y+4, r18	; 0x04
    2c66:	8c 81       	ldd	r24, Y+4	; 0x04
    2c68:	9d 81       	ldd	r25, Y+5	; 0x05
    2c6a:	00 97       	sbiw	r24, 0x00	; 0
    2c6c:	31 f0       	breq	.+12     	; 0x2c7a <MDIO_vSetPinVal+0x1e4>
    2c6e:	2c 81       	ldd	r18, Y+4	; 0x04
    2c70:	3d 81       	ldd	r19, Y+5	; 0x05
    2c72:	21 30       	cpi	r18, 0x01	; 1
    2c74:	31 05       	cpc	r19, r1
    2c76:	b1 f0       	breq	.+44     	; 0x2ca4 <MDIO_vSetPinVal+0x20e>
    2c78:	28 c0       	rjmp	.+80     	; 0x2cca <MDIO_vSetPinVal+0x234>
			{
			case DIO_LOW:
				CLR_BIT(PORTD_REG,A_pinID);
    2c7a:	a2 e3       	ldi	r26, 0x32	; 50
    2c7c:	b0 e0       	ldi	r27, 0x00	; 0
    2c7e:	e2 e3       	ldi	r30, 0x32	; 50
    2c80:	f0 e0       	ldi	r31, 0x00	; 0
    2c82:	80 81       	ld	r24, Z
    2c84:	48 2f       	mov	r20, r24
    2c86:	8a 81       	ldd	r24, Y+2	; 0x02
    2c88:	28 2f       	mov	r18, r24
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	81 e0       	ldi	r24, 0x01	; 1
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	02 2e       	mov	r0, r18
    2c92:	02 c0       	rjmp	.+4      	; 0x2c98 <MDIO_vSetPinVal+0x202>
    2c94:	88 0f       	add	r24, r24
    2c96:	99 1f       	adc	r25, r25
    2c98:	0a 94       	dec	r0
    2c9a:	e2 f7       	brpl	.-8      	; 0x2c94 <MDIO_vSetPinVal+0x1fe>
    2c9c:	80 95       	com	r24
    2c9e:	84 23       	and	r24, r20
    2ca0:	8c 93       	st	X, r24
    2ca2:	13 c0       	rjmp	.+38     	; 0x2cca <MDIO_vSetPinVal+0x234>
				break;
			case DIO_HIGH:
				SET_BIT(PORTD_REG,A_pinID);
    2ca4:	a2 e3       	ldi	r26, 0x32	; 50
    2ca6:	b0 e0       	ldi	r27, 0x00	; 0
    2ca8:	e2 e3       	ldi	r30, 0x32	; 50
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	80 81       	ld	r24, Z
    2cae:	48 2f       	mov	r20, r24
    2cb0:	8a 81       	ldd	r24, Y+2	; 0x02
    2cb2:	28 2f       	mov	r18, r24
    2cb4:	30 e0       	ldi	r19, 0x00	; 0
    2cb6:	81 e0       	ldi	r24, 0x01	; 1
    2cb8:	90 e0       	ldi	r25, 0x00	; 0
    2cba:	02 2e       	mov	r0, r18
    2cbc:	02 c0       	rjmp	.+4      	; 0x2cc2 <MDIO_vSetPinVal+0x22c>
    2cbe:	88 0f       	add	r24, r24
    2cc0:	99 1f       	adc	r25, r25
    2cc2:	0a 94       	dec	r0
    2cc4:	e2 f7       	brpl	.-8      	; 0x2cbe <MDIO_vSetPinVal+0x228>
    2cc6:	84 2b       	or	r24, r20
    2cc8:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2cca:	2d 96       	adiw	r28, 0x0d	; 13
    2ccc:	0f b6       	in	r0, 0x3f	; 63
    2cce:	f8 94       	cli
    2cd0:	de bf       	out	0x3e, r29	; 62
    2cd2:	0f be       	out	0x3f, r0	; 63
    2cd4:	cd bf       	out	0x3d, r28	; 61
    2cd6:	cf 91       	pop	r28
    2cd8:	df 91       	pop	r29
    2cda:	08 95       	ret

00002cdc <MDIO_GetPinVal>:




DIO_VALUE_e MDIO_GetPinVal(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    2cdc:	df 93       	push	r29
    2cde:	cf 93       	push	r28
    2ce0:	00 d0       	rcall	.+0      	; 0x2ce2 <MDIO_GetPinVal+0x6>
    2ce2:	00 d0       	rcall	.+0      	; 0x2ce4 <MDIO_GetPinVal+0x8>
    2ce4:	0f 92       	push	r0
    2ce6:	cd b7       	in	r28, 0x3d	; 61
    2ce8:	de b7       	in	r29, 0x3e	; 62
    2cea:	8a 83       	std	Y+2, r24	; 0x02
    2cec:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    2cee:	8a 81       	ldd	r24, Y+2	; 0x02
    2cf0:	84 30       	cpi	r24, 0x04	; 4
    2cf2:	08 f0       	brcs	.+2      	; 0x2cf6 <MDIO_GetPinVal+0x1a>
    2cf4:	6b c0       	rjmp	.+214    	; 0x2dcc <MDIO_GetPinVal+0xf0>
    2cf6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf8:	88 30       	cpi	r24, 0x08	; 8
    2cfa:	08 f0       	brcs	.+2      	; 0x2cfe <MDIO_GetPinVal+0x22>
    2cfc:	67 c0       	rjmp	.+206    	; 0x2dcc <MDIO_GetPinVal+0xf0>
	{
		switch (A_portID)
    2cfe:	8a 81       	ldd	r24, Y+2	; 0x02
    2d00:	28 2f       	mov	r18, r24
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	3d 83       	std	Y+5, r19	; 0x05
    2d06:	2c 83       	std	Y+4, r18	; 0x04
    2d08:	4c 81       	ldd	r20, Y+4	; 0x04
    2d0a:	5d 81       	ldd	r21, Y+5	; 0x05
    2d0c:	41 30       	cpi	r20, 0x01	; 1
    2d0e:	51 05       	cpc	r21, r1
    2d10:	41 f1       	breq	.+80     	; 0x2d62 <MDIO_GetPinVal+0x86>
    2d12:	8c 81       	ldd	r24, Y+4	; 0x04
    2d14:	9d 81       	ldd	r25, Y+5	; 0x05
    2d16:	82 30       	cpi	r24, 0x02	; 2
    2d18:	91 05       	cpc	r25, r1
    2d1a:	34 f4       	brge	.+12     	; 0x2d28 <MDIO_GetPinVal+0x4c>
    2d1c:	2c 81       	ldd	r18, Y+4	; 0x04
    2d1e:	3d 81       	ldd	r19, Y+5	; 0x05
    2d20:	21 15       	cp	r18, r1
    2d22:	31 05       	cpc	r19, r1
    2d24:	61 f0       	breq	.+24     	; 0x2d3e <MDIO_GetPinVal+0x62>
    2d26:	52 c0       	rjmp	.+164    	; 0x2dcc <MDIO_GetPinVal+0xf0>
    2d28:	4c 81       	ldd	r20, Y+4	; 0x04
    2d2a:	5d 81       	ldd	r21, Y+5	; 0x05
    2d2c:	42 30       	cpi	r20, 0x02	; 2
    2d2e:	51 05       	cpc	r21, r1
    2d30:	51 f1       	breq	.+84     	; 0x2d86 <MDIO_GetPinVal+0xaa>
    2d32:	8c 81       	ldd	r24, Y+4	; 0x04
    2d34:	9d 81       	ldd	r25, Y+5	; 0x05
    2d36:	83 30       	cpi	r24, 0x03	; 3
    2d38:	91 05       	cpc	r25, r1
    2d3a:	b9 f1       	breq	.+110    	; 0x2daa <MDIO_GetPinVal+0xce>
    2d3c:	47 c0       	rjmp	.+142    	; 0x2dcc <MDIO_GetPinVal+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
    2d3e:	e9 e3       	ldi	r30, 0x39	; 57
    2d40:	f0 e0       	ldi	r31, 0x00	; 0
    2d42:	80 81       	ld	r24, Z
    2d44:	28 2f       	mov	r18, r24
    2d46:	30 e0       	ldi	r19, 0x00	; 0
    2d48:	8b 81       	ldd	r24, Y+3	; 0x03
    2d4a:	88 2f       	mov	r24, r24
    2d4c:	90 e0       	ldi	r25, 0x00	; 0
    2d4e:	a9 01       	movw	r20, r18
    2d50:	02 c0       	rjmp	.+4      	; 0x2d56 <MDIO_GetPinVal+0x7a>
    2d52:	55 95       	asr	r21
    2d54:	47 95       	ror	r20
    2d56:	8a 95       	dec	r24
    2d58:	e2 f7       	brpl	.-8      	; 0x2d52 <MDIO_GetPinVal+0x76>
    2d5a:	ca 01       	movw	r24, r20
    2d5c:	81 70       	andi	r24, 0x01	; 1
    2d5e:	89 83       	std	Y+1, r24	; 0x01
    2d60:	35 c0       	rjmp	.+106    	; 0x2dcc <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
    2d62:	e6 e3       	ldi	r30, 0x36	; 54
    2d64:	f0 e0       	ldi	r31, 0x00	; 0
    2d66:	80 81       	ld	r24, Z
    2d68:	28 2f       	mov	r18, r24
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d6e:	88 2f       	mov	r24, r24
    2d70:	90 e0       	ldi	r25, 0x00	; 0
    2d72:	a9 01       	movw	r20, r18
    2d74:	02 c0       	rjmp	.+4      	; 0x2d7a <MDIO_GetPinVal+0x9e>
    2d76:	55 95       	asr	r21
    2d78:	47 95       	ror	r20
    2d7a:	8a 95       	dec	r24
    2d7c:	e2 f7       	brpl	.-8      	; 0x2d76 <MDIO_GetPinVal+0x9a>
    2d7e:	ca 01       	movw	r24, r20
    2d80:	81 70       	andi	r24, 0x01	; 1
    2d82:	89 83       	std	Y+1, r24	; 0x01
    2d84:	23 c0       	rjmp	.+70     	; 0x2dcc <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
    2d86:	e3 e3       	ldi	r30, 0x33	; 51
    2d88:	f0 e0       	ldi	r31, 0x00	; 0
    2d8a:	80 81       	ld	r24, Z
    2d8c:	28 2f       	mov	r18, r24
    2d8e:	30 e0       	ldi	r19, 0x00	; 0
    2d90:	8b 81       	ldd	r24, Y+3	; 0x03
    2d92:	88 2f       	mov	r24, r24
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	a9 01       	movw	r20, r18
    2d98:	02 c0       	rjmp	.+4      	; 0x2d9e <MDIO_GetPinVal+0xc2>
    2d9a:	55 95       	asr	r21
    2d9c:	47 95       	ror	r20
    2d9e:	8a 95       	dec	r24
    2da0:	e2 f7       	brpl	.-8      	; 0x2d9a <MDIO_GetPinVal+0xbe>
    2da2:	ca 01       	movw	r24, r20
    2da4:	81 70       	andi	r24, 0x01	; 1
    2da6:	89 83       	std	Y+1, r24	; 0x01
    2da8:	11 c0       	rjmp	.+34     	; 0x2dcc <MDIO_GetPinVal+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
    2daa:	e0 e3       	ldi	r30, 0x30	; 48
    2dac:	f0 e0       	ldi	r31, 0x00	; 0
    2dae:	80 81       	ld	r24, Z
    2db0:	28 2f       	mov	r18, r24
    2db2:	30 e0       	ldi	r19, 0x00	; 0
    2db4:	8b 81       	ldd	r24, Y+3	; 0x03
    2db6:	88 2f       	mov	r24, r24
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	a9 01       	movw	r20, r18
    2dbc:	02 c0       	rjmp	.+4      	; 0x2dc2 <MDIO_GetPinVal+0xe6>
    2dbe:	55 95       	asr	r21
    2dc0:	47 95       	ror	r20
    2dc2:	8a 95       	dec	r24
    2dc4:	e2 f7       	brpl	.-8      	; 0x2dbe <MDIO_GetPinVal+0xe2>
    2dc6:	ca 01       	movw	r24, r20
    2dc8:	81 70       	andi	r24, 0x01	; 1
    2dca:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
    2dcc:	89 81       	ldd	r24, Y+1	; 0x01
}
    2dce:	0f 90       	pop	r0
    2dd0:	0f 90       	pop	r0
    2dd2:	0f 90       	pop	r0
    2dd4:	0f 90       	pop	r0
    2dd6:	0f 90       	pop	r0
    2dd8:	cf 91       	pop	r28
    2dda:	df 91       	pop	r29
    2ddc:	08 95       	ret

00002dde <MDIO_vTogglePinVal>:

void MDIO_vTogglePinVal (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
    2dde:	df 93       	push	r29
    2de0:	cf 93       	push	r28
    2de2:	00 d0       	rcall	.+0      	; 0x2de4 <MDIO_vTogglePinVal+0x6>
    2de4:	00 d0       	rcall	.+0      	; 0x2de6 <MDIO_vTogglePinVal+0x8>
    2de6:	cd b7       	in	r28, 0x3d	; 61
    2de8:	de b7       	in	r29, 0x3e	; 62
    2dea:	89 83       	std	Y+1, r24	; 0x01
    2dec:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
    2dee:	89 81       	ldd	r24, Y+1	; 0x01
    2df0:	84 30       	cpi	r24, 0x04	; 4
    2df2:	08 f0       	brcs	.+2      	; 0x2df6 <MDIO_vTogglePinVal+0x18>
    2df4:	72 c0       	rjmp	.+228    	; 0x2eda <MDIO_vTogglePinVal+0xfc>
    2df6:	8a 81       	ldd	r24, Y+2	; 0x02
    2df8:	88 30       	cpi	r24, 0x08	; 8
    2dfa:	08 f0       	brcs	.+2      	; 0x2dfe <MDIO_vTogglePinVal+0x20>
    2dfc:	6e c0       	rjmp	.+220    	; 0x2eda <MDIO_vTogglePinVal+0xfc>
	{
		switch (A_portID)
    2dfe:	89 81       	ldd	r24, Y+1	; 0x01
    2e00:	28 2f       	mov	r18, r24
    2e02:	30 e0       	ldi	r19, 0x00	; 0
    2e04:	3c 83       	std	Y+4, r19	; 0x04
    2e06:	2b 83       	std	Y+3, r18	; 0x03
    2e08:	8b 81       	ldd	r24, Y+3	; 0x03
    2e0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e0c:	81 30       	cpi	r24, 0x01	; 1
    2e0e:	91 05       	cpc	r25, r1
    2e10:	49 f1       	breq	.+82     	; 0x2e64 <MDIO_vTogglePinVal+0x86>
    2e12:	2b 81       	ldd	r18, Y+3	; 0x03
    2e14:	3c 81       	ldd	r19, Y+4	; 0x04
    2e16:	22 30       	cpi	r18, 0x02	; 2
    2e18:	31 05       	cpc	r19, r1
    2e1a:	2c f4       	brge	.+10     	; 0x2e26 <MDIO_vTogglePinVal+0x48>
    2e1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2e20:	00 97       	sbiw	r24, 0x00	; 0
    2e22:	61 f0       	breq	.+24     	; 0x2e3c <MDIO_vTogglePinVal+0x5e>
    2e24:	5a c0       	rjmp	.+180    	; 0x2eda <MDIO_vTogglePinVal+0xfc>
    2e26:	2b 81       	ldd	r18, Y+3	; 0x03
    2e28:	3c 81       	ldd	r19, Y+4	; 0x04
    2e2a:	22 30       	cpi	r18, 0x02	; 2
    2e2c:	31 05       	cpc	r19, r1
    2e2e:	71 f1       	breq	.+92     	; 0x2e8c <MDIO_vTogglePinVal+0xae>
    2e30:	8b 81       	ldd	r24, Y+3	; 0x03
    2e32:	9c 81       	ldd	r25, Y+4	; 0x04
    2e34:	83 30       	cpi	r24, 0x03	; 3
    2e36:	91 05       	cpc	r25, r1
    2e38:	e9 f1       	breq	.+122    	; 0x2eb4 <MDIO_vTogglePinVal+0xd6>
    2e3a:	4f c0       	rjmp	.+158    	; 0x2eda <MDIO_vTogglePinVal+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
    2e3c:	ab e3       	ldi	r26, 0x3B	; 59
    2e3e:	b0 e0       	ldi	r27, 0x00	; 0
    2e40:	eb e3       	ldi	r30, 0x3B	; 59
    2e42:	f0 e0       	ldi	r31, 0x00	; 0
    2e44:	80 81       	ld	r24, Z
    2e46:	48 2f       	mov	r20, r24
    2e48:	8a 81       	ldd	r24, Y+2	; 0x02
    2e4a:	28 2f       	mov	r18, r24
    2e4c:	30 e0       	ldi	r19, 0x00	; 0
    2e4e:	81 e0       	ldi	r24, 0x01	; 1
    2e50:	90 e0       	ldi	r25, 0x00	; 0
    2e52:	02 2e       	mov	r0, r18
    2e54:	02 c0       	rjmp	.+4      	; 0x2e5a <MDIO_vTogglePinVal+0x7c>
    2e56:	88 0f       	add	r24, r24
    2e58:	99 1f       	adc	r25, r25
    2e5a:	0a 94       	dec	r0
    2e5c:	e2 f7       	brpl	.-8      	; 0x2e56 <MDIO_vTogglePinVal+0x78>
    2e5e:	84 27       	eor	r24, r20
    2e60:	8c 93       	st	X, r24
    2e62:	3b c0       	rjmp	.+118    	; 0x2eda <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
    2e64:	a8 e3       	ldi	r26, 0x38	; 56
    2e66:	b0 e0       	ldi	r27, 0x00	; 0
    2e68:	e8 e3       	ldi	r30, 0x38	; 56
    2e6a:	f0 e0       	ldi	r31, 0x00	; 0
    2e6c:	80 81       	ld	r24, Z
    2e6e:	48 2f       	mov	r20, r24
    2e70:	8a 81       	ldd	r24, Y+2	; 0x02
    2e72:	28 2f       	mov	r18, r24
    2e74:	30 e0       	ldi	r19, 0x00	; 0
    2e76:	81 e0       	ldi	r24, 0x01	; 1
    2e78:	90 e0       	ldi	r25, 0x00	; 0
    2e7a:	02 2e       	mov	r0, r18
    2e7c:	02 c0       	rjmp	.+4      	; 0x2e82 <MDIO_vTogglePinVal+0xa4>
    2e7e:	88 0f       	add	r24, r24
    2e80:	99 1f       	adc	r25, r25
    2e82:	0a 94       	dec	r0
    2e84:	e2 f7       	brpl	.-8      	; 0x2e7e <MDIO_vTogglePinVal+0xa0>
    2e86:	84 27       	eor	r24, r20
    2e88:	8c 93       	st	X, r24
    2e8a:	27 c0       	rjmp	.+78     	; 0x2eda <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
    2e8c:	a5 e3       	ldi	r26, 0x35	; 53
    2e8e:	b0 e0       	ldi	r27, 0x00	; 0
    2e90:	e5 e3       	ldi	r30, 0x35	; 53
    2e92:	f0 e0       	ldi	r31, 0x00	; 0
    2e94:	80 81       	ld	r24, Z
    2e96:	48 2f       	mov	r20, r24
    2e98:	8a 81       	ldd	r24, Y+2	; 0x02
    2e9a:	28 2f       	mov	r18, r24
    2e9c:	30 e0       	ldi	r19, 0x00	; 0
    2e9e:	81 e0       	ldi	r24, 0x01	; 1
    2ea0:	90 e0       	ldi	r25, 0x00	; 0
    2ea2:	02 2e       	mov	r0, r18
    2ea4:	02 c0       	rjmp	.+4      	; 0x2eaa <MDIO_vTogglePinVal+0xcc>
    2ea6:	88 0f       	add	r24, r24
    2ea8:	99 1f       	adc	r25, r25
    2eaa:	0a 94       	dec	r0
    2eac:	e2 f7       	brpl	.-8      	; 0x2ea6 <MDIO_vTogglePinVal+0xc8>
    2eae:	84 27       	eor	r24, r20
    2eb0:	8c 93       	st	X, r24
    2eb2:	13 c0       	rjmp	.+38     	; 0x2eda <MDIO_vTogglePinVal+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
    2eb4:	a2 e3       	ldi	r26, 0x32	; 50
    2eb6:	b0 e0       	ldi	r27, 0x00	; 0
    2eb8:	e2 e3       	ldi	r30, 0x32	; 50
    2eba:	f0 e0       	ldi	r31, 0x00	; 0
    2ebc:	80 81       	ld	r24, Z
    2ebe:	48 2f       	mov	r20, r24
    2ec0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ec2:	28 2f       	mov	r18, r24
    2ec4:	30 e0       	ldi	r19, 0x00	; 0
    2ec6:	81 e0       	ldi	r24, 0x01	; 1
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	02 2e       	mov	r0, r18
    2ecc:	02 c0       	rjmp	.+4      	; 0x2ed2 <MDIO_vTogglePinVal+0xf4>
    2ece:	88 0f       	add	r24, r24
    2ed0:	99 1f       	adc	r25, r25
    2ed2:	0a 94       	dec	r0
    2ed4:	e2 f7       	brpl	.-8      	; 0x2ece <MDIO_vTogglePinVal+0xf0>
    2ed6:	84 27       	eor	r24, r20
    2ed8:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
    2eda:	0f 90       	pop	r0
    2edc:	0f 90       	pop	r0
    2ede:	0f 90       	pop	r0
    2ee0:	0f 90       	pop	r0
    2ee2:	cf 91       	pop	r28
    2ee4:	df 91       	pop	r29
    2ee6:	08 95       	ret

00002ee8 <MDIO_vSetPortDir>:


void MDIO_vSetPortDir (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
    2ee8:	df 93       	push	r29
    2eea:	cf 93       	push	r28
    2eec:	00 d0       	rcall	.+0      	; 0x2eee <MDIO_vSetPortDir+0x6>
    2eee:	00 d0       	rcall	.+0      	; 0x2ef0 <MDIO_vSetPortDir+0x8>
    2ef0:	cd b7       	in	r28, 0x3d	; 61
    2ef2:	de b7       	in	r29, 0x3e	; 62
    2ef4:	89 83       	std	Y+1, r24	; 0x01
    2ef6:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    2ef8:	89 81       	ldd	r24, Y+1	; 0x01
    2efa:	84 30       	cpi	r24, 0x04	; 4
    2efc:	90 f5       	brcc	.+100    	; 0x2f62 <MDIO_vSetPortDir+0x7a>
	{
		switch (A_portID)
    2efe:	89 81       	ldd	r24, Y+1	; 0x01
    2f00:	28 2f       	mov	r18, r24
    2f02:	30 e0       	ldi	r19, 0x00	; 0
    2f04:	3c 83       	std	Y+4, r19	; 0x04
    2f06:	2b 83       	std	Y+3, r18	; 0x03
    2f08:	8b 81       	ldd	r24, Y+3	; 0x03
    2f0a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f0c:	81 30       	cpi	r24, 0x01	; 1
    2f0e:	91 05       	cpc	r25, r1
    2f10:	d1 f0       	breq	.+52     	; 0x2f46 <MDIO_vSetPortDir+0x5e>
    2f12:	2b 81       	ldd	r18, Y+3	; 0x03
    2f14:	3c 81       	ldd	r19, Y+4	; 0x04
    2f16:	22 30       	cpi	r18, 0x02	; 2
    2f18:	31 05       	cpc	r19, r1
    2f1a:	2c f4       	brge	.+10     	; 0x2f26 <MDIO_vSetPortDir+0x3e>
    2f1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2f20:	00 97       	sbiw	r24, 0x00	; 0
    2f22:	61 f0       	breq	.+24     	; 0x2f3c <MDIO_vSetPortDir+0x54>
    2f24:	1e c0       	rjmp	.+60     	; 0x2f62 <MDIO_vSetPortDir+0x7a>
    2f26:	2b 81       	ldd	r18, Y+3	; 0x03
    2f28:	3c 81       	ldd	r19, Y+4	; 0x04
    2f2a:	22 30       	cpi	r18, 0x02	; 2
    2f2c:	31 05       	cpc	r19, r1
    2f2e:	81 f0       	breq	.+32     	; 0x2f50 <MDIO_vSetPortDir+0x68>
    2f30:	8b 81       	ldd	r24, Y+3	; 0x03
    2f32:	9c 81       	ldd	r25, Y+4	; 0x04
    2f34:	83 30       	cpi	r24, 0x03	; 3
    2f36:	91 05       	cpc	r25, r1
    2f38:	81 f0       	breq	.+32     	; 0x2f5a <MDIO_vSetPortDir+0x72>
    2f3a:	13 c0       	rjmp	.+38     	; 0x2f62 <MDIO_vSetPortDir+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
    2f3c:	ea e3       	ldi	r30, 0x3A	; 58
    2f3e:	f0 e0       	ldi	r31, 0x00	; 0
    2f40:	8a 81       	ldd	r24, Y+2	; 0x02
    2f42:	80 83       	st	Z, r24
    2f44:	0e c0       	rjmp	.+28     	; 0x2f62 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
    2f46:	e7 e3       	ldi	r30, 0x37	; 55
    2f48:	f0 e0       	ldi	r31, 0x00	; 0
    2f4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f4c:	80 83       	st	Z, r24
    2f4e:	09 c0       	rjmp	.+18     	; 0x2f62 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
    2f50:	e4 e3       	ldi	r30, 0x34	; 52
    2f52:	f0 e0       	ldi	r31, 0x00	; 0
    2f54:	8a 81       	ldd	r24, Y+2	; 0x02
    2f56:	80 83       	st	Z, r24
    2f58:	04 c0       	rjmp	.+8      	; 0x2f62 <MDIO_vSetPortDir+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
    2f5a:	e1 e3       	ldi	r30, 0x31	; 49
    2f5c:	f0 e0       	ldi	r31, 0x00	; 0
    2f5e:	8a 81       	ldd	r24, Y+2	; 0x02
    2f60:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    2f62:	0f 90       	pop	r0
    2f64:	0f 90       	pop	r0
    2f66:	0f 90       	pop	r0
    2f68:	0f 90       	pop	r0
    2f6a:	cf 91       	pop	r28
    2f6c:	df 91       	pop	r29
    2f6e:	08 95       	ret

00002f70 <MDIO_vSetPortVal>:

void MDIO_vSetPortVal (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
    2f70:	df 93       	push	r29
    2f72:	cf 93       	push	r28
    2f74:	00 d0       	rcall	.+0      	; 0x2f76 <MDIO_vSetPortVal+0x6>
    2f76:	00 d0       	rcall	.+0      	; 0x2f78 <MDIO_vSetPortVal+0x8>
    2f78:	cd b7       	in	r28, 0x3d	; 61
    2f7a:	de b7       	in	r29, 0x3e	; 62
    2f7c:	89 83       	std	Y+1, r24	; 0x01
    2f7e:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
    2f80:	89 81       	ldd	r24, Y+1	; 0x01
    2f82:	84 30       	cpi	r24, 0x04	; 4
    2f84:	90 f5       	brcc	.+100    	; 0x2fea <MDIO_vSetPortVal+0x7a>
	{
		switch (A_portID)
    2f86:	89 81       	ldd	r24, Y+1	; 0x01
    2f88:	28 2f       	mov	r18, r24
    2f8a:	30 e0       	ldi	r19, 0x00	; 0
    2f8c:	3c 83       	std	Y+4, r19	; 0x04
    2f8e:	2b 83       	std	Y+3, r18	; 0x03
    2f90:	8b 81       	ldd	r24, Y+3	; 0x03
    2f92:	9c 81       	ldd	r25, Y+4	; 0x04
    2f94:	81 30       	cpi	r24, 0x01	; 1
    2f96:	91 05       	cpc	r25, r1
    2f98:	d1 f0       	breq	.+52     	; 0x2fce <MDIO_vSetPortVal+0x5e>
    2f9a:	2b 81       	ldd	r18, Y+3	; 0x03
    2f9c:	3c 81       	ldd	r19, Y+4	; 0x04
    2f9e:	22 30       	cpi	r18, 0x02	; 2
    2fa0:	31 05       	cpc	r19, r1
    2fa2:	2c f4       	brge	.+10     	; 0x2fae <MDIO_vSetPortVal+0x3e>
    2fa4:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa6:	9c 81       	ldd	r25, Y+4	; 0x04
    2fa8:	00 97       	sbiw	r24, 0x00	; 0
    2faa:	61 f0       	breq	.+24     	; 0x2fc4 <MDIO_vSetPortVal+0x54>
    2fac:	1e c0       	rjmp	.+60     	; 0x2fea <MDIO_vSetPortVal+0x7a>
    2fae:	2b 81       	ldd	r18, Y+3	; 0x03
    2fb0:	3c 81       	ldd	r19, Y+4	; 0x04
    2fb2:	22 30       	cpi	r18, 0x02	; 2
    2fb4:	31 05       	cpc	r19, r1
    2fb6:	81 f0       	breq	.+32     	; 0x2fd8 <MDIO_vSetPortVal+0x68>
    2fb8:	8b 81       	ldd	r24, Y+3	; 0x03
    2fba:	9c 81       	ldd	r25, Y+4	; 0x04
    2fbc:	83 30       	cpi	r24, 0x03	; 3
    2fbe:	91 05       	cpc	r25, r1
    2fc0:	81 f0       	breq	.+32     	; 0x2fe2 <MDIO_vSetPortVal+0x72>
    2fc2:	13 c0       	rjmp	.+38     	; 0x2fea <MDIO_vSetPortVal+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
    2fc4:	eb e3       	ldi	r30, 0x3B	; 59
    2fc6:	f0 e0       	ldi	r31, 0x00	; 0
    2fc8:	8a 81       	ldd	r24, Y+2	; 0x02
    2fca:	80 83       	st	Z, r24
    2fcc:	0e c0       	rjmp	.+28     	; 0x2fea <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
    2fce:	e8 e3       	ldi	r30, 0x38	; 56
    2fd0:	f0 e0       	ldi	r31, 0x00	; 0
    2fd2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fd4:	80 83       	st	Z, r24
    2fd6:	09 c0       	rjmp	.+18     	; 0x2fea <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
    2fd8:	e5 e3       	ldi	r30, 0x35	; 53
    2fda:	f0 e0       	ldi	r31, 0x00	; 0
    2fdc:	8a 81       	ldd	r24, Y+2	; 0x02
    2fde:	80 83       	st	Z, r24
    2fe0:	04 c0       	rjmp	.+8      	; 0x2fea <MDIO_vSetPortVal+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
    2fe2:	e2 e3       	ldi	r30, 0x32	; 50
    2fe4:	f0 e0       	ldi	r31, 0x00	; 0
    2fe6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fe8:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
    2fea:	0f 90       	pop	r0
    2fec:	0f 90       	pop	r0
    2fee:	0f 90       	pop	r0
    2ff0:	0f 90       	pop	r0
    2ff2:	cf 91       	pop	r28
    2ff4:	df 91       	pop	r29
    2ff6:	08 95       	ret

00002ff8 <MDIO_vInit>:


void MDIO_vInit()
{
    2ff8:	df 93       	push	r29
    2ffa:	cf 93       	push	r28
    2ffc:	cd b7       	in	r28, 0x3d	; 61
    2ffe:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
    3000:	ea e3       	ldi	r30, 0x3A	; 58
    3002:	f0 e0       	ldi	r31, 0x00	; 0
    3004:	10 82       	st	Z, r1
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
    3006:	e7 e3       	ldi	r30, 0x37	; 55
    3008:	f0 e0       	ldi	r31, 0x00	; 0
    300a:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
    300c:	e4 e3       	ldi	r30, 0x34	; 52
    300e:	f0 e0       	ldi	r31, 0x00	; 0
    3010:	87 e0       	ldi	r24, 0x07	; 7
    3012:	80 83       	st	Z, r24
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
    3014:	e1 e3       	ldi	r30, 0x31	; 49
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	8f ef       	ldi	r24, 0xFF	; 255
    301a:	80 83       	st	Z, r24
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
    301c:	eb e3       	ldi	r30, 0x3B	; 59
    301e:	f0 e0       	ldi	r31, 0x00	; 0
    3020:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
    3022:	e8 e3       	ldi	r30, 0x38	; 56
    3024:	f0 e0       	ldi	r31, 0x00	; 0
    3026:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
    3028:	e5 e3       	ldi	r30, 0x35	; 53
    302a:	f0 e0       	ldi	r31, 0x00	; 0
    302c:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
    302e:	e2 e3       	ldi	r30, 0x32	; 50
    3030:	f0 e0       	ldi	r31, 0x00	; 0
    3032:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
    3034:	cf 91       	pop	r28
    3036:	df 91       	pop	r29
    3038:	08 95       	ret

0000303a <HSTEPPER_vInit>:

#define F_CPU 12000000UL


void HSTEPPER_vInit(void)
{
    303a:	df 93       	push	r29
    303c:	cf 93       	push	r28
    303e:	cd b7       	in	r28, 0x3d	; 61
    3040:	de b7       	in	r29, 0x3e	; 62
//	u8 pinMask = (1 << STPR_PIN0) | (1 << STPR_PIN1) | (1 << STPR_PIN2) | (1 << STPR_PIN3);
//	MDIO_vSetPortDir(STPR_PORT , pinMask);

	MDIO_vSetPinDir(STPR_PORT , STPR_PIN0 , DIO_OUTPUT);
    3042:	82 e0       	ldi	r24, 0x02	; 2
    3044:	60 e0       	ldi	r22, 0x00	; 0
    3046:	41 e0       	ldi	r20, 0x01	; 1
    3048:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN1 , DIO_OUTPUT);
    304c:	82 e0       	ldi	r24, 0x02	; 2
    304e:	61 e0       	ldi	r22, 0x01	; 1
    3050:	41 e0       	ldi	r20, 0x01	; 1
    3052:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN2 , DIO_OUTPUT);
    3056:	82 e0       	ldi	r24, 0x02	; 2
    3058:	62 e0       	ldi	r22, 0x02	; 2
    305a:	41 e0       	ldi	r20, 0x01	; 1
    305c:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
	MDIO_vSetPinDir(STPR_PORT , STPR_PIN3 , DIO_OUTPUT);
    3060:	82 e0       	ldi	r24, 0x02	; 2
    3062:	63 e0       	ldi	r22, 0x03	; 3
    3064:	41 e0       	ldi	r20, 0x01	; 1
    3066:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
}
    306a:	cf 91       	pop	r28
    306c:	df 91       	pop	r29
    306e:	08 95       	ret

00003070 <HSTEPPER_vRotate>:

void HSTEPPER_vRotate(u16 A_u16Angle)
{
    3070:	df 93       	push	r29
    3072:	cf 93       	push	r28
    3074:	cd b7       	in	r28, 0x3d	; 61
    3076:	de b7       	in	r29, 0x3e	; 62
    3078:	ee 97       	sbiw	r28, 0x3e	; 62
    307a:	0f b6       	in	r0, 0x3f	; 63
    307c:	f8 94       	cli
    307e:	de bf       	out	0x3e, r29	; 62
    3080:	0f be       	out	0x3f, r0	; 63
    3082:	cd bf       	out	0x3d, r28	; 61
    3084:	9e af       	std	Y+62, r25	; 0x3e
    3086:	8d af       	std	Y+61, r24	; 0x3d

u16 Iteration = (512 * A_u16Angle) / 360;
    3088:	8d ad       	ldd	r24, Y+61	; 0x3d
    308a:	9e ad       	ldd	r25, Y+62	; 0x3e
    308c:	98 2f       	mov	r25, r24
    308e:	88 27       	eor	r24, r24
    3090:	99 0f       	add	r25, r25
    3092:	28 e6       	ldi	r18, 0x68	; 104
    3094:	31 e0       	ldi	r19, 0x01	; 1
    3096:	b9 01       	movw	r22, r18
    3098:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__udivmodhi4>
    309c:	cb 01       	movw	r24, r22
    309e:	9c af       	std	Y+60, r25	; 0x3c
    30a0:	8b af       	std	Y+59, r24	; 0x3b

    for(u16 i = 0; i < Iteration; i++)
    30a2:	1a ae       	std	Y+58, r1	; 0x3a
    30a4:	19 ae       	std	Y+57, r1	; 0x39
    30a6:	1d c2       	rjmp	.+1082   	; 0x34e2 <HSTEPPER_vRotate+0x472>
    {
        // Step 1
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_LOW);
    30a8:	82 e0       	ldi	r24, 0x02	; 2
    30aa:	60 e0       	ldi	r22, 0x00	; 0
    30ac:	40 e0       	ldi	r20, 0x00	; 0
    30ae:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    30b2:	82 e0       	ldi	r24, 0x02	; 2
    30b4:	61 e0       	ldi	r22, 0x01	; 1
    30b6:	41 e0       	ldi	r20, 0x01	; 1
    30b8:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    30bc:	82 e0       	ldi	r24, 0x02	; 2
    30be:	62 e0       	ldi	r22, 0x02	; 2
    30c0:	41 e0       	ldi	r20, 0x01	; 1
    30c2:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    30c6:	82 e0       	ldi	r24, 0x02	; 2
    30c8:	63 e0       	ldi	r22, 0x03	; 3
    30ca:	41 e0       	ldi	r20, 0x01	; 1
    30cc:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    30d0:	80 e0       	ldi	r24, 0x00	; 0
    30d2:	90 e0       	ldi	r25, 0x00	; 0
    30d4:	a0 e2       	ldi	r26, 0x20	; 32
    30d6:	b1 e4       	ldi	r27, 0x41	; 65
    30d8:	8d ab       	std	Y+53, r24	; 0x35
    30da:	9e ab       	std	Y+54, r25	; 0x36
    30dc:	af ab       	std	Y+55, r26	; 0x37
    30de:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30e0:	6d a9       	ldd	r22, Y+53	; 0x35
    30e2:	7e a9       	ldd	r23, Y+54	; 0x36
    30e4:	8f a9       	ldd	r24, Y+55	; 0x37
    30e6:	98 ad       	ldd	r25, Y+56	; 0x38
    30e8:	20 e0       	ldi	r18, 0x00	; 0
    30ea:	30 e8       	ldi	r19, 0x80	; 128
    30ec:	4b e3       	ldi	r20, 0x3B	; 59
    30ee:	55 e4       	ldi	r21, 0x45	; 69
    30f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    30f4:	dc 01       	movw	r26, r24
    30f6:	cb 01       	movw	r24, r22
    30f8:	89 ab       	std	Y+49, r24	; 0x31
    30fa:	9a ab       	std	Y+50, r25	; 0x32
    30fc:	ab ab       	std	Y+51, r26	; 0x33
    30fe:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3100:	69 a9       	ldd	r22, Y+49	; 0x31
    3102:	7a a9       	ldd	r23, Y+50	; 0x32
    3104:	8b a9       	ldd	r24, Y+51	; 0x33
    3106:	9c a9       	ldd	r25, Y+52	; 0x34
    3108:	20 e0       	ldi	r18, 0x00	; 0
    310a:	30 e0       	ldi	r19, 0x00	; 0
    310c:	40 e8       	ldi	r20, 0x80	; 128
    310e:	5f e3       	ldi	r21, 0x3F	; 63
    3110:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3114:	88 23       	and	r24, r24
    3116:	2c f4       	brge	.+10     	; 0x3122 <HSTEPPER_vRotate+0xb2>
		__ticks = 1;
    3118:	81 e0       	ldi	r24, 0x01	; 1
    311a:	90 e0       	ldi	r25, 0x00	; 0
    311c:	98 ab       	std	Y+48, r25	; 0x30
    311e:	8f a7       	std	Y+47, r24	; 0x2f
    3120:	3f c0       	rjmp	.+126    	; 0x31a0 <HSTEPPER_vRotate+0x130>
	else if (__tmp > 65535)
    3122:	69 a9       	ldd	r22, Y+49	; 0x31
    3124:	7a a9       	ldd	r23, Y+50	; 0x32
    3126:	8b a9       	ldd	r24, Y+51	; 0x33
    3128:	9c a9       	ldd	r25, Y+52	; 0x34
    312a:	20 e0       	ldi	r18, 0x00	; 0
    312c:	3f ef       	ldi	r19, 0xFF	; 255
    312e:	4f e7       	ldi	r20, 0x7F	; 127
    3130:	57 e4       	ldi	r21, 0x47	; 71
    3132:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3136:	18 16       	cp	r1, r24
    3138:	4c f5       	brge	.+82     	; 0x318c <HSTEPPER_vRotate+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    313a:	6d a9       	ldd	r22, Y+53	; 0x35
    313c:	7e a9       	ldd	r23, Y+54	; 0x36
    313e:	8f a9       	ldd	r24, Y+55	; 0x37
    3140:	98 ad       	ldd	r25, Y+56	; 0x38
    3142:	20 e0       	ldi	r18, 0x00	; 0
    3144:	30 e0       	ldi	r19, 0x00	; 0
    3146:	40 e2       	ldi	r20, 0x20	; 32
    3148:	51 e4       	ldi	r21, 0x41	; 65
    314a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    314e:	dc 01       	movw	r26, r24
    3150:	cb 01       	movw	r24, r22
    3152:	bc 01       	movw	r22, r24
    3154:	cd 01       	movw	r24, r26
    3156:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    315a:	dc 01       	movw	r26, r24
    315c:	cb 01       	movw	r24, r22
    315e:	98 ab       	std	Y+48, r25	; 0x30
    3160:	8f a7       	std	Y+47, r24	; 0x2f
    3162:	0f c0       	rjmp	.+30     	; 0x3182 <HSTEPPER_vRotate+0x112>
    3164:	8c e2       	ldi	r24, 0x2C	; 44
    3166:	91 e0       	ldi	r25, 0x01	; 1
    3168:	9e a7       	std	Y+46, r25	; 0x2e
    316a:	8d a7       	std	Y+45, r24	; 0x2d
    316c:	8d a5       	ldd	r24, Y+45	; 0x2d
    316e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3170:	01 97       	sbiw	r24, 0x01	; 1
    3172:	f1 f7       	brne	.-4      	; 0x3170 <HSTEPPER_vRotate+0x100>
    3174:	9e a7       	std	Y+46, r25	; 0x2e
    3176:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3178:	8f a5       	ldd	r24, Y+47	; 0x2f
    317a:	98 a9       	ldd	r25, Y+48	; 0x30
    317c:	01 97       	sbiw	r24, 0x01	; 1
    317e:	98 ab       	std	Y+48, r25	; 0x30
    3180:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3182:	8f a5       	ldd	r24, Y+47	; 0x2f
    3184:	98 a9       	ldd	r25, Y+48	; 0x30
    3186:	00 97       	sbiw	r24, 0x00	; 0
    3188:	69 f7       	brne	.-38     	; 0x3164 <HSTEPPER_vRotate+0xf4>
    318a:	14 c0       	rjmp	.+40     	; 0x31b4 <HSTEPPER_vRotate+0x144>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    318c:	69 a9       	ldd	r22, Y+49	; 0x31
    318e:	7a a9       	ldd	r23, Y+50	; 0x32
    3190:	8b a9       	ldd	r24, Y+51	; 0x33
    3192:	9c a9       	ldd	r25, Y+52	; 0x34
    3194:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3198:	dc 01       	movw	r26, r24
    319a:	cb 01       	movw	r24, r22
    319c:	98 ab       	std	Y+48, r25	; 0x30
    319e:	8f a7       	std	Y+47, r24	; 0x2f
    31a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    31a2:	98 a9       	ldd	r25, Y+48	; 0x30
    31a4:	9c a7       	std	Y+44, r25	; 0x2c
    31a6:	8b a7       	std	Y+43, r24	; 0x2b
    31a8:	8b a5       	ldd	r24, Y+43	; 0x2b
    31aa:	9c a5       	ldd	r25, Y+44	; 0x2c
    31ac:	01 97       	sbiw	r24, 0x01	; 1
    31ae:	f1 f7       	brne	.-4      	; 0x31ac <HSTEPPER_vRotate+0x13c>
    31b0:	9c a7       	std	Y+44, r25	; 0x2c
    31b2:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(10);

        // Step 2
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    31b4:	82 e0       	ldi	r24, 0x02	; 2
    31b6:	60 e0       	ldi	r22, 0x00	; 0
    31b8:	41 e0       	ldi	r20, 0x01	; 1
    31ba:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_LOW);
    31be:	82 e0       	ldi	r24, 0x02	; 2
    31c0:	61 e0       	ldi	r22, 0x01	; 1
    31c2:	40 e0       	ldi	r20, 0x00	; 0
    31c4:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    31c8:	82 e0       	ldi	r24, 0x02	; 2
    31ca:	62 e0       	ldi	r22, 0x02	; 2
    31cc:	41 e0       	ldi	r20, 0x01	; 1
    31ce:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    31d2:	82 e0       	ldi	r24, 0x02	; 2
    31d4:	63 e0       	ldi	r22, 0x03	; 3
    31d6:	41 e0       	ldi	r20, 0x01	; 1
    31d8:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    31dc:	80 e0       	ldi	r24, 0x00	; 0
    31de:	90 e0       	ldi	r25, 0x00	; 0
    31e0:	a0 e2       	ldi	r26, 0x20	; 32
    31e2:	b1 e4       	ldi	r27, 0x41	; 65
    31e4:	8f a3       	std	Y+39, r24	; 0x27
    31e6:	98 a7       	std	Y+40, r25	; 0x28
    31e8:	a9 a7       	std	Y+41, r26	; 0x29
    31ea:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31ec:	6f a1       	ldd	r22, Y+39	; 0x27
    31ee:	78 a5       	ldd	r23, Y+40	; 0x28
    31f0:	89 a5       	ldd	r24, Y+41	; 0x29
    31f2:	9a a5       	ldd	r25, Y+42	; 0x2a
    31f4:	20 e0       	ldi	r18, 0x00	; 0
    31f6:	30 e8       	ldi	r19, 0x80	; 128
    31f8:	4b e3       	ldi	r20, 0x3B	; 59
    31fa:	55 e4       	ldi	r21, 0x45	; 69
    31fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3200:	dc 01       	movw	r26, r24
    3202:	cb 01       	movw	r24, r22
    3204:	8b a3       	std	Y+35, r24	; 0x23
    3206:	9c a3       	std	Y+36, r25	; 0x24
    3208:	ad a3       	std	Y+37, r26	; 0x25
    320a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    320c:	6b a1       	ldd	r22, Y+35	; 0x23
    320e:	7c a1       	ldd	r23, Y+36	; 0x24
    3210:	8d a1       	ldd	r24, Y+37	; 0x25
    3212:	9e a1       	ldd	r25, Y+38	; 0x26
    3214:	20 e0       	ldi	r18, 0x00	; 0
    3216:	30 e0       	ldi	r19, 0x00	; 0
    3218:	40 e8       	ldi	r20, 0x80	; 128
    321a:	5f e3       	ldi	r21, 0x3F	; 63
    321c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3220:	88 23       	and	r24, r24
    3222:	2c f4       	brge	.+10     	; 0x322e <HSTEPPER_vRotate+0x1be>
		__ticks = 1;
    3224:	81 e0       	ldi	r24, 0x01	; 1
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	9a a3       	std	Y+34, r25	; 0x22
    322a:	89 a3       	std	Y+33, r24	; 0x21
    322c:	3f c0       	rjmp	.+126    	; 0x32ac <HSTEPPER_vRotate+0x23c>
	else if (__tmp > 65535)
    322e:	6b a1       	ldd	r22, Y+35	; 0x23
    3230:	7c a1       	ldd	r23, Y+36	; 0x24
    3232:	8d a1       	ldd	r24, Y+37	; 0x25
    3234:	9e a1       	ldd	r25, Y+38	; 0x26
    3236:	20 e0       	ldi	r18, 0x00	; 0
    3238:	3f ef       	ldi	r19, 0xFF	; 255
    323a:	4f e7       	ldi	r20, 0x7F	; 127
    323c:	57 e4       	ldi	r21, 0x47	; 71
    323e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3242:	18 16       	cp	r1, r24
    3244:	4c f5       	brge	.+82     	; 0x3298 <HSTEPPER_vRotate+0x228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3246:	6f a1       	ldd	r22, Y+39	; 0x27
    3248:	78 a5       	ldd	r23, Y+40	; 0x28
    324a:	89 a5       	ldd	r24, Y+41	; 0x29
    324c:	9a a5       	ldd	r25, Y+42	; 0x2a
    324e:	20 e0       	ldi	r18, 0x00	; 0
    3250:	30 e0       	ldi	r19, 0x00	; 0
    3252:	40 e2       	ldi	r20, 0x20	; 32
    3254:	51 e4       	ldi	r21, 0x41	; 65
    3256:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    325a:	dc 01       	movw	r26, r24
    325c:	cb 01       	movw	r24, r22
    325e:	bc 01       	movw	r22, r24
    3260:	cd 01       	movw	r24, r26
    3262:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3266:	dc 01       	movw	r26, r24
    3268:	cb 01       	movw	r24, r22
    326a:	9a a3       	std	Y+34, r25	; 0x22
    326c:	89 a3       	std	Y+33, r24	; 0x21
    326e:	0f c0       	rjmp	.+30     	; 0x328e <HSTEPPER_vRotate+0x21e>
    3270:	8c e2       	ldi	r24, 0x2C	; 44
    3272:	91 e0       	ldi	r25, 0x01	; 1
    3274:	98 a3       	std	Y+32, r25	; 0x20
    3276:	8f 8f       	std	Y+31, r24	; 0x1f
    3278:	8f 8d       	ldd	r24, Y+31	; 0x1f
    327a:	98 a1       	ldd	r25, Y+32	; 0x20
    327c:	01 97       	sbiw	r24, 0x01	; 1
    327e:	f1 f7       	brne	.-4      	; 0x327c <HSTEPPER_vRotate+0x20c>
    3280:	98 a3       	std	Y+32, r25	; 0x20
    3282:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3284:	89 a1       	ldd	r24, Y+33	; 0x21
    3286:	9a a1       	ldd	r25, Y+34	; 0x22
    3288:	01 97       	sbiw	r24, 0x01	; 1
    328a:	9a a3       	std	Y+34, r25	; 0x22
    328c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    328e:	89 a1       	ldd	r24, Y+33	; 0x21
    3290:	9a a1       	ldd	r25, Y+34	; 0x22
    3292:	00 97       	sbiw	r24, 0x00	; 0
    3294:	69 f7       	brne	.-38     	; 0x3270 <HSTEPPER_vRotate+0x200>
    3296:	14 c0       	rjmp	.+40     	; 0x32c0 <HSTEPPER_vRotate+0x250>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3298:	6b a1       	ldd	r22, Y+35	; 0x23
    329a:	7c a1       	ldd	r23, Y+36	; 0x24
    329c:	8d a1       	ldd	r24, Y+37	; 0x25
    329e:	9e a1       	ldd	r25, Y+38	; 0x26
    32a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    32a4:	dc 01       	movw	r26, r24
    32a6:	cb 01       	movw	r24, r22
    32a8:	9a a3       	std	Y+34, r25	; 0x22
    32aa:	89 a3       	std	Y+33, r24	; 0x21
    32ac:	89 a1       	ldd	r24, Y+33	; 0x21
    32ae:	9a a1       	ldd	r25, Y+34	; 0x22
    32b0:	9e 8f       	std	Y+30, r25	; 0x1e
    32b2:	8d 8f       	std	Y+29, r24	; 0x1d
    32b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    32b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    32b8:	01 97       	sbiw	r24, 0x01	; 1
    32ba:	f1 f7       	brne	.-4      	; 0x32b8 <HSTEPPER_vRotate+0x248>
    32bc:	9e 8f       	std	Y+30, r25	; 0x1e
    32be:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(10);

        // Step 3
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    32c0:	82 e0       	ldi	r24, 0x02	; 2
    32c2:	60 e0       	ldi	r22, 0x00	; 0
    32c4:	41 e0       	ldi	r20, 0x01	; 1
    32c6:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    32ca:	82 e0       	ldi	r24, 0x02	; 2
    32cc:	61 e0       	ldi	r22, 0x01	; 1
    32ce:	41 e0       	ldi	r20, 0x01	; 1
    32d0:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_LOW);
    32d4:	82 e0       	ldi	r24, 0x02	; 2
    32d6:	62 e0       	ldi	r22, 0x02	; 2
    32d8:	40 e0       	ldi	r20, 0x00	; 0
    32da:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_HIGH);
    32de:	82 e0       	ldi	r24, 0x02	; 2
    32e0:	63 e0       	ldi	r22, 0x03	; 3
    32e2:	41 e0       	ldi	r20, 0x01	; 1
    32e4:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    32e8:	80 e0       	ldi	r24, 0x00	; 0
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	a0 e2       	ldi	r26, 0x20	; 32
    32ee:	b1 e4       	ldi	r27, 0x41	; 65
    32f0:	89 8f       	std	Y+25, r24	; 0x19
    32f2:	9a 8f       	std	Y+26, r25	; 0x1a
    32f4:	ab 8f       	std	Y+27, r26	; 0x1b
    32f6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32f8:	69 8d       	ldd	r22, Y+25	; 0x19
    32fa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32fe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3300:	20 e0       	ldi	r18, 0x00	; 0
    3302:	30 e8       	ldi	r19, 0x80	; 128
    3304:	4b e3       	ldi	r20, 0x3B	; 59
    3306:	55 e4       	ldi	r21, 0x45	; 69
    3308:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    330c:	dc 01       	movw	r26, r24
    330e:	cb 01       	movw	r24, r22
    3310:	8d 8b       	std	Y+21, r24	; 0x15
    3312:	9e 8b       	std	Y+22, r25	; 0x16
    3314:	af 8b       	std	Y+23, r26	; 0x17
    3316:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3318:	6d 89       	ldd	r22, Y+21	; 0x15
    331a:	7e 89       	ldd	r23, Y+22	; 0x16
    331c:	8f 89       	ldd	r24, Y+23	; 0x17
    331e:	98 8d       	ldd	r25, Y+24	; 0x18
    3320:	20 e0       	ldi	r18, 0x00	; 0
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	40 e8       	ldi	r20, 0x80	; 128
    3326:	5f e3       	ldi	r21, 0x3F	; 63
    3328:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    332c:	88 23       	and	r24, r24
    332e:	2c f4       	brge	.+10     	; 0x333a <HSTEPPER_vRotate+0x2ca>
		__ticks = 1;
    3330:	81 e0       	ldi	r24, 0x01	; 1
    3332:	90 e0       	ldi	r25, 0x00	; 0
    3334:	9c 8b       	std	Y+20, r25	; 0x14
    3336:	8b 8b       	std	Y+19, r24	; 0x13
    3338:	3f c0       	rjmp	.+126    	; 0x33b8 <HSTEPPER_vRotate+0x348>
	else if (__tmp > 65535)
    333a:	6d 89       	ldd	r22, Y+21	; 0x15
    333c:	7e 89       	ldd	r23, Y+22	; 0x16
    333e:	8f 89       	ldd	r24, Y+23	; 0x17
    3340:	98 8d       	ldd	r25, Y+24	; 0x18
    3342:	20 e0       	ldi	r18, 0x00	; 0
    3344:	3f ef       	ldi	r19, 0xFF	; 255
    3346:	4f e7       	ldi	r20, 0x7F	; 127
    3348:	57 e4       	ldi	r21, 0x47	; 71
    334a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    334e:	18 16       	cp	r1, r24
    3350:	4c f5       	brge	.+82     	; 0x33a4 <HSTEPPER_vRotate+0x334>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3352:	69 8d       	ldd	r22, Y+25	; 0x19
    3354:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3356:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3358:	9c 8d       	ldd	r25, Y+28	; 0x1c
    335a:	20 e0       	ldi	r18, 0x00	; 0
    335c:	30 e0       	ldi	r19, 0x00	; 0
    335e:	40 e2       	ldi	r20, 0x20	; 32
    3360:	51 e4       	ldi	r21, 0x41	; 65
    3362:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3366:	dc 01       	movw	r26, r24
    3368:	cb 01       	movw	r24, r22
    336a:	bc 01       	movw	r22, r24
    336c:	cd 01       	movw	r24, r26
    336e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3372:	dc 01       	movw	r26, r24
    3374:	cb 01       	movw	r24, r22
    3376:	9c 8b       	std	Y+20, r25	; 0x14
    3378:	8b 8b       	std	Y+19, r24	; 0x13
    337a:	0f c0       	rjmp	.+30     	; 0x339a <HSTEPPER_vRotate+0x32a>
    337c:	8c e2       	ldi	r24, 0x2C	; 44
    337e:	91 e0       	ldi	r25, 0x01	; 1
    3380:	9a 8b       	std	Y+18, r25	; 0x12
    3382:	89 8b       	std	Y+17, r24	; 0x11
    3384:	89 89       	ldd	r24, Y+17	; 0x11
    3386:	9a 89       	ldd	r25, Y+18	; 0x12
    3388:	01 97       	sbiw	r24, 0x01	; 1
    338a:	f1 f7       	brne	.-4      	; 0x3388 <HSTEPPER_vRotate+0x318>
    338c:	9a 8b       	std	Y+18, r25	; 0x12
    338e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3390:	8b 89       	ldd	r24, Y+19	; 0x13
    3392:	9c 89       	ldd	r25, Y+20	; 0x14
    3394:	01 97       	sbiw	r24, 0x01	; 1
    3396:	9c 8b       	std	Y+20, r25	; 0x14
    3398:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    339a:	8b 89       	ldd	r24, Y+19	; 0x13
    339c:	9c 89       	ldd	r25, Y+20	; 0x14
    339e:	00 97       	sbiw	r24, 0x00	; 0
    33a0:	69 f7       	brne	.-38     	; 0x337c <HSTEPPER_vRotate+0x30c>
    33a2:	14 c0       	rjmp	.+40     	; 0x33cc <HSTEPPER_vRotate+0x35c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33a4:	6d 89       	ldd	r22, Y+21	; 0x15
    33a6:	7e 89       	ldd	r23, Y+22	; 0x16
    33a8:	8f 89       	ldd	r24, Y+23	; 0x17
    33aa:	98 8d       	ldd	r25, Y+24	; 0x18
    33ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33b0:	dc 01       	movw	r26, r24
    33b2:	cb 01       	movw	r24, r22
    33b4:	9c 8b       	std	Y+20, r25	; 0x14
    33b6:	8b 8b       	std	Y+19, r24	; 0x13
    33b8:	8b 89       	ldd	r24, Y+19	; 0x13
    33ba:	9c 89       	ldd	r25, Y+20	; 0x14
    33bc:	98 8b       	std	Y+16, r25	; 0x10
    33be:	8f 87       	std	Y+15, r24	; 0x0f
    33c0:	8f 85       	ldd	r24, Y+15	; 0x0f
    33c2:	98 89       	ldd	r25, Y+16	; 0x10
    33c4:	01 97       	sbiw	r24, 0x01	; 1
    33c6:	f1 f7       	brne	.-4      	; 0x33c4 <HSTEPPER_vRotate+0x354>
    33c8:	98 8b       	std	Y+16, r25	; 0x10
    33ca:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(10);

        // Step 4
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN0, DIO_HIGH);
    33cc:	82 e0       	ldi	r24, 0x02	; 2
    33ce:	60 e0       	ldi	r22, 0x00	; 0
    33d0:	41 e0       	ldi	r20, 0x01	; 1
    33d2:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
    33d6:	82 e0       	ldi	r24, 0x02	; 2
    33d8:	61 e0       	ldi	r22, 0x01	; 1
    33da:	41 e0       	ldi	r20, 0x01	; 1
    33dc:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
    33e0:	82 e0       	ldi	r24, 0x02	; 2
    33e2:	62 e0       	ldi	r22, 0x02	; 2
    33e4:	41 e0       	ldi	r20, 0x01	; 1
    33e6:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_LOW);
    33ea:	82 e0       	ldi	r24, 0x02	; 2
    33ec:	63 e0       	ldi	r22, 0x03	; 3
    33ee:	40 e0       	ldi	r20, 0x00	; 0
    33f0:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    33f4:	80 e0       	ldi	r24, 0x00	; 0
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	a0 e2       	ldi	r26, 0x20	; 32
    33fa:	b1 e4       	ldi	r27, 0x41	; 65
    33fc:	8b 87       	std	Y+11, r24	; 0x0b
    33fe:	9c 87       	std	Y+12, r25	; 0x0c
    3400:	ad 87       	std	Y+13, r26	; 0x0d
    3402:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3404:	6b 85       	ldd	r22, Y+11	; 0x0b
    3406:	7c 85       	ldd	r23, Y+12	; 0x0c
    3408:	8d 85       	ldd	r24, Y+13	; 0x0d
    340a:	9e 85       	ldd	r25, Y+14	; 0x0e
    340c:	20 e0       	ldi	r18, 0x00	; 0
    340e:	30 e8       	ldi	r19, 0x80	; 128
    3410:	4b e3       	ldi	r20, 0x3B	; 59
    3412:	55 e4       	ldi	r21, 0x45	; 69
    3414:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3418:	dc 01       	movw	r26, r24
    341a:	cb 01       	movw	r24, r22
    341c:	8f 83       	std	Y+7, r24	; 0x07
    341e:	98 87       	std	Y+8, r25	; 0x08
    3420:	a9 87       	std	Y+9, r26	; 0x09
    3422:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3424:	6f 81       	ldd	r22, Y+7	; 0x07
    3426:	78 85       	ldd	r23, Y+8	; 0x08
    3428:	89 85       	ldd	r24, Y+9	; 0x09
    342a:	9a 85       	ldd	r25, Y+10	; 0x0a
    342c:	20 e0       	ldi	r18, 0x00	; 0
    342e:	30 e0       	ldi	r19, 0x00	; 0
    3430:	40 e8       	ldi	r20, 0x80	; 128
    3432:	5f e3       	ldi	r21, 0x3F	; 63
    3434:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3438:	88 23       	and	r24, r24
    343a:	2c f4       	brge	.+10     	; 0x3446 <HSTEPPER_vRotate+0x3d6>
		__ticks = 1;
    343c:	81 e0       	ldi	r24, 0x01	; 1
    343e:	90 e0       	ldi	r25, 0x00	; 0
    3440:	9e 83       	std	Y+6, r25	; 0x06
    3442:	8d 83       	std	Y+5, r24	; 0x05
    3444:	3f c0       	rjmp	.+126    	; 0x34c4 <HSTEPPER_vRotate+0x454>
	else if (__tmp > 65535)
    3446:	6f 81       	ldd	r22, Y+7	; 0x07
    3448:	78 85       	ldd	r23, Y+8	; 0x08
    344a:	89 85       	ldd	r24, Y+9	; 0x09
    344c:	9a 85       	ldd	r25, Y+10	; 0x0a
    344e:	20 e0       	ldi	r18, 0x00	; 0
    3450:	3f ef       	ldi	r19, 0xFF	; 255
    3452:	4f e7       	ldi	r20, 0x7F	; 127
    3454:	57 e4       	ldi	r21, 0x47	; 71
    3456:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    345a:	18 16       	cp	r1, r24
    345c:	4c f5       	brge	.+82     	; 0x34b0 <HSTEPPER_vRotate+0x440>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    345e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3460:	7c 85       	ldd	r23, Y+12	; 0x0c
    3462:	8d 85       	ldd	r24, Y+13	; 0x0d
    3464:	9e 85       	ldd	r25, Y+14	; 0x0e
    3466:	20 e0       	ldi	r18, 0x00	; 0
    3468:	30 e0       	ldi	r19, 0x00	; 0
    346a:	40 e2       	ldi	r20, 0x20	; 32
    346c:	51 e4       	ldi	r21, 0x41	; 65
    346e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3472:	dc 01       	movw	r26, r24
    3474:	cb 01       	movw	r24, r22
    3476:	bc 01       	movw	r22, r24
    3478:	cd 01       	movw	r24, r26
    347a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    347e:	dc 01       	movw	r26, r24
    3480:	cb 01       	movw	r24, r22
    3482:	9e 83       	std	Y+6, r25	; 0x06
    3484:	8d 83       	std	Y+5, r24	; 0x05
    3486:	0f c0       	rjmp	.+30     	; 0x34a6 <HSTEPPER_vRotate+0x436>
    3488:	8c e2       	ldi	r24, 0x2C	; 44
    348a:	91 e0       	ldi	r25, 0x01	; 1
    348c:	9c 83       	std	Y+4, r25	; 0x04
    348e:	8b 83       	std	Y+3, r24	; 0x03
    3490:	8b 81       	ldd	r24, Y+3	; 0x03
    3492:	9c 81       	ldd	r25, Y+4	; 0x04
    3494:	01 97       	sbiw	r24, 0x01	; 1
    3496:	f1 f7       	brne	.-4      	; 0x3494 <HSTEPPER_vRotate+0x424>
    3498:	9c 83       	std	Y+4, r25	; 0x04
    349a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    349c:	8d 81       	ldd	r24, Y+5	; 0x05
    349e:	9e 81       	ldd	r25, Y+6	; 0x06
    34a0:	01 97       	sbiw	r24, 0x01	; 1
    34a2:	9e 83       	std	Y+6, r25	; 0x06
    34a4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34a6:	8d 81       	ldd	r24, Y+5	; 0x05
    34a8:	9e 81       	ldd	r25, Y+6	; 0x06
    34aa:	00 97       	sbiw	r24, 0x00	; 0
    34ac:	69 f7       	brne	.-38     	; 0x3488 <HSTEPPER_vRotate+0x418>
    34ae:	14 c0       	rjmp	.+40     	; 0x34d8 <HSTEPPER_vRotate+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34b0:	6f 81       	ldd	r22, Y+7	; 0x07
    34b2:	78 85       	ldd	r23, Y+8	; 0x08
    34b4:	89 85       	ldd	r24, Y+9	; 0x09
    34b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    34b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34bc:	dc 01       	movw	r26, r24
    34be:	cb 01       	movw	r24, r22
    34c0:	9e 83       	std	Y+6, r25	; 0x06
    34c2:	8d 83       	std	Y+5, r24	; 0x05
    34c4:	8d 81       	ldd	r24, Y+5	; 0x05
    34c6:	9e 81       	ldd	r25, Y+6	; 0x06
    34c8:	9a 83       	std	Y+2, r25	; 0x02
    34ca:	89 83       	std	Y+1, r24	; 0x01
    34cc:	89 81       	ldd	r24, Y+1	; 0x01
    34ce:	9a 81       	ldd	r25, Y+2	; 0x02
    34d0:	01 97       	sbiw	r24, 0x01	; 1
    34d2:	f1 f7       	brne	.-4      	; 0x34d0 <HSTEPPER_vRotate+0x460>
    34d4:	9a 83       	std	Y+2, r25	; 0x02
    34d6:	89 83       	std	Y+1, r24	; 0x01
void HSTEPPER_vRotate(u16 A_u16Angle)
{

u16 Iteration = (512 * A_u16Angle) / 360;

    for(u16 i = 0; i < Iteration; i++)
    34d8:	89 ad       	ldd	r24, Y+57	; 0x39
    34da:	9a ad       	ldd	r25, Y+58	; 0x3a
    34dc:	01 96       	adiw	r24, 0x01	; 1
    34de:	9a af       	std	Y+58, r25	; 0x3a
    34e0:	89 af       	std	Y+57, r24	; 0x39
    34e2:	29 ad       	ldd	r18, Y+57	; 0x39
    34e4:	3a ad       	ldd	r19, Y+58	; 0x3a
    34e6:	8b ad       	ldd	r24, Y+59	; 0x3b
    34e8:	9c ad       	ldd	r25, Y+60	; 0x3c
    34ea:	28 17       	cp	r18, r24
    34ec:	39 07       	cpc	r19, r25
    34ee:	08 f4       	brcc	.+2      	; 0x34f2 <HSTEPPER_vRotate+0x482>
    34f0:	db cd       	rjmp	.-1098   	; 0x30a8 <HSTEPPER_vRotate+0x38>
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN1, DIO_HIGH);
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN2, DIO_HIGH);
        MDIO_vSetPinVal(STPR_PORT, STPR_PIN3, DIO_LOW);
        _delay_ms(10);
    }
}
    34f2:	ee 96       	adiw	r28, 0x3e	; 62
    34f4:	0f b6       	in	r0, 0x3f	; 63
    34f6:	f8 94       	cli
    34f8:	de bf       	out	0x3e, r29	; 62
    34fa:	0f be       	out	0x3f, r0	; 63
    34fc:	cd bf       	out	0x3d, r28	; 61
    34fe:	cf 91       	pop	r28
    3500:	df 91       	pop	r29
    3502:	08 95       	ret

00003504 <HSSD_vInit>:




void HSSD_vInit(DIO_PORT_e A_PortID)
{
    3504:	df 93       	push	r29
    3506:	cf 93       	push	r28
    3508:	00 d0       	rcall	.+0      	; 0x350a <HSSD_vInit+0x6>
    350a:	0f 92       	push	r0
    350c:	cd b7       	in	r28, 0x3d	; 61
    350e:	de b7       	in	r29, 0x3e	; 62
    3510:	89 83       	std	Y+1, r24	; 0x01
	if((A_PortID <= DIO_PORTD))
    3512:	89 81       	ldd	r24, Y+1	; 0x01
    3514:	84 30       	cpi	r24, 0x04	; 4
    3516:	08 f0       	brcs	.+2      	; 0x351a <HSSD_vInit+0x16>
    3518:	42 c0       	rjmp	.+132    	; 0x359e <HSSD_vInit+0x9a>
	{
		switch(A_PortID)
    351a:	89 81       	ldd	r24, Y+1	; 0x01
    351c:	28 2f       	mov	r18, r24
    351e:	30 e0       	ldi	r19, 0x00	; 0
    3520:	3b 83       	std	Y+3, r19	; 0x03
    3522:	2a 83       	std	Y+2, r18	; 0x02
    3524:	8a 81       	ldd	r24, Y+2	; 0x02
    3526:	9b 81       	ldd	r25, Y+3	; 0x03
    3528:	81 30       	cpi	r24, 0x01	; 1
    352a:	91 05       	cpc	r25, r1
    352c:	f1 f0       	breq	.+60     	; 0x356a <HSSD_vInit+0x66>
    352e:	2a 81       	ldd	r18, Y+2	; 0x02
    3530:	3b 81       	ldd	r19, Y+3	; 0x03
    3532:	22 30       	cpi	r18, 0x02	; 2
    3534:	31 05       	cpc	r19, r1
    3536:	2c f4       	brge	.+10     	; 0x3542 <HSSD_vInit+0x3e>
    3538:	8a 81       	ldd	r24, Y+2	; 0x02
    353a:	9b 81       	ldd	r25, Y+3	; 0x03
    353c:	00 97       	sbiw	r24, 0x00	; 0
    353e:	61 f0       	breq	.+24     	; 0x3558 <HSSD_vInit+0x54>
    3540:	2e c0       	rjmp	.+92     	; 0x359e <HSSD_vInit+0x9a>
    3542:	2a 81       	ldd	r18, Y+2	; 0x02
    3544:	3b 81       	ldd	r19, Y+3	; 0x03
    3546:	22 30       	cpi	r18, 0x02	; 2
    3548:	31 05       	cpc	r19, r1
    354a:	c1 f0       	breq	.+48     	; 0x357c <HSSD_vInit+0x78>
    354c:	8a 81       	ldd	r24, Y+2	; 0x02
    354e:	9b 81       	ldd	r25, Y+3	; 0x03
    3550:	83 30       	cpi	r24, 0x03	; 3
    3552:	91 05       	cpc	r25, r1
    3554:	e1 f0       	breq	.+56     	; 0x358e <HSSD_vInit+0x8a>
    3556:	23 c0       	rjmp	.+70     	; 0x359e <HSSD_vInit+0x9a>
		{
		case DIO_PORTA:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    3558:	89 81       	ldd	r24, Y+1	; 0x01
    355a:	6f ef       	ldi	r22, 0xFF	; 255
    355c:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3560:	89 81       	ldd	r24, Y+1	; 0x01
    3562:	6f ef       	ldi	r22, 0xFF	; 255
    3564:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    3568:	1a c0       	rjmp	.+52     	; 0x359e <HSSD_vInit+0x9a>
			break;
		case DIO_PORTB:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    356a:	89 81       	ldd	r24, Y+1	; 0x01
    356c:	6f ef       	ldi	r22, 0xFF	; 255
    356e:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3572:	89 81       	ldd	r24, Y+1	; 0x01
    3574:	6f ef       	ldi	r22, 0xFF	; 255
    3576:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    357a:	11 c0       	rjmp	.+34     	; 0x359e <HSSD_vInit+0x9a>
			break;
		case DIO_PORTC:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    357c:	89 81       	ldd	r24, Y+1	; 0x01
    357e:	6f ef       	ldi	r22, 0xFF	; 255
    3580:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3584:	89 81       	ldd	r24, Y+1	; 0x01
    3586:	6f ef       	ldi	r22, 0xFF	; 255
    3588:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    358c:	08 c0       	rjmp	.+16     	; 0x359e <HSSD_vInit+0x9a>
			break;
		case DIO_PORTD:
			MDIO_vSetPortDir(A_PortID , 0xFF);
    358e:	89 81       	ldd	r24, Y+1	; 0x01
    3590:	6f ef       	ldi	r22, 0xFF	; 255
    3592:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
			MDIO_vSetPortVal(A_PortID , 0xFF);
    3596:	89 81       	ldd	r24, Y+1	; 0x01
    3598:	6f ef       	ldi	r22, 0xFF	; 255
    359a:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
			break;
		}
	}
}
    359e:	0f 90       	pop	r0
    35a0:	0f 90       	pop	r0
    35a2:	0f 90       	pop	r0
    35a4:	cf 91       	pop	r28
    35a6:	df 91       	pop	r29
    35a8:	08 95       	ret

000035aa <HSSD_vDisplayNumber>:

void HSSD_vDisplayNumber(DIO_PORT_e A_PortID, u8 A_u8NumberValue)
{
    35aa:	df 93       	push	r29
    35ac:	cf 93       	push	r28
    35ae:	00 d0       	rcall	.+0      	; 0x35b0 <HSSD_vDisplayNumber+0x6>
    35b0:	00 d0       	rcall	.+0      	; 0x35b2 <HSSD_vDisplayNumber+0x8>
    35b2:	cd b7       	in	r28, 0x3d	; 61
    35b4:	de b7       	in	r29, 0x3e	; 62
    35b6:	89 83       	std	Y+1, r24	; 0x01
    35b8:	6a 83       	std	Y+2, r22	; 0x02
	if(A_PortID <= DIO_PORTD)
    35ba:	89 81       	ldd	r24, Y+1	; 0x01
    35bc:	84 30       	cpi	r24, 0x04	; 4
    35be:	90 f5       	brcc	.+100    	; 0x3624 <HSSD_vDisplayNumber+0x7a>
	{
		switch(A_PortID)
    35c0:	89 81       	ldd	r24, Y+1	; 0x01
    35c2:	28 2f       	mov	r18, r24
    35c4:	30 e0       	ldi	r19, 0x00	; 0
    35c6:	3c 83       	std	Y+4, r19	; 0x04
    35c8:	2b 83       	std	Y+3, r18	; 0x03
    35ca:	8b 81       	ldd	r24, Y+3	; 0x03
    35cc:	9c 81       	ldd	r25, Y+4	; 0x04
    35ce:	81 30       	cpi	r24, 0x01	; 1
    35d0:	91 05       	cpc	r25, r1
    35d2:	d1 f0       	breq	.+52     	; 0x3608 <HSSD_vDisplayNumber+0x5e>
    35d4:	2b 81       	ldd	r18, Y+3	; 0x03
    35d6:	3c 81       	ldd	r19, Y+4	; 0x04
    35d8:	22 30       	cpi	r18, 0x02	; 2
    35da:	31 05       	cpc	r19, r1
    35dc:	2c f4       	brge	.+10     	; 0x35e8 <HSSD_vDisplayNumber+0x3e>
    35de:	8b 81       	ldd	r24, Y+3	; 0x03
    35e0:	9c 81       	ldd	r25, Y+4	; 0x04
    35e2:	00 97       	sbiw	r24, 0x00	; 0
    35e4:	61 f0       	breq	.+24     	; 0x35fe <HSSD_vDisplayNumber+0x54>
    35e6:	1e c0       	rjmp	.+60     	; 0x3624 <HSSD_vDisplayNumber+0x7a>
    35e8:	2b 81       	ldd	r18, Y+3	; 0x03
    35ea:	3c 81       	ldd	r19, Y+4	; 0x04
    35ec:	22 30       	cpi	r18, 0x02	; 2
    35ee:	31 05       	cpc	r19, r1
    35f0:	81 f0       	breq	.+32     	; 0x3612 <HSSD_vDisplayNumber+0x68>
    35f2:	8b 81       	ldd	r24, Y+3	; 0x03
    35f4:	9c 81       	ldd	r25, Y+4	; 0x04
    35f6:	83 30       	cpi	r24, 0x03	; 3
    35f8:	91 05       	cpc	r25, r1
    35fa:	81 f0       	breq	.+32     	; 0x361c <HSSD_vDisplayNumber+0x72>
    35fc:	13 c0       	rjmp	.+38     	; 0x3624 <HSSD_vDisplayNumber+0x7a>
		{
		case DIO_PORTA:
			MDIO_vSetPortVal(A_PortID , A_u8NumberValue);
    35fe:	89 81       	ldd	r24, Y+1	; 0x01
    3600:	6a 81       	ldd	r22, Y+2	; 0x02
    3602:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    3606:	0e c0       	rjmp	.+28     	; 0x3624 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTB:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    3608:	89 81       	ldd	r24, Y+1	; 0x01
    360a:	6a 81       	ldd	r22, Y+2	; 0x02
    360c:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    3610:	09 c0       	rjmp	.+18     	; 0x3624 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTC:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    3612:	89 81       	ldd	r24, Y+1	; 0x01
    3614:	6a 81       	ldd	r22, Y+2	; 0x02
    3616:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
    361a:	04 c0       	rjmp	.+8      	; 0x3624 <HSSD_vDisplayNumber+0x7a>
			break;
		case DIO_PORTD:
			MDIO_vSetPortVal(A_PortID, A_u8NumberValue);
    361c:	89 81       	ldd	r24, Y+1	; 0x01
    361e:	6a 81       	ldd	r22, Y+2	; 0x02
    3620:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
			break;
		}
	}
}
    3624:	0f 90       	pop	r0
    3626:	0f 90       	pop	r0
    3628:	0f 90       	pop	r0
    362a:	0f 90       	pop	r0
    362c:	cf 91       	pop	r28
    362e:	df 91       	pop	r29
    3630:	08 95       	ret

00003632 <HSSD_vDisplayNumberAscending>:
void HSSD_vDisplayNumberAscending(DIO_PORT_e A_PortID , u16 A_u16TimetoWait)
{
    3632:	df 93       	push	r29
    3634:	cf 93       	push	r28
    3636:	cd b7       	in	r28, 0x3d	; 61
    3638:	de b7       	in	r29, 0x3e	; 62
    363a:	c0 55       	subi	r28, 0x50	; 80
    363c:	d0 40       	sbci	r29, 0x00	; 0
    363e:	0f b6       	in	r0, 0x3f	; 63
    3640:	f8 94       	cli
    3642:	de bf       	out	0x3e, r29	; 62
    3644:	0f be       	out	0x3f, r0	; 63
    3646:	cd bf       	out	0x3d, r28	; 61
    3648:	fe 01       	movw	r30, r28
    364a:	e9 5b       	subi	r30, 0xB9	; 185
    364c:	ff 4f       	sbci	r31, 0xFF	; 255
    364e:	80 83       	st	Z, r24
    3650:	fe 01       	movw	r30, r28
    3652:	e8 5b       	subi	r30, 0xB8	; 184
    3654:	ff 4f       	sbci	r31, 0xFF	; 255
    3656:	71 83       	std	Z+1, r23	; 0x01
    3658:	60 83       	st	Z, r22
	u8 SSD_u8ArrOfNumbers [10]= {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    365a:	9e 01       	movw	r18, r28
    365c:	23 5c       	subi	r18, 0xC3	; 195
    365e:	3f 4f       	sbci	r19, 0xFF	; 255
    3660:	2e 96       	adiw	r28, 0x0e	; 14
    3662:	3f af       	std	Y+63, r19	; 0x3f
    3664:	2e af       	std	Y+62, r18	; 0x3e
    3666:	2e 97       	sbiw	r28, 0x0e	; 14
    3668:	8a ea       	ldi	r24, 0xAA	; 170
    366a:	92 e0       	ldi	r25, 0x02	; 2
    366c:	60 96       	adiw	r28, 0x10	; 16
    366e:	9f af       	std	Y+63, r25	; 0x3f
    3670:	8e af       	std	Y+62, r24	; 0x3e
    3672:	60 97       	sbiw	r28, 0x10	; 16
    3674:	9a e0       	ldi	r25, 0x0A	; 10
    3676:	61 96       	adiw	r28, 0x11	; 17
    3678:	9f af       	std	Y+63, r25	; 0x3f
    367a:	61 97       	sbiw	r28, 0x11	; 17
    367c:	60 96       	adiw	r28, 0x10	; 16
    367e:	ee ad       	ldd	r30, Y+62	; 0x3e
    3680:	ff ad       	ldd	r31, Y+63	; 0x3f
    3682:	60 97       	sbiw	r28, 0x10	; 16
    3684:	00 80       	ld	r0, Z
    3686:	60 96       	adiw	r28, 0x10	; 16
    3688:	2e ad       	ldd	r18, Y+62	; 0x3e
    368a:	3f ad       	ldd	r19, Y+63	; 0x3f
    368c:	60 97       	sbiw	r28, 0x10	; 16
    368e:	2f 5f       	subi	r18, 0xFF	; 255
    3690:	3f 4f       	sbci	r19, 0xFF	; 255
    3692:	60 96       	adiw	r28, 0x10	; 16
    3694:	3f af       	std	Y+63, r19	; 0x3f
    3696:	2e af       	std	Y+62, r18	; 0x3e
    3698:	60 97       	sbiw	r28, 0x10	; 16
    369a:	2e 96       	adiw	r28, 0x0e	; 14
    369c:	ee ad       	ldd	r30, Y+62	; 0x3e
    369e:	ff ad       	ldd	r31, Y+63	; 0x3f
    36a0:	2e 97       	sbiw	r28, 0x0e	; 14
    36a2:	00 82       	st	Z, r0
    36a4:	2e 96       	adiw	r28, 0x0e	; 14
    36a6:	2e ad       	ldd	r18, Y+62	; 0x3e
    36a8:	3f ad       	ldd	r19, Y+63	; 0x3f
    36aa:	2e 97       	sbiw	r28, 0x0e	; 14
    36ac:	2f 5f       	subi	r18, 0xFF	; 255
    36ae:	3f 4f       	sbci	r19, 0xFF	; 255
    36b0:	2e 96       	adiw	r28, 0x0e	; 14
    36b2:	3f af       	std	Y+63, r19	; 0x3f
    36b4:	2e af       	std	Y+62, r18	; 0x3e
    36b6:	2e 97       	sbiw	r28, 0x0e	; 14
    36b8:	61 96       	adiw	r28, 0x11	; 17
    36ba:	3f ad       	ldd	r19, Y+63	; 0x3f
    36bc:	61 97       	sbiw	r28, 0x11	; 17
    36be:	31 50       	subi	r19, 0x01	; 1
    36c0:	61 96       	adiw	r28, 0x11	; 17
    36c2:	3f af       	std	Y+63, r19	; 0x3f
    36c4:	61 97       	sbiw	r28, 0x11	; 17
    36c6:	61 96       	adiw	r28, 0x11	; 17
    36c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    36ca:	61 97       	sbiw	r28, 0x11	; 17
    36cc:	88 23       	and	r24, r24
    36ce:	b1 f6       	brne	.-84     	; 0x367c <HSSD_vDisplayNumberAscending+0x4a>
	if(A_PortID <= DIO_PORTD)
    36d0:	fe 01       	movw	r30, r28
    36d2:	e9 5b       	subi	r30, 0xB9	; 185
    36d4:	ff 4f       	sbci	r31, 0xFF	; 255
    36d6:	80 81       	ld	r24, Z
    36d8:	84 30       	cpi	r24, 0x04	; 4
    36da:	08 f0       	brcs	.+2      	; 0x36de <HSSD_vDisplayNumberAscending+0xac>
    36dc:	7c c2       	rjmp	.+1272   	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
	{
		switch(A_PortID)
    36de:	fe 01       	movw	r30, r28
    36e0:	e9 5b       	subi	r30, 0xB9	; 185
    36e2:	ff 4f       	sbci	r31, 0xFF	; 255
    36e4:	80 81       	ld	r24, Z
    36e6:	e8 2f       	mov	r30, r24
    36e8:	f0 e0       	ldi	r31, 0x00	; 0
    36ea:	2c 96       	adiw	r28, 0x0c	; 12
    36ec:	ff af       	std	Y+63, r31	; 0x3f
    36ee:	ee af       	std	Y+62, r30	; 0x3e
    36f0:	2c 97       	sbiw	r28, 0x0c	; 12
    36f2:	2c 96       	adiw	r28, 0x0c	; 12
    36f4:	2e ad       	ldd	r18, Y+62	; 0x3e
    36f6:	3f ad       	ldd	r19, Y+63	; 0x3f
    36f8:	2c 97       	sbiw	r28, 0x0c	; 12
    36fa:	21 30       	cpi	r18, 0x01	; 1
    36fc:	31 05       	cpc	r19, r1
    36fe:	09 f4       	brne	.+2      	; 0x3702 <HSSD_vDisplayNumberAscending+0xd0>
    3700:	b2 c0       	rjmp	.+356    	; 0x3866 <HSSD_vDisplayNumberAscending+0x234>
    3702:	2c 96       	adiw	r28, 0x0c	; 12
    3704:	8e ad       	ldd	r24, Y+62	; 0x3e
    3706:	9f ad       	ldd	r25, Y+63	; 0x3f
    3708:	2c 97       	sbiw	r28, 0x0c	; 12
    370a:	82 30       	cpi	r24, 0x02	; 2
    370c:	91 05       	cpc	r25, r1
    370e:	3c f4       	brge	.+14     	; 0x371e <HSSD_vDisplayNumberAscending+0xec>
    3710:	2c 96       	adiw	r28, 0x0c	; 12
    3712:	ee ad       	ldd	r30, Y+62	; 0x3e
    3714:	ff ad       	ldd	r31, Y+63	; 0x3f
    3716:	2c 97       	sbiw	r28, 0x0c	; 12
    3718:	30 97       	sbiw	r30, 0x00	; 0
    371a:	91 f0       	breq	.+36     	; 0x3740 <HSSD_vDisplayNumberAscending+0x10e>
    371c:	5c c2       	rjmp	.+1208   	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
    371e:	2c 96       	adiw	r28, 0x0c	; 12
    3720:	2e ad       	ldd	r18, Y+62	; 0x3e
    3722:	3f ad       	ldd	r19, Y+63	; 0x3f
    3724:	2c 97       	sbiw	r28, 0x0c	; 12
    3726:	22 30       	cpi	r18, 0x02	; 2
    3728:	31 05       	cpc	r19, r1
    372a:	09 f4       	brne	.+2      	; 0x372e <HSSD_vDisplayNumberAscending+0xfc>
    372c:	2f c1       	rjmp	.+606    	; 0x398c <HSSD_vDisplayNumberAscending+0x35a>
    372e:	2c 96       	adiw	r28, 0x0c	; 12
    3730:	8e ad       	ldd	r24, Y+62	; 0x3e
    3732:	9f ad       	ldd	r25, Y+63	; 0x3f
    3734:	2c 97       	sbiw	r28, 0x0c	; 12
    3736:	83 30       	cpi	r24, 0x03	; 3
    3738:	91 05       	cpc	r25, r1
    373a:	09 f4       	brne	.+2      	; 0x373e <HSSD_vDisplayNumberAscending+0x10c>
    373c:	ba c1       	rjmp	.+884    	; 0x3ab2 <HSSD_vDisplayNumberAscending+0x480>
    373e:	4b c2       	rjmp	.+1174   	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
		{
		case DIO_PORTA:
			for(u8 i =0 ; i <= 9; i++)
    3740:	1c ae       	std	Y+60, r1	; 0x3c
    3742:	8c c0       	rjmp	.+280    	; 0x385c <HSSD_vDisplayNumberAscending+0x22a>
			{
				HSSD_vDisplayNumber(DIO_PORTA, SSD_u8ArrOfNumbers[i]);
    3744:	8c ad       	ldd	r24, Y+60	; 0x3c
    3746:	28 2f       	mov	r18, r24
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	ce 01       	movw	r24, r28
    374c:	cd 96       	adiw	r24, 0x3d	; 61
    374e:	fc 01       	movw	r30, r24
    3750:	e2 0f       	add	r30, r18
    3752:	f3 1f       	adc	r31, r19
    3754:	90 81       	ld	r25, Z
    3756:	80 e0       	ldi	r24, 0x00	; 0
    3758:	69 2f       	mov	r22, r25
    375a:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    375e:	fe 01       	movw	r30, r28
    3760:	e8 5b       	subi	r30, 0xB8	; 184
    3762:	ff 4f       	sbci	r31, 0xFF	; 255
    3764:	80 81       	ld	r24, Z
    3766:	91 81       	ldd	r25, Z+1	; 0x01
    3768:	cc 01       	movw	r24, r24
    376a:	a0 e0       	ldi	r26, 0x00	; 0
    376c:	b0 e0       	ldi	r27, 0x00	; 0
    376e:	bc 01       	movw	r22, r24
    3770:	cd 01       	movw	r24, r26
    3772:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3776:	dc 01       	movw	r26, r24
    3778:	cb 01       	movw	r24, r22
    377a:	8d ab       	std	Y+53, r24	; 0x35
    377c:	9e ab       	std	Y+54, r25	; 0x36
    377e:	af ab       	std	Y+55, r26	; 0x37
    3780:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3782:	6d a9       	ldd	r22, Y+53	; 0x35
    3784:	7e a9       	ldd	r23, Y+54	; 0x36
    3786:	8f a9       	ldd	r24, Y+55	; 0x37
    3788:	98 ad       	ldd	r25, Y+56	; 0x38
    378a:	20 e0       	ldi	r18, 0x00	; 0
    378c:	30 e8       	ldi	r19, 0x80	; 128
    378e:	4b e3       	ldi	r20, 0x3B	; 59
    3790:	55 e4       	ldi	r21, 0x45	; 69
    3792:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	89 ab       	std	Y+49, r24	; 0x31
    379c:	9a ab       	std	Y+50, r25	; 0x32
    379e:	ab ab       	std	Y+51, r26	; 0x33
    37a0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    37a2:	69 a9       	ldd	r22, Y+49	; 0x31
    37a4:	7a a9       	ldd	r23, Y+50	; 0x32
    37a6:	8b a9       	ldd	r24, Y+51	; 0x33
    37a8:	9c a9       	ldd	r25, Y+52	; 0x34
    37aa:	20 e0       	ldi	r18, 0x00	; 0
    37ac:	30 e0       	ldi	r19, 0x00	; 0
    37ae:	40 e8       	ldi	r20, 0x80	; 128
    37b0:	5f e3       	ldi	r21, 0x3F	; 63
    37b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    37b6:	88 23       	and	r24, r24
    37b8:	2c f4       	brge	.+10     	; 0x37c4 <HSSD_vDisplayNumberAscending+0x192>
		__ticks = 1;
    37ba:	81 e0       	ldi	r24, 0x01	; 1
    37bc:	90 e0       	ldi	r25, 0x00	; 0
    37be:	98 ab       	std	Y+48, r25	; 0x30
    37c0:	8f a7       	std	Y+47, r24	; 0x2f
    37c2:	3f c0       	rjmp	.+126    	; 0x3842 <HSSD_vDisplayNumberAscending+0x210>
	else if (__tmp > 65535)
    37c4:	69 a9       	ldd	r22, Y+49	; 0x31
    37c6:	7a a9       	ldd	r23, Y+50	; 0x32
    37c8:	8b a9       	ldd	r24, Y+51	; 0x33
    37ca:	9c a9       	ldd	r25, Y+52	; 0x34
    37cc:	20 e0       	ldi	r18, 0x00	; 0
    37ce:	3f ef       	ldi	r19, 0xFF	; 255
    37d0:	4f e7       	ldi	r20, 0x7F	; 127
    37d2:	57 e4       	ldi	r21, 0x47	; 71
    37d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    37d8:	18 16       	cp	r1, r24
    37da:	4c f5       	brge	.+82     	; 0x382e <HSSD_vDisplayNumberAscending+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37dc:	6d a9       	ldd	r22, Y+53	; 0x35
    37de:	7e a9       	ldd	r23, Y+54	; 0x36
    37e0:	8f a9       	ldd	r24, Y+55	; 0x37
    37e2:	98 ad       	ldd	r25, Y+56	; 0x38
    37e4:	20 e0       	ldi	r18, 0x00	; 0
    37e6:	30 e0       	ldi	r19, 0x00	; 0
    37e8:	40 e2       	ldi	r20, 0x20	; 32
    37ea:	51 e4       	ldi	r21, 0x41	; 65
    37ec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37f0:	dc 01       	movw	r26, r24
    37f2:	cb 01       	movw	r24, r22
    37f4:	bc 01       	movw	r22, r24
    37f6:	cd 01       	movw	r24, r26
    37f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37fc:	dc 01       	movw	r26, r24
    37fe:	cb 01       	movw	r24, r22
    3800:	98 ab       	std	Y+48, r25	; 0x30
    3802:	8f a7       	std	Y+47, r24	; 0x2f
    3804:	0f c0       	rjmp	.+30     	; 0x3824 <HSSD_vDisplayNumberAscending+0x1f2>
    3806:	8c e2       	ldi	r24, 0x2C	; 44
    3808:	91 e0       	ldi	r25, 0x01	; 1
    380a:	9e a7       	std	Y+46, r25	; 0x2e
    380c:	8d a7       	std	Y+45, r24	; 0x2d
    380e:	8d a5       	ldd	r24, Y+45	; 0x2d
    3810:	9e a5       	ldd	r25, Y+46	; 0x2e
    3812:	01 97       	sbiw	r24, 0x01	; 1
    3814:	f1 f7       	brne	.-4      	; 0x3812 <HSSD_vDisplayNumberAscending+0x1e0>
    3816:	9e a7       	std	Y+46, r25	; 0x2e
    3818:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    381a:	8f a5       	ldd	r24, Y+47	; 0x2f
    381c:	98 a9       	ldd	r25, Y+48	; 0x30
    381e:	01 97       	sbiw	r24, 0x01	; 1
    3820:	98 ab       	std	Y+48, r25	; 0x30
    3822:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3824:	8f a5       	ldd	r24, Y+47	; 0x2f
    3826:	98 a9       	ldd	r25, Y+48	; 0x30
    3828:	00 97       	sbiw	r24, 0x00	; 0
    382a:	69 f7       	brne	.-38     	; 0x3806 <HSSD_vDisplayNumberAscending+0x1d4>
    382c:	14 c0       	rjmp	.+40     	; 0x3856 <HSSD_vDisplayNumberAscending+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    382e:	69 a9       	ldd	r22, Y+49	; 0x31
    3830:	7a a9       	ldd	r23, Y+50	; 0x32
    3832:	8b a9       	ldd	r24, Y+51	; 0x33
    3834:	9c a9       	ldd	r25, Y+52	; 0x34
    3836:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    383a:	dc 01       	movw	r26, r24
    383c:	cb 01       	movw	r24, r22
    383e:	98 ab       	std	Y+48, r25	; 0x30
    3840:	8f a7       	std	Y+47, r24	; 0x2f
    3842:	8f a5       	ldd	r24, Y+47	; 0x2f
    3844:	98 a9       	ldd	r25, Y+48	; 0x30
    3846:	9c a7       	std	Y+44, r25	; 0x2c
    3848:	8b a7       	std	Y+43, r24	; 0x2b
    384a:	8b a5       	ldd	r24, Y+43	; 0x2b
    384c:	9c a5       	ldd	r25, Y+44	; 0x2c
    384e:	01 97       	sbiw	r24, 0x01	; 1
    3850:	f1 f7       	brne	.-4      	; 0x384e <HSSD_vDisplayNumberAscending+0x21c>
    3852:	9c a7       	std	Y+44, r25	; 0x2c
    3854:	8b a7       	std	Y+43, r24	; 0x2b
	if(A_PortID <= DIO_PORTD)
	{
		switch(A_PortID)
		{
		case DIO_PORTA:
			for(u8 i =0 ; i <= 9; i++)
    3856:	8c ad       	ldd	r24, Y+60	; 0x3c
    3858:	8f 5f       	subi	r24, 0xFF	; 255
    385a:	8c af       	std	Y+60, r24	; 0x3c
    385c:	8c ad       	ldd	r24, Y+60	; 0x3c
    385e:	8a 30       	cpi	r24, 0x0A	; 10
    3860:	08 f4       	brcc	.+2      	; 0x3864 <HSSD_vDisplayNumberAscending+0x232>
    3862:	70 cf       	rjmp	.-288    	; 0x3744 <HSSD_vDisplayNumberAscending+0x112>
    3864:	b8 c1       	rjmp	.+880    	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>

			}
			break;

		case DIO_PORTB:
			for(u8 i =0 ; i <= 9; i++)
    3866:	1b ae       	std	Y+59, r1	; 0x3b
    3868:	8c c0       	rjmp	.+280    	; 0x3982 <HSSD_vDisplayNumberAscending+0x350>
			{
				HSSD_vDisplayNumber(DIO_PORTB, SSD_u8ArrOfNumbers[i]);
    386a:	8b ad       	ldd	r24, Y+59	; 0x3b
    386c:	28 2f       	mov	r18, r24
    386e:	30 e0       	ldi	r19, 0x00	; 0
    3870:	ce 01       	movw	r24, r28
    3872:	cd 96       	adiw	r24, 0x3d	; 61
    3874:	fc 01       	movw	r30, r24
    3876:	e2 0f       	add	r30, r18
    3878:	f3 1f       	adc	r31, r19
    387a:	90 81       	ld	r25, Z
    387c:	81 e0       	ldi	r24, 0x01	; 1
    387e:	69 2f       	mov	r22, r25
    3880:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3884:	fe 01       	movw	r30, r28
    3886:	e8 5b       	subi	r30, 0xB8	; 184
    3888:	ff 4f       	sbci	r31, 0xFF	; 255
    388a:	80 81       	ld	r24, Z
    388c:	91 81       	ldd	r25, Z+1	; 0x01
    388e:	cc 01       	movw	r24, r24
    3890:	a0 e0       	ldi	r26, 0x00	; 0
    3892:	b0 e0       	ldi	r27, 0x00	; 0
    3894:	bc 01       	movw	r22, r24
    3896:	cd 01       	movw	r24, r26
    3898:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    389c:	dc 01       	movw	r26, r24
    389e:	cb 01       	movw	r24, r22
    38a0:	8f a3       	std	Y+39, r24	; 0x27
    38a2:	98 a7       	std	Y+40, r25	; 0x28
    38a4:	a9 a7       	std	Y+41, r26	; 0x29
    38a6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38a8:	6f a1       	ldd	r22, Y+39	; 0x27
    38aa:	78 a5       	ldd	r23, Y+40	; 0x28
    38ac:	89 a5       	ldd	r24, Y+41	; 0x29
    38ae:	9a a5       	ldd	r25, Y+42	; 0x2a
    38b0:	20 e0       	ldi	r18, 0x00	; 0
    38b2:	30 e8       	ldi	r19, 0x80	; 128
    38b4:	4b e3       	ldi	r20, 0x3B	; 59
    38b6:	55 e4       	ldi	r21, 0x45	; 69
    38b8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    38bc:	dc 01       	movw	r26, r24
    38be:	cb 01       	movw	r24, r22
    38c0:	8b a3       	std	Y+35, r24	; 0x23
    38c2:	9c a3       	std	Y+36, r25	; 0x24
    38c4:	ad a3       	std	Y+37, r26	; 0x25
    38c6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    38c8:	6b a1       	ldd	r22, Y+35	; 0x23
    38ca:	7c a1       	ldd	r23, Y+36	; 0x24
    38cc:	8d a1       	ldd	r24, Y+37	; 0x25
    38ce:	9e a1       	ldd	r25, Y+38	; 0x26
    38d0:	20 e0       	ldi	r18, 0x00	; 0
    38d2:	30 e0       	ldi	r19, 0x00	; 0
    38d4:	40 e8       	ldi	r20, 0x80	; 128
    38d6:	5f e3       	ldi	r21, 0x3F	; 63
    38d8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    38dc:	88 23       	and	r24, r24
    38de:	2c f4       	brge	.+10     	; 0x38ea <HSSD_vDisplayNumberAscending+0x2b8>
		__ticks = 1;
    38e0:	81 e0       	ldi	r24, 0x01	; 1
    38e2:	90 e0       	ldi	r25, 0x00	; 0
    38e4:	9a a3       	std	Y+34, r25	; 0x22
    38e6:	89 a3       	std	Y+33, r24	; 0x21
    38e8:	3f c0       	rjmp	.+126    	; 0x3968 <HSSD_vDisplayNumberAscending+0x336>
	else if (__tmp > 65535)
    38ea:	6b a1       	ldd	r22, Y+35	; 0x23
    38ec:	7c a1       	ldd	r23, Y+36	; 0x24
    38ee:	8d a1       	ldd	r24, Y+37	; 0x25
    38f0:	9e a1       	ldd	r25, Y+38	; 0x26
    38f2:	20 e0       	ldi	r18, 0x00	; 0
    38f4:	3f ef       	ldi	r19, 0xFF	; 255
    38f6:	4f e7       	ldi	r20, 0x7F	; 127
    38f8:	57 e4       	ldi	r21, 0x47	; 71
    38fa:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    38fe:	18 16       	cp	r1, r24
    3900:	4c f5       	brge	.+82     	; 0x3954 <HSSD_vDisplayNumberAscending+0x322>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3902:	6f a1       	ldd	r22, Y+39	; 0x27
    3904:	78 a5       	ldd	r23, Y+40	; 0x28
    3906:	89 a5       	ldd	r24, Y+41	; 0x29
    3908:	9a a5       	ldd	r25, Y+42	; 0x2a
    390a:	20 e0       	ldi	r18, 0x00	; 0
    390c:	30 e0       	ldi	r19, 0x00	; 0
    390e:	40 e2       	ldi	r20, 0x20	; 32
    3910:	51 e4       	ldi	r21, 0x41	; 65
    3912:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3916:	dc 01       	movw	r26, r24
    3918:	cb 01       	movw	r24, r22
    391a:	bc 01       	movw	r22, r24
    391c:	cd 01       	movw	r24, r26
    391e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3922:	dc 01       	movw	r26, r24
    3924:	cb 01       	movw	r24, r22
    3926:	9a a3       	std	Y+34, r25	; 0x22
    3928:	89 a3       	std	Y+33, r24	; 0x21
    392a:	0f c0       	rjmp	.+30     	; 0x394a <HSSD_vDisplayNumberAscending+0x318>
    392c:	8c e2       	ldi	r24, 0x2C	; 44
    392e:	91 e0       	ldi	r25, 0x01	; 1
    3930:	98 a3       	std	Y+32, r25	; 0x20
    3932:	8f 8f       	std	Y+31, r24	; 0x1f
    3934:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3936:	98 a1       	ldd	r25, Y+32	; 0x20
    3938:	01 97       	sbiw	r24, 0x01	; 1
    393a:	f1 f7       	brne	.-4      	; 0x3938 <HSSD_vDisplayNumberAscending+0x306>
    393c:	98 a3       	std	Y+32, r25	; 0x20
    393e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3940:	89 a1       	ldd	r24, Y+33	; 0x21
    3942:	9a a1       	ldd	r25, Y+34	; 0x22
    3944:	01 97       	sbiw	r24, 0x01	; 1
    3946:	9a a3       	std	Y+34, r25	; 0x22
    3948:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    394a:	89 a1       	ldd	r24, Y+33	; 0x21
    394c:	9a a1       	ldd	r25, Y+34	; 0x22
    394e:	00 97       	sbiw	r24, 0x00	; 0
    3950:	69 f7       	brne	.-38     	; 0x392c <HSSD_vDisplayNumberAscending+0x2fa>
    3952:	14 c0       	rjmp	.+40     	; 0x397c <HSSD_vDisplayNumberAscending+0x34a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3954:	6b a1       	ldd	r22, Y+35	; 0x23
    3956:	7c a1       	ldd	r23, Y+36	; 0x24
    3958:	8d a1       	ldd	r24, Y+37	; 0x25
    395a:	9e a1       	ldd	r25, Y+38	; 0x26
    395c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	9a a3       	std	Y+34, r25	; 0x22
    3966:	89 a3       	std	Y+33, r24	; 0x21
    3968:	89 a1       	ldd	r24, Y+33	; 0x21
    396a:	9a a1       	ldd	r25, Y+34	; 0x22
    396c:	9e 8f       	std	Y+30, r25	; 0x1e
    396e:	8d 8f       	std	Y+29, r24	; 0x1d
    3970:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3972:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3974:	01 97       	sbiw	r24, 0x01	; 1
    3976:	f1 f7       	brne	.-4      	; 0x3974 <HSSD_vDisplayNumberAscending+0x342>
    3978:	9e 8f       	std	Y+30, r25	; 0x1e
    397a:	8d 8f       	std	Y+29, r24	; 0x1d

			}
			break;

		case DIO_PORTB:
			for(u8 i =0 ; i <= 9; i++)
    397c:	8b ad       	ldd	r24, Y+59	; 0x3b
    397e:	8f 5f       	subi	r24, 0xFF	; 255
    3980:	8b af       	std	Y+59, r24	; 0x3b
    3982:	8b ad       	ldd	r24, Y+59	; 0x3b
    3984:	8a 30       	cpi	r24, 0x0A	; 10
    3986:	08 f4       	brcc	.+2      	; 0x398a <HSSD_vDisplayNumberAscending+0x358>
    3988:	70 cf       	rjmp	.-288    	; 0x386a <HSSD_vDisplayNumberAscending+0x238>
    398a:	25 c1       	rjmp	.+586    	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
				_delay_ms(A_u16TimetoWait);
			};
			break;

		case DIO_PORTC:
			for(u8 i =0 ; i <= 9; i++)
    398c:	1a ae       	std	Y+58, r1	; 0x3a
    398e:	8c c0       	rjmp	.+280    	; 0x3aa8 <HSSD_vDisplayNumberAscending+0x476>
			{
				HSSD_vDisplayNumber(DIO_PORTC, SSD_u8ArrOfNumbers[i]);
    3990:	8a ad       	ldd	r24, Y+58	; 0x3a
    3992:	28 2f       	mov	r18, r24
    3994:	30 e0       	ldi	r19, 0x00	; 0
    3996:	ce 01       	movw	r24, r28
    3998:	cd 96       	adiw	r24, 0x3d	; 61
    399a:	fc 01       	movw	r30, r24
    399c:	e2 0f       	add	r30, r18
    399e:	f3 1f       	adc	r31, r19
    39a0:	90 81       	ld	r25, Z
    39a2:	82 e0       	ldi	r24, 0x02	; 2
    39a4:	69 2f       	mov	r22, r25
    39a6:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    39aa:	fe 01       	movw	r30, r28
    39ac:	e8 5b       	subi	r30, 0xB8	; 184
    39ae:	ff 4f       	sbci	r31, 0xFF	; 255
    39b0:	80 81       	ld	r24, Z
    39b2:	91 81       	ldd	r25, Z+1	; 0x01
    39b4:	cc 01       	movw	r24, r24
    39b6:	a0 e0       	ldi	r26, 0x00	; 0
    39b8:	b0 e0       	ldi	r27, 0x00	; 0
    39ba:	bc 01       	movw	r22, r24
    39bc:	cd 01       	movw	r24, r26
    39be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    39c2:	dc 01       	movw	r26, r24
    39c4:	cb 01       	movw	r24, r22
    39c6:	89 8f       	std	Y+25, r24	; 0x19
    39c8:	9a 8f       	std	Y+26, r25	; 0x1a
    39ca:	ab 8f       	std	Y+27, r26	; 0x1b
    39cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39ce:	69 8d       	ldd	r22, Y+25	; 0x19
    39d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    39d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    39d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    39d6:	20 e0       	ldi	r18, 0x00	; 0
    39d8:	30 e8       	ldi	r19, 0x80	; 128
    39da:	4b e3       	ldi	r20, 0x3B	; 59
    39dc:	55 e4       	ldi	r21, 0x45	; 69
    39de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    39e2:	dc 01       	movw	r26, r24
    39e4:	cb 01       	movw	r24, r22
    39e6:	8d 8b       	std	Y+21, r24	; 0x15
    39e8:	9e 8b       	std	Y+22, r25	; 0x16
    39ea:	af 8b       	std	Y+23, r26	; 0x17
    39ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    39ee:	6d 89       	ldd	r22, Y+21	; 0x15
    39f0:	7e 89       	ldd	r23, Y+22	; 0x16
    39f2:	8f 89       	ldd	r24, Y+23	; 0x17
    39f4:	98 8d       	ldd	r25, Y+24	; 0x18
    39f6:	20 e0       	ldi	r18, 0x00	; 0
    39f8:	30 e0       	ldi	r19, 0x00	; 0
    39fa:	40 e8       	ldi	r20, 0x80	; 128
    39fc:	5f e3       	ldi	r21, 0x3F	; 63
    39fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3a02:	88 23       	and	r24, r24
    3a04:	2c f4       	brge	.+10     	; 0x3a10 <HSSD_vDisplayNumberAscending+0x3de>
		__ticks = 1;
    3a06:	81 e0       	ldi	r24, 0x01	; 1
    3a08:	90 e0       	ldi	r25, 0x00	; 0
    3a0a:	9c 8b       	std	Y+20, r25	; 0x14
    3a0c:	8b 8b       	std	Y+19, r24	; 0x13
    3a0e:	3f c0       	rjmp	.+126    	; 0x3a8e <HSSD_vDisplayNumberAscending+0x45c>
	else if (__tmp > 65535)
    3a10:	6d 89       	ldd	r22, Y+21	; 0x15
    3a12:	7e 89       	ldd	r23, Y+22	; 0x16
    3a14:	8f 89       	ldd	r24, Y+23	; 0x17
    3a16:	98 8d       	ldd	r25, Y+24	; 0x18
    3a18:	20 e0       	ldi	r18, 0x00	; 0
    3a1a:	3f ef       	ldi	r19, 0xFF	; 255
    3a1c:	4f e7       	ldi	r20, 0x7F	; 127
    3a1e:	57 e4       	ldi	r21, 0x47	; 71
    3a20:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3a24:	18 16       	cp	r1, r24
    3a26:	4c f5       	brge	.+82     	; 0x3a7a <HSSD_vDisplayNumberAscending+0x448>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a28:	69 8d       	ldd	r22, Y+25	; 0x19
    3a2a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a2e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a30:	20 e0       	ldi	r18, 0x00	; 0
    3a32:	30 e0       	ldi	r19, 0x00	; 0
    3a34:	40 e2       	ldi	r20, 0x20	; 32
    3a36:	51 e4       	ldi	r21, 0x41	; 65
    3a38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3a3c:	dc 01       	movw	r26, r24
    3a3e:	cb 01       	movw	r24, r22
    3a40:	bc 01       	movw	r22, r24
    3a42:	cd 01       	movw	r24, r26
    3a44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a48:	dc 01       	movw	r26, r24
    3a4a:	cb 01       	movw	r24, r22
    3a4c:	9c 8b       	std	Y+20, r25	; 0x14
    3a4e:	8b 8b       	std	Y+19, r24	; 0x13
    3a50:	0f c0       	rjmp	.+30     	; 0x3a70 <HSSD_vDisplayNumberAscending+0x43e>
    3a52:	8c e2       	ldi	r24, 0x2C	; 44
    3a54:	91 e0       	ldi	r25, 0x01	; 1
    3a56:	9a 8b       	std	Y+18, r25	; 0x12
    3a58:	89 8b       	std	Y+17, r24	; 0x11
    3a5a:	89 89       	ldd	r24, Y+17	; 0x11
    3a5c:	9a 89       	ldd	r25, Y+18	; 0x12
    3a5e:	01 97       	sbiw	r24, 0x01	; 1
    3a60:	f1 f7       	brne	.-4      	; 0x3a5e <HSSD_vDisplayNumberAscending+0x42c>
    3a62:	9a 8b       	std	Y+18, r25	; 0x12
    3a64:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a66:	8b 89       	ldd	r24, Y+19	; 0x13
    3a68:	9c 89       	ldd	r25, Y+20	; 0x14
    3a6a:	01 97       	sbiw	r24, 0x01	; 1
    3a6c:	9c 8b       	std	Y+20, r25	; 0x14
    3a6e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a70:	8b 89       	ldd	r24, Y+19	; 0x13
    3a72:	9c 89       	ldd	r25, Y+20	; 0x14
    3a74:	00 97       	sbiw	r24, 0x00	; 0
    3a76:	69 f7       	brne	.-38     	; 0x3a52 <HSSD_vDisplayNumberAscending+0x420>
    3a78:	14 c0       	rjmp	.+40     	; 0x3aa2 <HSSD_vDisplayNumberAscending+0x470>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a7a:	6d 89       	ldd	r22, Y+21	; 0x15
    3a7c:	7e 89       	ldd	r23, Y+22	; 0x16
    3a7e:	8f 89       	ldd	r24, Y+23	; 0x17
    3a80:	98 8d       	ldd	r25, Y+24	; 0x18
    3a82:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a86:	dc 01       	movw	r26, r24
    3a88:	cb 01       	movw	r24, r22
    3a8a:	9c 8b       	std	Y+20, r25	; 0x14
    3a8c:	8b 8b       	std	Y+19, r24	; 0x13
    3a8e:	8b 89       	ldd	r24, Y+19	; 0x13
    3a90:	9c 89       	ldd	r25, Y+20	; 0x14
    3a92:	98 8b       	std	Y+16, r25	; 0x10
    3a94:	8f 87       	std	Y+15, r24	; 0x0f
    3a96:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a98:	98 89       	ldd	r25, Y+16	; 0x10
    3a9a:	01 97       	sbiw	r24, 0x01	; 1
    3a9c:	f1 f7       	brne	.-4      	; 0x3a9a <HSSD_vDisplayNumberAscending+0x468>
    3a9e:	98 8b       	std	Y+16, r25	; 0x10
    3aa0:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(A_u16TimetoWait);
			};
			break;

		case DIO_PORTC:
			for(u8 i =0 ; i <= 9; i++)
    3aa2:	8a ad       	ldd	r24, Y+58	; 0x3a
    3aa4:	8f 5f       	subi	r24, 0xFF	; 255
    3aa6:	8a af       	std	Y+58, r24	; 0x3a
    3aa8:	8a ad       	ldd	r24, Y+58	; 0x3a
    3aaa:	8a 30       	cpi	r24, 0x0A	; 10
    3aac:	08 f4       	brcc	.+2      	; 0x3ab0 <HSSD_vDisplayNumberAscending+0x47e>
    3aae:	70 cf       	rjmp	.-288    	; 0x3990 <HSSD_vDisplayNumberAscending+0x35e>
    3ab0:	92 c0       	rjmp	.+292    	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(u8 i =0 ; i <= 9; i++)
    3ab2:	19 ae       	std	Y+57, r1	; 0x39
    3ab4:	8c c0       	rjmp	.+280    	; 0x3bce <HSSD_vDisplayNumberAscending+0x59c>
			{
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
    3ab6:	89 ad       	ldd	r24, Y+57	; 0x39
    3ab8:	28 2f       	mov	r18, r24
    3aba:	30 e0       	ldi	r19, 0x00	; 0
    3abc:	ce 01       	movw	r24, r28
    3abe:	cd 96       	adiw	r24, 0x3d	; 61
    3ac0:	fc 01       	movw	r30, r24
    3ac2:	e2 0f       	add	r30, r18
    3ac4:	f3 1f       	adc	r31, r19
    3ac6:	90 81       	ld	r25, Z
    3ac8:	83 e0       	ldi	r24, 0x03	; 3
    3aca:	69 2f       	mov	r22, r25
    3acc:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3ad0:	fe 01       	movw	r30, r28
    3ad2:	e8 5b       	subi	r30, 0xB8	; 184
    3ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad6:	80 81       	ld	r24, Z
    3ad8:	91 81       	ldd	r25, Z+1	; 0x01
    3ada:	cc 01       	movw	r24, r24
    3adc:	a0 e0       	ldi	r26, 0x00	; 0
    3ade:	b0 e0       	ldi	r27, 0x00	; 0
    3ae0:	bc 01       	movw	r22, r24
    3ae2:	cd 01       	movw	r24, r26
    3ae4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3ae8:	dc 01       	movw	r26, r24
    3aea:	cb 01       	movw	r24, r22
    3aec:	8b 87       	std	Y+11, r24	; 0x0b
    3aee:	9c 87       	std	Y+12, r25	; 0x0c
    3af0:	ad 87       	std	Y+13, r26	; 0x0d
    3af2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3af4:	6b 85       	ldd	r22, Y+11	; 0x0b
    3af6:	7c 85       	ldd	r23, Y+12	; 0x0c
    3af8:	8d 85       	ldd	r24, Y+13	; 0x0d
    3afa:	9e 85       	ldd	r25, Y+14	; 0x0e
    3afc:	20 e0       	ldi	r18, 0x00	; 0
    3afe:	30 e8       	ldi	r19, 0x80	; 128
    3b00:	4b e3       	ldi	r20, 0x3B	; 59
    3b02:	55 e4       	ldi	r21, 0x45	; 69
    3b04:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b08:	dc 01       	movw	r26, r24
    3b0a:	cb 01       	movw	r24, r22
    3b0c:	8f 83       	std	Y+7, r24	; 0x07
    3b0e:	98 87       	std	Y+8, r25	; 0x08
    3b10:	a9 87       	std	Y+9, r26	; 0x09
    3b12:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b14:	6f 81       	ldd	r22, Y+7	; 0x07
    3b16:	78 85       	ldd	r23, Y+8	; 0x08
    3b18:	89 85       	ldd	r24, Y+9	; 0x09
    3b1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b1c:	20 e0       	ldi	r18, 0x00	; 0
    3b1e:	30 e0       	ldi	r19, 0x00	; 0
    3b20:	40 e8       	ldi	r20, 0x80	; 128
    3b22:	5f e3       	ldi	r21, 0x3F	; 63
    3b24:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3b28:	88 23       	and	r24, r24
    3b2a:	2c f4       	brge	.+10     	; 0x3b36 <HSSD_vDisplayNumberAscending+0x504>
		__ticks = 1;
    3b2c:	81 e0       	ldi	r24, 0x01	; 1
    3b2e:	90 e0       	ldi	r25, 0x00	; 0
    3b30:	9e 83       	std	Y+6, r25	; 0x06
    3b32:	8d 83       	std	Y+5, r24	; 0x05
    3b34:	3f c0       	rjmp	.+126    	; 0x3bb4 <HSSD_vDisplayNumberAscending+0x582>
	else if (__tmp > 65535)
    3b36:	6f 81       	ldd	r22, Y+7	; 0x07
    3b38:	78 85       	ldd	r23, Y+8	; 0x08
    3b3a:	89 85       	ldd	r24, Y+9	; 0x09
    3b3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b3e:	20 e0       	ldi	r18, 0x00	; 0
    3b40:	3f ef       	ldi	r19, 0xFF	; 255
    3b42:	4f e7       	ldi	r20, 0x7F	; 127
    3b44:	57 e4       	ldi	r21, 0x47	; 71
    3b46:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3b4a:	18 16       	cp	r1, r24
    3b4c:	4c f5       	brge	.+82     	; 0x3ba0 <HSSD_vDisplayNumberAscending+0x56e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b4e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b50:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b52:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b54:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b56:	20 e0       	ldi	r18, 0x00	; 0
    3b58:	30 e0       	ldi	r19, 0x00	; 0
    3b5a:	40 e2       	ldi	r20, 0x20	; 32
    3b5c:	51 e4       	ldi	r21, 0x41	; 65
    3b5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b62:	dc 01       	movw	r26, r24
    3b64:	cb 01       	movw	r24, r22
    3b66:	bc 01       	movw	r22, r24
    3b68:	cd 01       	movw	r24, r26
    3b6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	cb 01       	movw	r24, r22
    3b72:	9e 83       	std	Y+6, r25	; 0x06
    3b74:	8d 83       	std	Y+5, r24	; 0x05
    3b76:	0f c0       	rjmp	.+30     	; 0x3b96 <HSSD_vDisplayNumberAscending+0x564>
    3b78:	8c e2       	ldi	r24, 0x2C	; 44
    3b7a:	91 e0       	ldi	r25, 0x01	; 1
    3b7c:	9c 83       	std	Y+4, r25	; 0x04
    3b7e:	8b 83       	std	Y+3, r24	; 0x03
    3b80:	8b 81       	ldd	r24, Y+3	; 0x03
    3b82:	9c 81       	ldd	r25, Y+4	; 0x04
    3b84:	01 97       	sbiw	r24, 0x01	; 1
    3b86:	f1 f7       	brne	.-4      	; 0x3b84 <HSSD_vDisplayNumberAscending+0x552>
    3b88:	9c 83       	std	Y+4, r25	; 0x04
    3b8a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b8c:	8d 81       	ldd	r24, Y+5	; 0x05
    3b8e:	9e 81       	ldd	r25, Y+6	; 0x06
    3b90:	01 97       	sbiw	r24, 0x01	; 1
    3b92:	9e 83       	std	Y+6, r25	; 0x06
    3b94:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b96:	8d 81       	ldd	r24, Y+5	; 0x05
    3b98:	9e 81       	ldd	r25, Y+6	; 0x06
    3b9a:	00 97       	sbiw	r24, 0x00	; 0
    3b9c:	69 f7       	brne	.-38     	; 0x3b78 <HSSD_vDisplayNumberAscending+0x546>
    3b9e:	14 c0       	rjmp	.+40     	; 0x3bc8 <HSSD_vDisplayNumberAscending+0x596>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ba0:	6f 81       	ldd	r22, Y+7	; 0x07
    3ba2:	78 85       	ldd	r23, Y+8	; 0x08
    3ba4:	89 85       	ldd	r24, Y+9	; 0x09
    3ba6:	9a 85       	ldd	r25, Y+10	; 0x0a
    3ba8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3bac:	dc 01       	movw	r26, r24
    3bae:	cb 01       	movw	r24, r22
    3bb0:	9e 83       	std	Y+6, r25	; 0x06
    3bb2:	8d 83       	std	Y+5, r24	; 0x05
    3bb4:	8d 81       	ldd	r24, Y+5	; 0x05
    3bb6:	9e 81       	ldd	r25, Y+6	; 0x06
    3bb8:	9a 83       	std	Y+2, r25	; 0x02
    3bba:	89 83       	std	Y+1, r24	; 0x01
    3bbc:	89 81       	ldd	r24, Y+1	; 0x01
    3bbe:	9a 81       	ldd	r25, Y+2	; 0x02
    3bc0:	01 97       	sbiw	r24, 0x01	; 1
    3bc2:	f1 f7       	brne	.-4      	; 0x3bc0 <HSSD_vDisplayNumberAscending+0x58e>
    3bc4:	9a 83       	std	Y+2, r25	; 0x02
    3bc6:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(u8 i =0 ; i <= 9; i++)
    3bc8:	89 ad       	ldd	r24, Y+57	; 0x39
    3bca:	8f 5f       	subi	r24, 0xFF	; 255
    3bcc:	89 af       	std	Y+57, r24	; 0x39
    3bce:	89 ad       	ldd	r24, Y+57	; 0x39
    3bd0:	8a 30       	cpi	r24, 0x0A	; 10
    3bd2:	08 f4       	brcc	.+2      	; 0x3bd6 <HSSD_vDisplayNumberAscending+0x5a4>
    3bd4:	70 cf       	rjmp	.-288    	; 0x3ab6 <HSSD_vDisplayNumberAscending+0x484>
				_delay_ms(A_u16TimetoWait);
			}
			break;
		}
	}
}
    3bd6:	c0 5b       	subi	r28, 0xB0	; 176
    3bd8:	df 4f       	sbci	r29, 0xFF	; 255
    3bda:	0f b6       	in	r0, 0x3f	; 63
    3bdc:	f8 94       	cli
    3bde:	de bf       	out	0x3e, r29	; 62
    3be0:	0f be       	out	0x3f, r0	; 63
    3be2:	cd bf       	out	0x3d, r28	; 61
    3be4:	cf 91       	pop	r28
    3be6:	df 91       	pop	r29
    3be8:	08 95       	ret

00003bea <HSSD_vCountDown>:


void HSSD_vCountDown(DIO_PORT_e A_PortID ,s8 A_u8Time , u16 A_u16TimetoWait)
{
    3bea:	df 93       	push	r29
    3bec:	cf 93       	push	r28
    3bee:	cd b7       	in	r28, 0x3d	; 61
    3bf0:	de b7       	in	r29, 0x3e	; 62
    3bf2:	c1 55       	subi	r28, 0x51	; 81
    3bf4:	d0 40       	sbci	r29, 0x00	; 0
    3bf6:	0f b6       	in	r0, 0x3f	; 63
    3bf8:	f8 94       	cli
    3bfa:	de bf       	out	0x3e, r29	; 62
    3bfc:	0f be       	out	0x3f, r0	; 63
    3bfe:	cd bf       	out	0x3d, r28	; 61
    3c00:	fe 01       	movw	r30, r28
    3c02:	e9 5b       	subi	r30, 0xB9	; 185
    3c04:	ff 4f       	sbci	r31, 0xFF	; 255
    3c06:	80 83       	st	Z, r24
    3c08:	fe 01       	movw	r30, r28
    3c0a:	e8 5b       	subi	r30, 0xB8	; 184
    3c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0e:	60 83       	st	Z, r22
    3c10:	fe 01       	movw	r30, r28
    3c12:	e7 5b       	subi	r30, 0xB7	; 183
    3c14:	ff 4f       	sbci	r31, 0xFF	; 255
    3c16:	51 83       	std	Z+1, r21	; 0x01
    3c18:	40 83       	st	Z, r20
	u8 SSD_u8ArrOfNumbers [10]= {ZERO,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,EIGHT,NINE};
    3c1a:	9e 01       	movw	r18, r28
    3c1c:	23 5c       	subi	r18, 0xC3	; 195
    3c1e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c20:	2f 96       	adiw	r28, 0x0f	; 15
    3c22:	3f af       	std	Y+63, r19	; 0x3f
    3c24:	2e af       	std	Y+62, r18	; 0x3e
    3c26:	2f 97       	sbiw	r28, 0x0f	; 15
    3c28:	84 eb       	ldi	r24, 0xB4	; 180
    3c2a:	92 e0       	ldi	r25, 0x02	; 2
    3c2c:	61 96       	adiw	r28, 0x11	; 17
    3c2e:	9f af       	std	Y+63, r25	; 0x3f
    3c30:	8e af       	std	Y+62, r24	; 0x3e
    3c32:	61 97       	sbiw	r28, 0x11	; 17
    3c34:	9a e0       	ldi	r25, 0x0A	; 10
    3c36:	62 96       	adiw	r28, 0x12	; 18
    3c38:	9f af       	std	Y+63, r25	; 0x3f
    3c3a:	62 97       	sbiw	r28, 0x12	; 18
    3c3c:	61 96       	adiw	r28, 0x11	; 17
    3c3e:	ee ad       	ldd	r30, Y+62	; 0x3e
    3c40:	ff ad       	ldd	r31, Y+63	; 0x3f
    3c42:	61 97       	sbiw	r28, 0x11	; 17
    3c44:	00 80       	ld	r0, Z
    3c46:	61 96       	adiw	r28, 0x11	; 17
    3c48:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c4a:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c4c:	61 97       	sbiw	r28, 0x11	; 17
    3c4e:	2f 5f       	subi	r18, 0xFF	; 255
    3c50:	3f 4f       	sbci	r19, 0xFF	; 255
    3c52:	61 96       	adiw	r28, 0x11	; 17
    3c54:	3f af       	std	Y+63, r19	; 0x3f
    3c56:	2e af       	std	Y+62, r18	; 0x3e
    3c58:	61 97       	sbiw	r28, 0x11	; 17
    3c5a:	2f 96       	adiw	r28, 0x0f	; 15
    3c5c:	ee ad       	ldd	r30, Y+62	; 0x3e
    3c5e:	ff ad       	ldd	r31, Y+63	; 0x3f
    3c60:	2f 97       	sbiw	r28, 0x0f	; 15
    3c62:	00 82       	st	Z, r0
    3c64:	2f 96       	adiw	r28, 0x0f	; 15
    3c66:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c68:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c6a:	2f 97       	sbiw	r28, 0x0f	; 15
    3c6c:	2f 5f       	subi	r18, 0xFF	; 255
    3c6e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c70:	2f 96       	adiw	r28, 0x0f	; 15
    3c72:	3f af       	std	Y+63, r19	; 0x3f
    3c74:	2e af       	std	Y+62, r18	; 0x3e
    3c76:	2f 97       	sbiw	r28, 0x0f	; 15
    3c78:	62 96       	adiw	r28, 0x12	; 18
    3c7a:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c7c:	62 97       	sbiw	r28, 0x12	; 18
    3c7e:	31 50       	subi	r19, 0x01	; 1
    3c80:	62 96       	adiw	r28, 0x12	; 18
    3c82:	3f af       	std	Y+63, r19	; 0x3f
    3c84:	62 97       	sbiw	r28, 0x12	; 18
    3c86:	62 96       	adiw	r28, 0x12	; 18
    3c88:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c8a:	62 97       	sbiw	r28, 0x12	; 18
    3c8c:	88 23       	and	r24, r24
    3c8e:	b1 f6       	brne	.-84     	; 0x3c3c <HSSD_vCountDown+0x52>

	if(A_PortID <= DIO_PORTD)
    3c90:	fe 01       	movw	r30, r28
    3c92:	e9 5b       	subi	r30, 0xB9	; 185
    3c94:	ff 4f       	sbci	r31, 0xFF	; 255
    3c96:	80 81       	ld	r24, Z
    3c98:	84 30       	cpi	r24, 0x04	; 4
    3c9a:	08 f0       	brcs	.+2      	; 0x3c9e <HSSD_vCountDown+0xb4>
    3c9c:	9b c2       	rjmp	.+1334   	; 0x41d4 <HSSD_vCountDown+0x5ea>
	{
		switch(A_PortID)
    3c9e:	fe 01       	movw	r30, r28
    3ca0:	e9 5b       	subi	r30, 0xB9	; 185
    3ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca4:	80 81       	ld	r24, Z
    3ca6:	e8 2f       	mov	r30, r24
    3ca8:	f0 e0       	ldi	r31, 0x00	; 0
    3caa:	2d 96       	adiw	r28, 0x0d	; 13
    3cac:	ff af       	std	Y+63, r31	; 0x3f
    3cae:	ee af       	std	Y+62, r30	; 0x3e
    3cb0:	2d 97       	sbiw	r28, 0x0d	; 13
    3cb2:	2d 96       	adiw	r28, 0x0d	; 13
    3cb4:	2e ad       	ldd	r18, Y+62	; 0x3e
    3cb6:	3f ad       	ldd	r19, Y+63	; 0x3f
    3cb8:	2d 97       	sbiw	r28, 0x0d	; 13
    3cba:	21 30       	cpi	r18, 0x01	; 1
    3cbc:	31 05       	cpc	r19, r1
    3cbe:	09 f4       	brne	.+2      	; 0x3cc2 <HSSD_vCountDown+0xd8>
    3cc0:	b8 c0       	rjmp	.+368    	; 0x3e32 <HSSD_vCountDown+0x248>
    3cc2:	2d 96       	adiw	r28, 0x0d	; 13
    3cc4:	8e ad       	ldd	r24, Y+62	; 0x3e
    3cc6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cc8:	2d 97       	sbiw	r28, 0x0d	; 13
    3cca:	82 30       	cpi	r24, 0x02	; 2
    3ccc:	91 05       	cpc	r25, r1
    3cce:	3c f4       	brge	.+14     	; 0x3cde <HSSD_vCountDown+0xf4>
    3cd0:	2d 96       	adiw	r28, 0x0d	; 13
    3cd2:	ee ad       	ldd	r30, Y+62	; 0x3e
    3cd4:	ff ad       	ldd	r31, Y+63	; 0x3f
    3cd6:	2d 97       	sbiw	r28, 0x0d	; 13
    3cd8:	30 97       	sbiw	r30, 0x00	; 0
    3cda:	91 f0       	breq	.+36     	; 0x3d00 <HSSD_vCountDown+0x116>
    3cdc:	74 c2       	rjmp	.+1256   	; 0x41c6 <HSSD_vCountDown+0x5dc>
    3cde:	2d 96       	adiw	r28, 0x0d	; 13
    3ce0:	2e ad       	ldd	r18, Y+62	; 0x3e
    3ce2:	3f ad       	ldd	r19, Y+63	; 0x3f
    3ce4:	2d 97       	sbiw	r28, 0x0d	; 13
    3ce6:	22 30       	cpi	r18, 0x02	; 2
    3ce8:	31 05       	cpc	r19, r1
    3cea:	09 f4       	brne	.+2      	; 0x3cee <HSSD_vCountDown+0x104>
    3cec:	3b c1       	rjmp	.+630    	; 0x3f64 <HSSD_vCountDown+0x37a>
    3cee:	2d 96       	adiw	r28, 0x0d	; 13
    3cf0:	8e ad       	ldd	r24, Y+62	; 0x3e
    3cf2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cf4:	2d 97       	sbiw	r28, 0x0d	; 13
    3cf6:	83 30       	cpi	r24, 0x03	; 3
    3cf8:	91 05       	cpc	r25, r1
    3cfa:	09 f4       	brne	.+2      	; 0x3cfe <HSSD_vCountDown+0x114>
    3cfc:	cc c1       	rjmp	.+920    	; 0x4096 <HSSD_vCountDown+0x4ac>
    3cfe:	63 c2       	rjmp	.+1222   	; 0x41c6 <HSSD_vCountDown+0x5dc>
		{
		case DIO_PORTA:
			for(s8 i=A_u8Time; i >= 0; i--)
    3d00:	fe 01       	movw	r30, r28
    3d02:	e8 5b       	subi	r30, 0xB8	; 184
    3d04:	ff 4f       	sbci	r31, 0xFF	; 255
    3d06:	80 81       	ld	r24, Z
    3d08:	8c af       	std	Y+60, r24	; 0x3c
    3d0a:	8e c0       	rjmp	.+284    	; 0x3e28 <HSSD_vCountDown+0x23e>
			{
				HSSD_vDisplayNumber(DIO_PORTA, SSD_u8ArrOfNumbers[i]);
    3d0c:	8c ad       	ldd	r24, Y+60	; 0x3c
    3d0e:	28 2f       	mov	r18, r24
    3d10:	33 27       	eor	r19, r19
    3d12:	27 fd       	sbrc	r18, 7
    3d14:	30 95       	com	r19
    3d16:	ce 01       	movw	r24, r28
    3d18:	cd 96       	adiw	r24, 0x3d	; 61
    3d1a:	fc 01       	movw	r30, r24
    3d1c:	e2 0f       	add	r30, r18
    3d1e:	f3 1f       	adc	r31, r19
    3d20:	90 81       	ld	r25, Z
    3d22:	80 e0       	ldi	r24, 0x00	; 0
    3d24:	69 2f       	mov	r22, r25
    3d26:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3d2a:	fe 01       	movw	r30, r28
    3d2c:	e7 5b       	subi	r30, 0xB7	; 183
    3d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d30:	80 81       	ld	r24, Z
    3d32:	91 81       	ldd	r25, Z+1	; 0x01
    3d34:	cc 01       	movw	r24, r24
    3d36:	a0 e0       	ldi	r26, 0x00	; 0
    3d38:	b0 e0       	ldi	r27, 0x00	; 0
    3d3a:	bc 01       	movw	r22, r24
    3d3c:	cd 01       	movw	r24, r26
    3d3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3d42:	dc 01       	movw	r26, r24
    3d44:	cb 01       	movw	r24, r22
    3d46:	8d ab       	std	Y+53, r24	; 0x35
    3d48:	9e ab       	std	Y+54, r25	; 0x36
    3d4a:	af ab       	std	Y+55, r26	; 0x37
    3d4c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d4e:	6d a9       	ldd	r22, Y+53	; 0x35
    3d50:	7e a9       	ldd	r23, Y+54	; 0x36
    3d52:	8f a9       	ldd	r24, Y+55	; 0x37
    3d54:	98 ad       	ldd	r25, Y+56	; 0x38
    3d56:	20 e0       	ldi	r18, 0x00	; 0
    3d58:	30 e8       	ldi	r19, 0x80	; 128
    3d5a:	4b e3       	ldi	r20, 0x3B	; 59
    3d5c:	55 e4       	ldi	r21, 0x45	; 69
    3d5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d62:	dc 01       	movw	r26, r24
    3d64:	cb 01       	movw	r24, r22
    3d66:	89 ab       	std	Y+49, r24	; 0x31
    3d68:	9a ab       	std	Y+50, r25	; 0x32
    3d6a:	ab ab       	std	Y+51, r26	; 0x33
    3d6c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3d6e:	69 a9       	ldd	r22, Y+49	; 0x31
    3d70:	7a a9       	ldd	r23, Y+50	; 0x32
    3d72:	8b a9       	ldd	r24, Y+51	; 0x33
    3d74:	9c a9       	ldd	r25, Y+52	; 0x34
    3d76:	20 e0       	ldi	r18, 0x00	; 0
    3d78:	30 e0       	ldi	r19, 0x00	; 0
    3d7a:	40 e8       	ldi	r20, 0x80	; 128
    3d7c:	5f e3       	ldi	r21, 0x3F	; 63
    3d7e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3d82:	88 23       	and	r24, r24
    3d84:	2c f4       	brge	.+10     	; 0x3d90 <HSSD_vCountDown+0x1a6>
		__ticks = 1;
    3d86:	81 e0       	ldi	r24, 0x01	; 1
    3d88:	90 e0       	ldi	r25, 0x00	; 0
    3d8a:	98 ab       	std	Y+48, r25	; 0x30
    3d8c:	8f a7       	std	Y+47, r24	; 0x2f
    3d8e:	3f c0       	rjmp	.+126    	; 0x3e0e <HSSD_vCountDown+0x224>
	else if (__tmp > 65535)
    3d90:	69 a9       	ldd	r22, Y+49	; 0x31
    3d92:	7a a9       	ldd	r23, Y+50	; 0x32
    3d94:	8b a9       	ldd	r24, Y+51	; 0x33
    3d96:	9c a9       	ldd	r25, Y+52	; 0x34
    3d98:	20 e0       	ldi	r18, 0x00	; 0
    3d9a:	3f ef       	ldi	r19, 0xFF	; 255
    3d9c:	4f e7       	ldi	r20, 0x7F	; 127
    3d9e:	57 e4       	ldi	r21, 0x47	; 71
    3da0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3da4:	18 16       	cp	r1, r24
    3da6:	4c f5       	brge	.+82     	; 0x3dfa <HSSD_vCountDown+0x210>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3da8:	6d a9       	ldd	r22, Y+53	; 0x35
    3daa:	7e a9       	ldd	r23, Y+54	; 0x36
    3dac:	8f a9       	ldd	r24, Y+55	; 0x37
    3dae:	98 ad       	ldd	r25, Y+56	; 0x38
    3db0:	20 e0       	ldi	r18, 0x00	; 0
    3db2:	30 e0       	ldi	r19, 0x00	; 0
    3db4:	40 e2       	ldi	r20, 0x20	; 32
    3db6:	51 e4       	ldi	r21, 0x41	; 65
    3db8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3dbc:	dc 01       	movw	r26, r24
    3dbe:	cb 01       	movw	r24, r22
    3dc0:	bc 01       	movw	r22, r24
    3dc2:	cd 01       	movw	r24, r26
    3dc4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3dc8:	dc 01       	movw	r26, r24
    3dca:	cb 01       	movw	r24, r22
    3dcc:	98 ab       	std	Y+48, r25	; 0x30
    3dce:	8f a7       	std	Y+47, r24	; 0x2f
    3dd0:	0f c0       	rjmp	.+30     	; 0x3df0 <HSSD_vCountDown+0x206>
    3dd2:	8c e2       	ldi	r24, 0x2C	; 44
    3dd4:	91 e0       	ldi	r25, 0x01	; 1
    3dd6:	9e a7       	std	Y+46, r25	; 0x2e
    3dd8:	8d a7       	std	Y+45, r24	; 0x2d
    3dda:	8d a5       	ldd	r24, Y+45	; 0x2d
    3ddc:	9e a5       	ldd	r25, Y+46	; 0x2e
    3dde:	01 97       	sbiw	r24, 0x01	; 1
    3de0:	f1 f7       	brne	.-4      	; 0x3dde <HSSD_vCountDown+0x1f4>
    3de2:	9e a7       	std	Y+46, r25	; 0x2e
    3de4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3de6:	8f a5       	ldd	r24, Y+47	; 0x2f
    3de8:	98 a9       	ldd	r25, Y+48	; 0x30
    3dea:	01 97       	sbiw	r24, 0x01	; 1
    3dec:	98 ab       	std	Y+48, r25	; 0x30
    3dee:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3df0:	8f a5       	ldd	r24, Y+47	; 0x2f
    3df2:	98 a9       	ldd	r25, Y+48	; 0x30
    3df4:	00 97       	sbiw	r24, 0x00	; 0
    3df6:	69 f7       	brne	.-38     	; 0x3dd2 <HSSD_vCountDown+0x1e8>
    3df8:	14 c0       	rjmp	.+40     	; 0x3e22 <HSSD_vCountDown+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3dfa:	69 a9       	ldd	r22, Y+49	; 0x31
    3dfc:	7a a9       	ldd	r23, Y+50	; 0x32
    3dfe:	8b a9       	ldd	r24, Y+51	; 0x33
    3e00:	9c a9       	ldd	r25, Y+52	; 0x34
    3e02:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3e06:	dc 01       	movw	r26, r24
    3e08:	cb 01       	movw	r24, r22
    3e0a:	98 ab       	std	Y+48, r25	; 0x30
    3e0c:	8f a7       	std	Y+47, r24	; 0x2f
    3e0e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3e10:	98 a9       	ldd	r25, Y+48	; 0x30
    3e12:	9c a7       	std	Y+44, r25	; 0x2c
    3e14:	8b a7       	std	Y+43, r24	; 0x2b
    3e16:	8b a5       	ldd	r24, Y+43	; 0x2b
    3e18:	9c a5       	ldd	r25, Y+44	; 0x2c
    3e1a:	01 97       	sbiw	r24, 0x01	; 1
    3e1c:	f1 f7       	brne	.-4      	; 0x3e1a <HSSD_vCountDown+0x230>
    3e1e:	9c a7       	std	Y+44, r25	; 0x2c
    3e20:	8b a7       	std	Y+43, r24	; 0x2b
	if(A_PortID <= DIO_PORTD)
	{
		switch(A_PortID)
		{
		case DIO_PORTA:
			for(s8 i=A_u8Time; i >= 0; i--)
    3e22:	8c ad       	ldd	r24, Y+60	; 0x3c
    3e24:	81 50       	subi	r24, 0x01	; 1
    3e26:	8c af       	std	Y+60, r24	; 0x3c
    3e28:	8c ad       	ldd	r24, Y+60	; 0x3c
    3e2a:	88 23       	and	r24, r24
    3e2c:	0c f0       	brlt	.+2      	; 0x3e30 <HSSD_vCountDown+0x246>
    3e2e:	6e cf       	rjmp	.-292    	; 0x3d0c <HSSD_vCountDown+0x122>
    3e30:	ca c1       	rjmp	.+916    	; 0x41c6 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTB:
			for(s8 i=A_u8Time ; i >= 0; i--)
    3e32:	fe 01       	movw	r30, r28
    3e34:	e8 5b       	subi	r30, 0xB8	; 184
    3e36:	ff 4f       	sbci	r31, 0xFF	; 255
    3e38:	80 81       	ld	r24, Z
    3e3a:	8b af       	std	Y+59, r24	; 0x3b
    3e3c:	8e c0       	rjmp	.+284    	; 0x3f5a <HSSD_vCountDown+0x370>
			{
				HSSD_vDisplayNumber(DIO_PORTB, SSD_u8ArrOfNumbers[i]);
    3e3e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3e40:	28 2f       	mov	r18, r24
    3e42:	33 27       	eor	r19, r19
    3e44:	27 fd       	sbrc	r18, 7
    3e46:	30 95       	com	r19
    3e48:	ce 01       	movw	r24, r28
    3e4a:	cd 96       	adiw	r24, 0x3d	; 61
    3e4c:	fc 01       	movw	r30, r24
    3e4e:	e2 0f       	add	r30, r18
    3e50:	f3 1f       	adc	r31, r19
    3e52:	90 81       	ld	r25, Z
    3e54:	81 e0       	ldi	r24, 0x01	; 1
    3e56:	69 2f       	mov	r22, r25
    3e58:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3e5c:	fe 01       	movw	r30, r28
    3e5e:	e7 5b       	subi	r30, 0xB7	; 183
    3e60:	ff 4f       	sbci	r31, 0xFF	; 255
    3e62:	80 81       	ld	r24, Z
    3e64:	91 81       	ldd	r25, Z+1	; 0x01
    3e66:	cc 01       	movw	r24, r24
    3e68:	a0 e0       	ldi	r26, 0x00	; 0
    3e6a:	b0 e0       	ldi	r27, 0x00	; 0
    3e6c:	bc 01       	movw	r22, r24
    3e6e:	cd 01       	movw	r24, r26
    3e70:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3e74:	dc 01       	movw	r26, r24
    3e76:	cb 01       	movw	r24, r22
    3e78:	8f a3       	std	Y+39, r24	; 0x27
    3e7a:	98 a7       	std	Y+40, r25	; 0x28
    3e7c:	a9 a7       	std	Y+41, r26	; 0x29
    3e7e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e80:	6f a1       	ldd	r22, Y+39	; 0x27
    3e82:	78 a5       	ldd	r23, Y+40	; 0x28
    3e84:	89 a5       	ldd	r24, Y+41	; 0x29
    3e86:	9a a5       	ldd	r25, Y+42	; 0x2a
    3e88:	20 e0       	ldi	r18, 0x00	; 0
    3e8a:	30 e8       	ldi	r19, 0x80	; 128
    3e8c:	4b e3       	ldi	r20, 0x3B	; 59
    3e8e:	55 e4       	ldi	r21, 0x45	; 69
    3e90:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e94:	dc 01       	movw	r26, r24
    3e96:	cb 01       	movw	r24, r22
    3e98:	8b a3       	std	Y+35, r24	; 0x23
    3e9a:	9c a3       	std	Y+36, r25	; 0x24
    3e9c:	ad a3       	std	Y+37, r26	; 0x25
    3e9e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3ea0:	6b a1       	ldd	r22, Y+35	; 0x23
    3ea2:	7c a1       	ldd	r23, Y+36	; 0x24
    3ea4:	8d a1       	ldd	r24, Y+37	; 0x25
    3ea6:	9e a1       	ldd	r25, Y+38	; 0x26
    3ea8:	20 e0       	ldi	r18, 0x00	; 0
    3eaa:	30 e0       	ldi	r19, 0x00	; 0
    3eac:	40 e8       	ldi	r20, 0x80	; 128
    3eae:	5f e3       	ldi	r21, 0x3F	; 63
    3eb0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3eb4:	88 23       	and	r24, r24
    3eb6:	2c f4       	brge	.+10     	; 0x3ec2 <HSSD_vCountDown+0x2d8>
		__ticks = 1;
    3eb8:	81 e0       	ldi	r24, 0x01	; 1
    3eba:	90 e0       	ldi	r25, 0x00	; 0
    3ebc:	9a a3       	std	Y+34, r25	; 0x22
    3ebe:	89 a3       	std	Y+33, r24	; 0x21
    3ec0:	3f c0       	rjmp	.+126    	; 0x3f40 <HSSD_vCountDown+0x356>
	else if (__tmp > 65535)
    3ec2:	6b a1       	ldd	r22, Y+35	; 0x23
    3ec4:	7c a1       	ldd	r23, Y+36	; 0x24
    3ec6:	8d a1       	ldd	r24, Y+37	; 0x25
    3ec8:	9e a1       	ldd	r25, Y+38	; 0x26
    3eca:	20 e0       	ldi	r18, 0x00	; 0
    3ecc:	3f ef       	ldi	r19, 0xFF	; 255
    3ece:	4f e7       	ldi	r20, 0x7F	; 127
    3ed0:	57 e4       	ldi	r21, 0x47	; 71
    3ed2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3ed6:	18 16       	cp	r1, r24
    3ed8:	4c f5       	brge	.+82     	; 0x3f2c <HSSD_vCountDown+0x342>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eda:	6f a1       	ldd	r22, Y+39	; 0x27
    3edc:	78 a5       	ldd	r23, Y+40	; 0x28
    3ede:	89 a5       	ldd	r24, Y+41	; 0x29
    3ee0:	9a a5       	ldd	r25, Y+42	; 0x2a
    3ee2:	20 e0       	ldi	r18, 0x00	; 0
    3ee4:	30 e0       	ldi	r19, 0x00	; 0
    3ee6:	40 e2       	ldi	r20, 0x20	; 32
    3ee8:	51 e4       	ldi	r21, 0x41	; 65
    3eea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3eee:	dc 01       	movw	r26, r24
    3ef0:	cb 01       	movw	r24, r22
    3ef2:	bc 01       	movw	r22, r24
    3ef4:	cd 01       	movw	r24, r26
    3ef6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3efa:	dc 01       	movw	r26, r24
    3efc:	cb 01       	movw	r24, r22
    3efe:	9a a3       	std	Y+34, r25	; 0x22
    3f00:	89 a3       	std	Y+33, r24	; 0x21
    3f02:	0f c0       	rjmp	.+30     	; 0x3f22 <HSSD_vCountDown+0x338>
    3f04:	8c e2       	ldi	r24, 0x2C	; 44
    3f06:	91 e0       	ldi	r25, 0x01	; 1
    3f08:	98 a3       	std	Y+32, r25	; 0x20
    3f0a:	8f 8f       	std	Y+31, r24	; 0x1f
    3f0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3f0e:	98 a1       	ldd	r25, Y+32	; 0x20
    3f10:	01 97       	sbiw	r24, 0x01	; 1
    3f12:	f1 f7       	brne	.-4      	; 0x3f10 <HSSD_vCountDown+0x326>
    3f14:	98 a3       	std	Y+32, r25	; 0x20
    3f16:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f18:	89 a1       	ldd	r24, Y+33	; 0x21
    3f1a:	9a a1       	ldd	r25, Y+34	; 0x22
    3f1c:	01 97       	sbiw	r24, 0x01	; 1
    3f1e:	9a a3       	std	Y+34, r25	; 0x22
    3f20:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f22:	89 a1       	ldd	r24, Y+33	; 0x21
    3f24:	9a a1       	ldd	r25, Y+34	; 0x22
    3f26:	00 97       	sbiw	r24, 0x00	; 0
    3f28:	69 f7       	brne	.-38     	; 0x3f04 <HSSD_vCountDown+0x31a>
    3f2a:	14 c0       	rjmp	.+40     	; 0x3f54 <HSSD_vCountDown+0x36a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f2c:	6b a1       	ldd	r22, Y+35	; 0x23
    3f2e:	7c a1       	ldd	r23, Y+36	; 0x24
    3f30:	8d a1       	ldd	r24, Y+37	; 0x25
    3f32:	9e a1       	ldd	r25, Y+38	; 0x26
    3f34:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f38:	dc 01       	movw	r26, r24
    3f3a:	cb 01       	movw	r24, r22
    3f3c:	9a a3       	std	Y+34, r25	; 0x22
    3f3e:	89 a3       	std	Y+33, r24	; 0x21
    3f40:	89 a1       	ldd	r24, Y+33	; 0x21
    3f42:	9a a1       	ldd	r25, Y+34	; 0x22
    3f44:	9e 8f       	std	Y+30, r25	; 0x1e
    3f46:	8d 8f       	std	Y+29, r24	; 0x1d
    3f48:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3f4a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3f4c:	01 97       	sbiw	r24, 0x01	; 1
    3f4e:	f1 f7       	brne	.-4      	; 0x3f4c <HSSD_vCountDown+0x362>
    3f50:	9e 8f       	std	Y+30, r25	; 0x1e
    3f52:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTB:
			for(s8 i=A_u8Time ; i >= 0; i--)
    3f54:	8b ad       	ldd	r24, Y+59	; 0x3b
    3f56:	81 50       	subi	r24, 0x01	; 1
    3f58:	8b af       	std	Y+59, r24	; 0x3b
    3f5a:	8b ad       	ldd	r24, Y+59	; 0x3b
    3f5c:	88 23       	and	r24, r24
    3f5e:	0c f0       	brlt	.+2      	; 0x3f62 <HSSD_vCountDown+0x378>
    3f60:	6e cf       	rjmp	.-292    	; 0x3e3e <HSSD_vCountDown+0x254>
    3f62:	31 c1       	rjmp	.+610    	; 0x41c6 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTC:
			for(s8 i =A_u8Time  ; i >= 0; i--)
    3f64:	fe 01       	movw	r30, r28
    3f66:	e8 5b       	subi	r30, 0xB8	; 184
    3f68:	ff 4f       	sbci	r31, 0xFF	; 255
    3f6a:	80 81       	ld	r24, Z
    3f6c:	8a af       	std	Y+58, r24	; 0x3a
    3f6e:	8e c0       	rjmp	.+284    	; 0x408c <HSSD_vCountDown+0x4a2>
			{
				HSSD_vDisplayNumber(DIO_PORTC, SSD_u8ArrOfNumbers[i]);
    3f70:	8a ad       	ldd	r24, Y+58	; 0x3a
    3f72:	28 2f       	mov	r18, r24
    3f74:	33 27       	eor	r19, r19
    3f76:	27 fd       	sbrc	r18, 7
    3f78:	30 95       	com	r19
    3f7a:	ce 01       	movw	r24, r28
    3f7c:	cd 96       	adiw	r24, 0x3d	; 61
    3f7e:	fc 01       	movw	r30, r24
    3f80:	e2 0f       	add	r30, r18
    3f82:	f3 1f       	adc	r31, r19
    3f84:	90 81       	ld	r25, Z
    3f86:	82 e0       	ldi	r24, 0x02	; 2
    3f88:	69 2f       	mov	r22, r25
    3f8a:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    3f8e:	fe 01       	movw	r30, r28
    3f90:	e7 5b       	subi	r30, 0xB7	; 183
    3f92:	ff 4f       	sbci	r31, 0xFF	; 255
    3f94:	80 81       	ld	r24, Z
    3f96:	91 81       	ldd	r25, Z+1	; 0x01
    3f98:	cc 01       	movw	r24, r24
    3f9a:	a0 e0       	ldi	r26, 0x00	; 0
    3f9c:	b0 e0       	ldi	r27, 0x00	; 0
    3f9e:	bc 01       	movw	r22, r24
    3fa0:	cd 01       	movw	r24, r26
    3fa2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    3fa6:	dc 01       	movw	r26, r24
    3fa8:	cb 01       	movw	r24, r22
    3faa:	89 8f       	std	Y+25, r24	; 0x19
    3fac:	9a 8f       	std	Y+26, r25	; 0x1a
    3fae:	ab 8f       	std	Y+27, r26	; 0x1b
    3fb0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fb2:	69 8d       	ldd	r22, Y+25	; 0x19
    3fb4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3fb6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3fb8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3fba:	20 e0       	ldi	r18, 0x00	; 0
    3fbc:	30 e8       	ldi	r19, 0x80	; 128
    3fbe:	4b e3       	ldi	r20, 0x3B	; 59
    3fc0:	55 e4       	ldi	r21, 0x45	; 69
    3fc2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3fc6:	dc 01       	movw	r26, r24
    3fc8:	cb 01       	movw	r24, r22
    3fca:	8d 8b       	std	Y+21, r24	; 0x15
    3fcc:	9e 8b       	std	Y+22, r25	; 0x16
    3fce:	af 8b       	std	Y+23, r26	; 0x17
    3fd0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3fd2:	6d 89       	ldd	r22, Y+21	; 0x15
    3fd4:	7e 89       	ldd	r23, Y+22	; 0x16
    3fd6:	8f 89       	ldd	r24, Y+23	; 0x17
    3fd8:	98 8d       	ldd	r25, Y+24	; 0x18
    3fda:	20 e0       	ldi	r18, 0x00	; 0
    3fdc:	30 e0       	ldi	r19, 0x00	; 0
    3fde:	40 e8       	ldi	r20, 0x80	; 128
    3fe0:	5f e3       	ldi	r21, 0x3F	; 63
    3fe2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3fe6:	88 23       	and	r24, r24
    3fe8:	2c f4       	brge	.+10     	; 0x3ff4 <HSSD_vCountDown+0x40a>
		__ticks = 1;
    3fea:	81 e0       	ldi	r24, 0x01	; 1
    3fec:	90 e0       	ldi	r25, 0x00	; 0
    3fee:	9c 8b       	std	Y+20, r25	; 0x14
    3ff0:	8b 8b       	std	Y+19, r24	; 0x13
    3ff2:	3f c0       	rjmp	.+126    	; 0x4072 <HSSD_vCountDown+0x488>
	else if (__tmp > 65535)
    3ff4:	6d 89       	ldd	r22, Y+21	; 0x15
    3ff6:	7e 89       	ldd	r23, Y+22	; 0x16
    3ff8:	8f 89       	ldd	r24, Y+23	; 0x17
    3ffa:	98 8d       	ldd	r25, Y+24	; 0x18
    3ffc:	20 e0       	ldi	r18, 0x00	; 0
    3ffe:	3f ef       	ldi	r19, 0xFF	; 255
    4000:	4f e7       	ldi	r20, 0x7F	; 127
    4002:	57 e4       	ldi	r21, 0x47	; 71
    4004:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4008:	18 16       	cp	r1, r24
    400a:	4c f5       	brge	.+82     	; 0x405e <HSSD_vCountDown+0x474>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    400c:	69 8d       	ldd	r22, Y+25	; 0x19
    400e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4010:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4012:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4014:	20 e0       	ldi	r18, 0x00	; 0
    4016:	30 e0       	ldi	r19, 0x00	; 0
    4018:	40 e2       	ldi	r20, 0x20	; 32
    401a:	51 e4       	ldi	r21, 0x41	; 65
    401c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4020:	dc 01       	movw	r26, r24
    4022:	cb 01       	movw	r24, r22
    4024:	bc 01       	movw	r22, r24
    4026:	cd 01       	movw	r24, r26
    4028:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    402c:	dc 01       	movw	r26, r24
    402e:	cb 01       	movw	r24, r22
    4030:	9c 8b       	std	Y+20, r25	; 0x14
    4032:	8b 8b       	std	Y+19, r24	; 0x13
    4034:	0f c0       	rjmp	.+30     	; 0x4054 <HSSD_vCountDown+0x46a>
    4036:	8c e2       	ldi	r24, 0x2C	; 44
    4038:	91 e0       	ldi	r25, 0x01	; 1
    403a:	9a 8b       	std	Y+18, r25	; 0x12
    403c:	89 8b       	std	Y+17, r24	; 0x11
    403e:	89 89       	ldd	r24, Y+17	; 0x11
    4040:	9a 89       	ldd	r25, Y+18	; 0x12
    4042:	01 97       	sbiw	r24, 0x01	; 1
    4044:	f1 f7       	brne	.-4      	; 0x4042 <HSSD_vCountDown+0x458>
    4046:	9a 8b       	std	Y+18, r25	; 0x12
    4048:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    404a:	8b 89       	ldd	r24, Y+19	; 0x13
    404c:	9c 89       	ldd	r25, Y+20	; 0x14
    404e:	01 97       	sbiw	r24, 0x01	; 1
    4050:	9c 8b       	std	Y+20, r25	; 0x14
    4052:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4054:	8b 89       	ldd	r24, Y+19	; 0x13
    4056:	9c 89       	ldd	r25, Y+20	; 0x14
    4058:	00 97       	sbiw	r24, 0x00	; 0
    405a:	69 f7       	brne	.-38     	; 0x4036 <HSSD_vCountDown+0x44c>
    405c:	14 c0       	rjmp	.+40     	; 0x4086 <HSSD_vCountDown+0x49c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    405e:	6d 89       	ldd	r22, Y+21	; 0x15
    4060:	7e 89       	ldd	r23, Y+22	; 0x16
    4062:	8f 89       	ldd	r24, Y+23	; 0x17
    4064:	98 8d       	ldd	r25, Y+24	; 0x18
    4066:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    406a:	dc 01       	movw	r26, r24
    406c:	cb 01       	movw	r24, r22
    406e:	9c 8b       	std	Y+20, r25	; 0x14
    4070:	8b 8b       	std	Y+19, r24	; 0x13
    4072:	8b 89       	ldd	r24, Y+19	; 0x13
    4074:	9c 89       	ldd	r25, Y+20	; 0x14
    4076:	98 8b       	std	Y+16, r25	; 0x10
    4078:	8f 87       	std	Y+15, r24	; 0x0f
    407a:	8f 85       	ldd	r24, Y+15	; 0x0f
    407c:	98 89       	ldd	r25, Y+16	; 0x10
    407e:	01 97       	sbiw	r24, 0x01	; 1
    4080:	f1 f7       	brne	.-4      	; 0x407e <HSSD_vCountDown+0x494>
    4082:	98 8b       	std	Y+16, r25	; 0x10
    4084:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTC:
			for(s8 i =A_u8Time  ; i >= 0; i--)
    4086:	8a ad       	ldd	r24, Y+58	; 0x3a
    4088:	81 50       	subi	r24, 0x01	; 1
    408a:	8a af       	std	Y+58, r24	; 0x3a
    408c:	8a ad       	ldd	r24, Y+58	; 0x3a
    408e:	88 23       	and	r24, r24
    4090:	0c f0       	brlt	.+2      	; 0x4094 <HSSD_vCountDown+0x4aa>
    4092:	6e cf       	rjmp	.-292    	; 0x3f70 <HSSD_vCountDown+0x386>
    4094:	98 c0       	rjmp	.+304    	; 0x41c6 <HSSD_vCountDown+0x5dc>
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(s8 i=A_u8Time ; i >= 0; i--)
    4096:	fe 01       	movw	r30, r28
    4098:	e8 5b       	subi	r30, 0xB8	; 184
    409a:	ff 4f       	sbci	r31, 0xFF	; 255
    409c:	80 81       	ld	r24, Z
    409e:	89 af       	std	Y+57, r24	; 0x39
    40a0:	8e c0       	rjmp	.+284    	; 0x41be <HSSD_vCountDown+0x5d4>
			{
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
    40a2:	89 ad       	ldd	r24, Y+57	; 0x39
    40a4:	28 2f       	mov	r18, r24
    40a6:	33 27       	eor	r19, r19
    40a8:	27 fd       	sbrc	r18, 7
    40aa:	30 95       	com	r19
    40ac:	ce 01       	movw	r24, r28
    40ae:	cd 96       	adiw	r24, 0x3d	; 61
    40b0:	fc 01       	movw	r30, r24
    40b2:	e2 0f       	add	r30, r18
    40b4:	f3 1f       	adc	r31, r19
    40b6:	90 81       	ld	r25, Z
    40b8:	83 e0       	ldi	r24, 0x03	; 3
    40ba:	69 2f       	mov	r22, r25
    40bc:	0e 94 d5 1a 	call	0x35aa	; 0x35aa <HSSD_vDisplayNumber>
				_delay_ms(A_u16TimetoWait);
    40c0:	fe 01       	movw	r30, r28
    40c2:	e7 5b       	subi	r30, 0xB7	; 183
    40c4:	ff 4f       	sbci	r31, 0xFF	; 255
    40c6:	80 81       	ld	r24, Z
    40c8:	91 81       	ldd	r25, Z+1	; 0x01
    40ca:	cc 01       	movw	r24, r24
    40cc:	a0 e0       	ldi	r26, 0x00	; 0
    40ce:	b0 e0       	ldi	r27, 0x00	; 0
    40d0:	bc 01       	movw	r22, r24
    40d2:	cd 01       	movw	r24, r26
    40d4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    40d8:	dc 01       	movw	r26, r24
    40da:	cb 01       	movw	r24, r22
    40dc:	8b 87       	std	Y+11, r24	; 0x0b
    40de:	9c 87       	std	Y+12, r25	; 0x0c
    40e0:	ad 87       	std	Y+13, r26	; 0x0d
    40e2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40e4:	6b 85       	ldd	r22, Y+11	; 0x0b
    40e6:	7c 85       	ldd	r23, Y+12	; 0x0c
    40e8:	8d 85       	ldd	r24, Y+13	; 0x0d
    40ea:	9e 85       	ldd	r25, Y+14	; 0x0e
    40ec:	20 e0       	ldi	r18, 0x00	; 0
    40ee:	30 e8       	ldi	r19, 0x80	; 128
    40f0:	4b e3       	ldi	r20, 0x3B	; 59
    40f2:	55 e4       	ldi	r21, 0x45	; 69
    40f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    40f8:	dc 01       	movw	r26, r24
    40fa:	cb 01       	movw	r24, r22
    40fc:	8f 83       	std	Y+7, r24	; 0x07
    40fe:	98 87       	std	Y+8, r25	; 0x08
    4100:	a9 87       	std	Y+9, r26	; 0x09
    4102:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4104:	6f 81       	ldd	r22, Y+7	; 0x07
    4106:	78 85       	ldd	r23, Y+8	; 0x08
    4108:	89 85       	ldd	r24, Y+9	; 0x09
    410a:	9a 85       	ldd	r25, Y+10	; 0x0a
    410c:	20 e0       	ldi	r18, 0x00	; 0
    410e:	30 e0       	ldi	r19, 0x00	; 0
    4110:	40 e8       	ldi	r20, 0x80	; 128
    4112:	5f e3       	ldi	r21, 0x3F	; 63
    4114:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4118:	88 23       	and	r24, r24
    411a:	2c f4       	brge	.+10     	; 0x4126 <HSSD_vCountDown+0x53c>
		__ticks = 1;
    411c:	81 e0       	ldi	r24, 0x01	; 1
    411e:	90 e0       	ldi	r25, 0x00	; 0
    4120:	9e 83       	std	Y+6, r25	; 0x06
    4122:	8d 83       	std	Y+5, r24	; 0x05
    4124:	3f c0       	rjmp	.+126    	; 0x41a4 <HSSD_vCountDown+0x5ba>
	else if (__tmp > 65535)
    4126:	6f 81       	ldd	r22, Y+7	; 0x07
    4128:	78 85       	ldd	r23, Y+8	; 0x08
    412a:	89 85       	ldd	r24, Y+9	; 0x09
    412c:	9a 85       	ldd	r25, Y+10	; 0x0a
    412e:	20 e0       	ldi	r18, 0x00	; 0
    4130:	3f ef       	ldi	r19, 0xFF	; 255
    4132:	4f e7       	ldi	r20, 0x7F	; 127
    4134:	57 e4       	ldi	r21, 0x47	; 71
    4136:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    413a:	18 16       	cp	r1, r24
    413c:	4c f5       	brge	.+82     	; 0x4190 <HSSD_vCountDown+0x5a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    413e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4140:	7c 85       	ldd	r23, Y+12	; 0x0c
    4142:	8d 85       	ldd	r24, Y+13	; 0x0d
    4144:	9e 85       	ldd	r25, Y+14	; 0x0e
    4146:	20 e0       	ldi	r18, 0x00	; 0
    4148:	30 e0       	ldi	r19, 0x00	; 0
    414a:	40 e2       	ldi	r20, 0x20	; 32
    414c:	51 e4       	ldi	r21, 0x41	; 65
    414e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4152:	dc 01       	movw	r26, r24
    4154:	cb 01       	movw	r24, r22
    4156:	bc 01       	movw	r22, r24
    4158:	cd 01       	movw	r24, r26
    415a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    415e:	dc 01       	movw	r26, r24
    4160:	cb 01       	movw	r24, r22
    4162:	9e 83       	std	Y+6, r25	; 0x06
    4164:	8d 83       	std	Y+5, r24	; 0x05
    4166:	0f c0       	rjmp	.+30     	; 0x4186 <HSSD_vCountDown+0x59c>
    4168:	8c e2       	ldi	r24, 0x2C	; 44
    416a:	91 e0       	ldi	r25, 0x01	; 1
    416c:	9c 83       	std	Y+4, r25	; 0x04
    416e:	8b 83       	std	Y+3, r24	; 0x03
    4170:	8b 81       	ldd	r24, Y+3	; 0x03
    4172:	9c 81       	ldd	r25, Y+4	; 0x04
    4174:	01 97       	sbiw	r24, 0x01	; 1
    4176:	f1 f7       	brne	.-4      	; 0x4174 <HSSD_vCountDown+0x58a>
    4178:	9c 83       	std	Y+4, r25	; 0x04
    417a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    417c:	8d 81       	ldd	r24, Y+5	; 0x05
    417e:	9e 81       	ldd	r25, Y+6	; 0x06
    4180:	01 97       	sbiw	r24, 0x01	; 1
    4182:	9e 83       	std	Y+6, r25	; 0x06
    4184:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4186:	8d 81       	ldd	r24, Y+5	; 0x05
    4188:	9e 81       	ldd	r25, Y+6	; 0x06
    418a:	00 97       	sbiw	r24, 0x00	; 0
    418c:	69 f7       	brne	.-38     	; 0x4168 <HSSD_vCountDown+0x57e>
    418e:	14 c0       	rjmp	.+40     	; 0x41b8 <HSSD_vCountDown+0x5ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4190:	6f 81       	ldd	r22, Y+7	; 0x07
    4192:	78 85       	ldd	r23, Y+8	; 0x08
    4194:	89 85       	ldd	r24, Y+9	; 0x09
    4196:	9a 85       	ldd	r25, Y+10	; 0x0a
    4198:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    419c:	dc 01       	movw	r26, r24
    419e:	cb 01       	movw	r24, r22
    41a0:	9e 83       	std	Y+6, r25	; 0x06
    41a2:	8d 83       	std	Y+5, r24	; 0x05
    41a4:	8d 81       	ldd	r24, Y+5	; 0x05
    41a6:	9e 81       	ldd	r25, Y+6	; 0x06
    41a8:	9a 83       	std	Y+2, r25	; 0x02
    41aa:	89 83       	std	Y+1, r24	; 0x01
    41ac:	89 81       	ldd	r24, Y+1	; 0x01
    41ae:	9a 81       	ldd	r25, Y+2	; 0x02
    41b0:	01 97       	sbiw	r24, 0x01	; 1
    41b2:	f1 f7       	brne	.-4      	; 0x41b0 <HSSD_vCountDown+0x5c6>
    41b4:	9a 83       	std	Y+2, r25	; 0x02
    41b6:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(A_u16TimetoWait);
			}
			break;

		case DIO_PORTD:
			for(s8 i=A_u8Time ; i >= 0; i--)
    41b8:	89 ad       	ldd	r24, Y+57	; 0x39
    41ba:	81 50       	subi	r24, 0x01	; 1
    41bc:	89 af       	std	Y+57, r24	; 0x39
    41be:	89 ad       	ldd	r24, Y+57	; 0x39
    41c0:	88 23       	and	r24, r24
    41c2:	0c f0       	brlt	.+2      	; 0x41c6 <HSSD_vCountDown+0x5dc>
    41c4:	6e cf       	rjmp	.-292    	; 0x40a2 <HSSD_vCountDown+0x4b8>
				HSSD_vDisplayNumber(DIO_PORTD, SSD_u8ArrOfNumbers[i]);
				_delay_ms(A_u16TimetoWait);
			}
			break;
		}
		MDIO_vSetPortVal(A_PortID , 0xFF);
    41c6:	fe 01       	movw	r30, r28
    41c8:	e9 5b       	subi	r30, 0xB9	; 185
    41ca:	ff 4f       	sbci	r31, 0xFF	; 255
    41cc:	80 81       	ld	r24, Z
    41ce:	6f ef       	ldi	r22, 0xFF	; 255
    41d0:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>
	}
}
    41d4:	cf 5a       	subi	r28, 0xAF	; 175
    41d6:	df 4f       	sbci	r29, 0xFF	; 255
    41d8:	0f b6       	in	r0, 0x3f	; 63
    41da:	f8 94       	cli
    41dc:	de bf       	out	0x3e, r29	; 62
    41de:	0f be       	out	0x3f, r0	; 63
    41e0:	cd bf       	out	0x3d, r28	; 61
    41e2:	cf 91       	pop	r28
    41e4:	df 91       	pop	r29
    41e6:	08 95       	ret

000041e8 <HLCD_vSendCommand>:
#include "LCD_Cfg.h"

#include <util/delay.h>
#define F_CPU 12000000UL
void HLCD_vSendCommand(u8 A_u8Command)
{
    41e8:	df 93       	push	r29
    41ea:	cf 93       	push	r28
    41ec:	cd b7       	in	r28, 0x3d	; 61
    41ee:	de b7       	in	r29, 0x3e	; 62
    41f0:	2f 97       	sbiw	r28, 0x0f	; 15
    41f2:	0f b6       	in	r0, 0x3f	; 63
    41f4:	f8 94       	cli
    41f6:	de bf       	out	0x3e, r29	; 62
    41f8:	0f be       	out	0x3f, r0	; 63
    41fa:	cd bf       	out	0x3d, r28	; 61
    41fc:	8f 87       	std	Y+15, r24	; 0x0f
	// To send Command RS -> 0 , RW -> 0
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RS_PIN , DIO_LOW);
    41fe:	82 e0       	ldi	r24, 0x02	; 2
    4200:	60 e0       	ldi	r22, 0x00	; 0
    4202:	40 e0       	ldi	r20, 0x00	; 0
    4204:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    4208:	82 e0       	ldi	r24, 0x02	; 2
    420a:	61 e0       	ldi	r22, 0x01	; 1
    420c:	40 e0       	ldi	r20, 0x00	; 0
    420e:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>

	// Send Commnad
	MDIO_vSetPortVal(LCD_DATA_PORT , A_u8Command);
    4212:	83 e0       	ldi	r24, 0x03	; 3
    4214:	6f 85       	ldd	r22, Y+15	; 0x0f
    4216:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>

	// Set Pulse On Enable Pin
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    421a:	82 e0       	ldi	r24, 0x02	; 2
    421c:	62 e0       	ldi	r22, 0x02	; 2
    421e:	41 e0       	ldi	r20, 0x01	; 1
    4220:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    4224:	80 e0       	ldi	r24, 0x00	; 0
    4226:	90 e0       	ldi	r25, 0x00	; 0
    4228:	a0 e0       	ldi	r26, 0x00	; 0
    422a:	b0 e4       	ldi	r27, 0x40	; 64
    422c:	8b 87       	std	Y+11, r24	; 0x0b
    422e:	9c 87       	std	Y+12, r25	; 0x0c
    4230:	ad 87       	std	Y+13, r26	; 0x0d
    4232:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4234:	6b 85       	ldd	r22, Y+11	; 0x0b
    4236:	7c 85       	ldd	r23, Y+12	; 0x0c
    4238:	8d 85       	ldd	r24, Y+13	; 0x0d
    423a:	9e 85       	ldd	r25, Y+14	; 0x0e
    423c:	20 e0       	ldi	r18, 0x00	; 0
    423e:	30 e8       	ldi	r19, 0x80	; 128
    4240:	4b e3       	ldi	r20, 0x3B	; 59
    4242:	55 e4       	ldi	r21, 0x45	; 69
    4244:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4248:	dc 01       	movw	r26, r24
    424a:	cb 01       	movw	r24, r22
    424c:	8f 83       	std	Y+7, r24	; 0x07
    424e:	98 87       	std	Y+8, r25	; 0x08
    4250:	a9 87       	std	Y+9, r26	; 0x09
    4252:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4254:	6f 81       	ldd	r22, Y+7	; 0x07
    4256:	78 85       	ldd	r23, Y+8	; 0x08
    4258:	89 85       	ldd	r24, Y+9	; 0x09
    425a:	9a 85       	ldd	r25, Y+10	; 0x0a
    425c:	20 e0       	ldi	r18, 0x00	; 0
    425e:	30 e0       	ldi	r19, 0x00	; 0
    4260:	40 e8       	ldi	r20, 0x80	; 128
    4262:	5f e3       	ldi	r21, 0x3F	; 63
    4264:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4268:	88 23       	and	r24, r24
    426a:	2c f4       	brge	.+10     	; 0x4276 <HLCD_vSendCommand+0x8e>
		__ticks = 1;
    426c:	81 e0       	ldi	r24, 0x01	; 1
    426e:	90 e0       	ldi	r25, 0x00	; 0
    4270:	9e 83       	std	Y+6, r25	; 0x06
    4272:	8d 83       	std	Y+5, r24	; 0x05
    4274:	3f c0       	rjmp	.+126    	; 0x42f4 <HLCD_vSendCommand+0x10c>
	else if (__tmp > 65535)
    4276:	6f 81       	ldd	r22, Y+7	; 0x07
    4278:	78 85       	ldd	r23, Y+8	; 0x08
    427a:	89 85       	ldd	r24, Y+9	; 0x09
    427c:	9a 85       	ldd	r25, Y+10	; 0x0a
    427e:	20 e0       	ldi	r18, 0x00	; 0
    4280:	3f ef       	ldi	r19, 0xFF	; 255
    4282:	4f e7       	ldi	r20, 0x7F	; 127
    4284:	57 e4       	ldi	r21, 0x47	; 71
    4286:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    428a:	18 16       	cp	r1, r24
    428c:	4c f5       	brge	.+82     	; 0x42e0 <HLCD_vSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    428e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4290:	7c 85       	ldd	r23, Y+12	; 0x0c
    4292:	8d 85       	ldd	r24, Y+13	; 0x0d
    4294:	9e 85       	ldd	r25, Y+14	; 0x0e
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	40 e2       	ldi	r20, 0x20	; 32
    429c:	51 e4       	ldi	r21, 0x41	; 65
    429e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    42a2:	dc 01       	movw	r26, r24
    42a4:	cb 01       	movw	r24, r22
    42a6:	bc 01       	movw	r22, r24
    42a8:	cd 01       	movw	r24, r26
    42aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42ae:	dc 01       	movw	r26, r24
    42b0:	cb 01       	movw	r24, r22
    42b2:	9e 83       	std	Y+6, r25	; 0x06
    42b4:	8d 83       	std	Y+5, r24	; 0x05
    42b6:	0f c0       	rjmp	.+30     	; 0x42d6 <HLCD_vSendCommand+0xee>
    42b8:	8c e2       	ldi	r24, 0x2C	; 44
    42ba:	91 e0       	ldi	r25, 0x01	; 1
    42bc:	9c 83       	std	Y+4, r25	; 0x04
    42be:	8b 83       	std	Y+3, r24	; 0x03
    42c0:	8b 81       	ldd	r24, Y+3	; 0x03
    42c2:	9c 81       	ldd	r25, Y+4	; 0x04
    42c4:	01 97       	sbiw	r24, 0x01	; 1
    42c6:	f1 f7       	brne	.-4      	; 0x42c4 <HLCD_vSendCommand+0xdc>
    42c8:	9c 83       	std	Y+4, r25	; 0x04
    42ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42cc:	8d 81       	ldd	r24, Y+5	; 0x05
    42ce:	9e 81       	ldd	r25, Y+6	; 0x06
    42d0:	01 97       	sbiw	r24, 0x01	; 1
    42d2:	9e 83       	std	Y+6, r25	; 0x06
    42d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42d6:	8d 81       	ldd	r24, Y+5	; 0x05
    42d8:	9e 81       	ldd	r25, Y+6	; 0x06
    42da:	00 97       	sbiw	r24, 0x00	; 0
    42dc:	69 f7       	brne	.-38     	; 0x42b8 <HLCD_vSendCommand+0xd0>
    42de:	14 c0       	rjmp	.+40     	; 0x4308 <HLCD_vSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42e0:	6f 81       	ldd	r22, Y+7	; 0x07
    42e2:	78 85       	ldd	r23, Y+8	; 0x08
    42e4:	89 85       	ldd	r24, Y+9	; 0x09
    42e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    42e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42ec:	dc 01       	movw	r26, r24
    42ee:	cb 01       	movw	r24, r22
    42f0:	9e 83       	std	Y+6, r25	; 0x06
    42f2:	8d 83       	std	Y+5, r24	; 0x05
    42f4:	8d 81       	ldd	r24, Y+5	; 0x05
    42f6:	9e 81       	ldd	r25, Y+6	; 0x06
    42f8:	9a 83       	std	Y+2, r25	; 0x02
    42fa:	89 83       	std	Y+1, r24	; 0x01
    42fc:	89 81       	ldd	r24, Y+1	; 0x01
    42fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4300:	01 97       	sbiw	r24, 0x01	; 1
    4302:	f1 f7       	brne	.-4      	; 0x4300 <HLCD_vSendCommand+0x118>
    4304:	9a 83       	std	Y+2, r25	; 0x02
    4306:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    4308:	82 e0       	ldi	r24, 0x02	; 2
    430a:	62 e0       	ldi	r22, 0x02	; 2
    430c:	40 e0       	ldi	r20, 0x00	; 0
    430e:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    4312:	2f 96       	adiw	r28, 0x0f	; 15
    4314:	0f b6       	in	r0, 0x3f	; 63
    4316:	f8 94       	cli
    4318:	de bf       	out	0x3e, r29	; 62
    431a:	0f be       	out	0x3f, r0	; 63
    431c:	cd bf       	out	0x3d, r28	; 61
    431e:	cf 91       	pop	r28
    4320:	df 91       	pop	r29
    4322:	08 95       	ret

00004324 <HLCD_vSendData>:

void HLCD_vSendData(u8 A_u8Data)
{
    4324:	df 93       	push	r29
    4326:	cf 93       	push	r28
    4328:	cd b7       	in	r28, 0x3d	; 61
    432a:	de b7       	in	r29, 0x3e	; 62
    432c:	2f 97       	sbiw	r28, 0x0f	; 15
    432e:	0f b6       	in	r0, 0x3f	; 63
    4330:	f8 94       	cli
    4332:	de bf       	out	0x3e, r29	; 62
    4334:	0f be       	out	0x3f, r0	; 63
    4336:	cd bf       	out	0x3d, r28	; 61
    4338:	8f 87       	std	Y+15, r24	; 0x0f
	// To send Data RS -> 1 , RW -> 0
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RS_PIN , DIO_HIGH);
    433a:	82 e0       	ldi	r24, 0x02	; 2
    433c:	60 e0       	ldi	r22, 0x00	; 0
    433e:	41 e0       	ldi	r20, 0x01	; 1
    4340:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_RW_PIN , DIO_LOW);
    4344:	82 e0       	ldi	r24, 0x02	; 2
    4346:	61 e0       	ldi	r22, 0x01	; 1
    4348:	40 e0       	ldi	r20, 0x00	; 0
    434a:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>

	// Send Commnad
	MDIO_vSetPortVal(LCD_DATA_PORT , A_u8Data);
    434e:	83 e0       	ldi	r24, 0x03	; 3
    4350:	6f 85       	ldd	r22, Y+15	; 0x0f
    4352:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>

	// Set Pulse On Enable Pin
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_HIGH);
    4356:	82 e0       	ldi	r24, 0x02	; 2
    4358:	62 e0       	ldi	r22, 0x02	; 2
    435a:	41 e0       	ldi	r20, 0x01	; 1
    435c:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
    4360:	80 e0       	ldi	r24, 0x00	; 0
    4362:	90 e0       	ldi	r25, 0x00	; 0
    4364:	a0 e0       	ldi	r26, 0x00	; 0
    4366:	b0 e4       	ldi	r27, 0x40	; 64
    4368:	8b 87       	std	Y+11, r24	; 0x0b
    436a:	9c 87       	std	Y+12, r25	; 0x0c
    436c:	ad 87       	std	Y+13, r26	; 0x0d
    436e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4370:	6b 85       	ldd	r22, Y+11	; 0x0b
    4372:	7c 85       	ldd	r23, Y+12	; 0x0c
    4374:	8d 85       	ldd	r24, Y+13	; 0x0d
    4376:	9e 85       	ldd	r25, Y+14	; 0x0e
    4378:	20 e0       	ldi	r18, 0x00	; 0
    437a:	30 e8       	ldi	r19, 0x80	; 128
    437c:	4b e3       	ldi	r20, 0x3B	; 59
    437e:	55 e4       	ldi	r21, 0x45	; 69
    4380:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4384:	dc 01       	movw	r26, r24
    4386:	cb 01       	movw	r24, r22
    4388:	8f 83       	std	Y+7, r24	; 0x07
    438a:	98 87       	std	Y+8, r25	; 0x08
    438c:	a9 87       	std	Y+9, r26	; 0x09
    438e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4390:	6f 81       	ldd	r22, Y+7	; 0x07
    4392:	78 85       	ldd	r23, Y+8	; 0x08
    4394:	89 85       	ldd	r24, Y+9	; 0x09
    4396:	9a 85       	ldd	r25, Y+10	; 0x0a
    4398:	20 e0       	ldi	r18, 0x00	; 0
    439a:	30 e0       	ldi	r19, 0x00	; 0
    439c:	40 e8       	ldi	r20, 0x80	; 128
    439e:	5f e3       	ldi	r21, 0x3F	; 63
    43a0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    43a4:	88 23       	and	r24, r24
    43a6:	2c f4       	brge	.+10     	; 0x43b2 <HLCD_vSendData+0x8e>
		__ticks = 1;
    43a8:	81 e0       	ldi	r24, 0x01	; 1
    43aa:	90 e0       	ldi	r25, 0x00	; 0
    43ac:	9e 83       	std	Y+6, r25	; 0x06
    43ae:	8d 83       	std	Y+5, r24	; 0x05
    43b0:	3f c0       	rjmp	.+126    	; 0x4430 <HLCD_vSendData+0x10c>
	else if (__tmp > 65535)
    43b2:	6f 81       	ldd	r22, Y+7	; 0x07
    43b4:	78 85       	ldd	r23, Y+8	; 0x08
    43b6:	89 85       	ldd	r24, Y+9	; 0x09
    43b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    43ba:	20 e0       	ldi	r18, 0x00	; 0
    43bc:	3f ef       	ldi	r19, 0xFF	; 255
    43be:	4f e7       	ldi	r20, 0x7F	; 127
    43c0:	57 e4       	ldi	r21, 0x47	; 71
    43c2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    43c6:	18 16       	cp	r1, r24
    43c8:	4c f5       	brge	.+82     	; 0x441c <HLCD_vSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    43cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    43ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    43d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    43d2:	20 e0       	ldi	r18, 0x00	; 0
    43d4:	30 e0       	ldi	r19, 0x00	; 0
    43d6:	40 e2       	ldi	r20, 0x20	; 32
    43d8:	51 e4       	ldi	r21, 0x41	; 65
    43da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    43de:	dc 01       	movw	r26, r24
    43e0:	cb 01       	movw	r24, r22
    43e2:	bc 01       	movw	r22, r24
    43e4:	cd 01       	movw	r24, r26
    43e6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43ea:	dc 01       	movw	r26, r24
    43ec:	cb 01       	movw	r24, r22
    43ee:	9e 83       	std	Y+6, r25	; 0x06
    43f0:	8d 83       	std	Y+5, r24	; 0x05
    43f2:	0f c0       	rjmp	.+30     	; 0x4412 <HLCD_vSendData+0xee>
    43f4:	8c e2       	ldi	r24, 0x2C	; 44
    43f6:	91 e0       	ldi	r25, 0x01	; 1
    43f8:	9c 83       	std	Y+4, r25	; 0x04
    43fa:	8b 83       	std	Y+3, r24	; 0x03
    43fc:	8b 81       	ldd	r24, Y+3	; 0x03
    43fe:	9c 81       	ldd	r25, Y+4	; 0x04
    4400:	01 97       	sbiw	r24, 0x01	; 1
    4402:	f1 f7       	brne	.-4      	; 0x4400 <HLCD_vSendData+0xdc>
    4404:	9c 83       	std	Y+4, r25	; 0x04
    4406:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4408:	8d 81       	ldd	r24, Y+5	; 0x05
    440a:	9e 81       	ldd	r25, Y+6	; 0x06
    440c:	01 97       	sbiw	r24, 0x01	; 1
    440e:	9e 83       	std	Y+6, r25	; 0x06
    4410:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4412:	8d 81       	ldd	r24, Y+5	; 0x05
    4414:	9e 81       	ldd	r25, Y+6	; 0x06
    4416:	00 97       	sbiw	r24, 0x00	; 0
    4418:	69 f7       	brne	.-38     	; 0x43f4 <HLCD_vSendData+0xd0>
    441a:	14 c0       	rjmp	.+40     	; 0x4444 <HLCD_vSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    441c:	6f 81       	ldd	r22, Y+7	; 0x07
    441e:	78 85       	ldd	r23, Y+8	; 0x08
    4420:	89 85       	ldd	r24, Y+9	; 0x09
    4422:	9a 85       	ldd	r25, Y+10	; 0x0a
    4424:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4428:	dc 01       	movw	r26, r24
    442a:	cb 01       	movw	r24, r22
    442c:	9e 83       	std	Y+6, r25	; 0x06
    442e:	8d 83       	std	Y+5, r24	; 0x05
    4430:	8d 81       	ldd	r24, Y+5	; 0x05
    4432:	9e 81       	ldd	r25, Y+6	; 0x06
    4434:	9a 83       	std	Y+2, r25	; 0x02
    4436:	89 83       	std	Y+1, r24	; 0x01
    4438:	89 81       	ldd	r24, Y+1	; 0x01
    443a:	9a 81       	ldd	r25, Y+2	; 0x02
    443c:	01 97       	sbiw	r24, 0x01	; 1
    443e:	f1 f7       	brne	.-4      	; 0x443c <HLCD_vSendData+0x118>
    4440:	9a 83       	std	Y+2, r25	; 0x02
    4442:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	MDIO_vSetPinVal(LCD_CTRL_PORT , LCD_E_PIN , DIO_LOW);
    4444:	82 e0       	ldi	r24, 0x02	; 2
    4446:	62 e0       	ldi	r22, 0x02	; 2
    4448:	40 e0       	ldi	r20, 0x00	; 0
    444a:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    444e:	2f 96       	adiw	r28, 0x0f	; 15
    4450:	0f b6       	in	r0, 0x3f	; 63
    4452:	f8 94       	cli
    4454:	de bf       	out	0x3e, r29	; 62
    4456:	0f be       	out	0x3f, r0	; 63
    4458:	cd bf       	out	0x3d, r28	; 61
    445a:	cf 91       	pop	r28
    445c:	df 91       	pop	r29
    445e:	08 95       	ret

00004460 <HLCD_vInit>:

void HLCD_vInit(void)
{
    4460:	0f 93       	push	r16
    4462:	1f 93       	push	r17
    4464:	df 93       	push	r29
    4466:	cf 93       	push	r28
    4468:	cd b7       	in	r28, 0x3d	; 61
    446a:	de b7       	in	r29, 0x3e	; 62
    446c:	c6 54       	subi	r28, 0x46	; 70
    446e:	d0 40       	sbci	r29, 0x00	; 0
    4470:	0f b6       	in	r0, 0x3f	; 63
    4472:	f8 94       	cli
    4474:	de bf       	out	0x3e, r29	; 62
    4476:	0f be       	out	0x3f, r0	; 63
    4478:	cd bf       	out	0x3d, r28	; 61
	MDIO_vSetPortDir(LCD_DATA_PORT,0xFF);
    447a:	83 e0       	ldi	r24, 0x03	; 3
    447c:	6f ef       	ldi	r22, 0xFF	; 255
    447e:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
	MDIO_vSetPortDir(LCD_CTRL_PORT,0x07);
    4482:	82 e0       	ldi	r24, 0x02	; 2
    4484:	67 e0       	ldi	r22, 0x07	; 7
    4486:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>
    448a:	fe 01       	movw	r30, r28
    448c:	ed 5b       	subi	r30, 0xBD	; 189
    448e:	ff 4f       	sbci	r31, 0xFF	; 255
    4490:	80 e0       	ldi	r24, 0x00	; 0
    4492:	90 e0       	ldi	r25, 0x00	; 0
    4494:	a0 ef       	ldi	r26, 0xF0	; 240
    4496:	b1 e4       	ldi	r27, 0x41	; 65
    4498:	80 83       	st	Z, r24
    449a:	91 83       	std	Z+1, r25	; 0x01
    449c:	a2 83       	std	Z+2, r26	; 0x02
    449e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44a0:	8e 01       	movw	r16, r28
    44a2:	01 5c       	subi	r16, 0xC1	; 193
    44a4:	1f 4f       	sbci	r17, 0xFF	; 255
    44a6:	fe 01       	movw	r30, r28
    44a8:	ed 5b       	subi	r30, 0xBD	; 189
    44aa:	ff 4f       	sbci	r31, 0xFF	; 255
    44ac:	60 81       	ld	r22, Z
    44ae:	71 81       	ldd	r23, Z+1	; 0x01
    44b0:	82 81       	ldd	r24, Z+2	; 0x02
    44b2:	93 81       	ldd	r25, Z+3	; 0x03
    44b4:	20 e0       	ldi	r18, 0x00	; 0
    44b6:	30 e8       	ldi	r19, 0x80	; 128
    44b8:	4b e3       	ldi	r20, 0x3B	; 59
    44ba:	55 e4       	ldi	r21, 0x45	; 69
    44bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44c0:	dc 01       	movw	r26, r24
    44c2:	cb 01       	movw	r24, r22
    44c4:	f8 01       	movw	r30, r16
    44c6:	80 83       	st	Z, r24
    44c8:	91 83       	std	Z+1, r25	; 0x01
    44ca:	a2 83       	std	Z+2, r26	; 0x02
    44cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44ce:	fe 01       	movw	r30, r28
    44d0:	ff 96       	adiw	r30, 0x3f	; 63
    44d2:	60 81       	ld	r22, Z
    44d4:	71 81       	ldd	r23, Z+1	; 0x01
    44d6:	82 81       	ldd	r24, Z+2	; 0x02
    44d8:	93 81       	ldd	r25, Z+3	; 0x03
    44da:	20 e0       	ldi	r18, 0x00	; 0
    44dc:	30 e0       	ldi	r19, 0x00	; 0
    44de:	40 e8       	ldi	r20, 0x80	; 128
    44e0:	5f e3       	ldi	r21, 0x3F	; 63
    44e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    44e6:	88 23       	and	r24, r24
    44e8:	2c f4       	brge	.+10     	; 0x44f4 <HLCD_vInit+0x94>
		__ticks = 1;
    44ea:	81 e0       	ldi	r24, 0x01	; 1
    44ec:	90 e0       	ldi	r25, 0x00	; 0
    44ee:	9e af       	std	Y+62, r25	; 0x3e
    44f0:	8d af       	std	Y+61, r24	; 0x3d
    44f2:	46 c0       	rjmp	.+140    	; 0x4580 <HLCD_vInit+0x120>
	else if (__tmp > 65535)
    44f4:	fe 01       	movw	r30, r28
    44f6:	ff 96       	adiw	r30, 0x3f	; 63
    44f8:	60 81       	ld	r22, Z
    44fa:	71 81       	ldd	r23, Z+1	; 0x01
    44fc:	82 81       	ldd	r24, Z+2	; 0x02
    44fe:	93 81       	ldd	r25, Z+3	; 0x03
    4500:	20 e0       	ldi	r18, 0x00	; 0
    4502:	3f ef       	ldi	r19, 0xFF	; 255
    4504:	4f e7       	ldi	r20, 0x7F	; 127
    4506:	57 e4       	ldi	r21, 0x47	; 71
    4508:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    450c:	18 16       	cp	r1, r24
    450e:	64 f5       	brge	.+88     	; 0x4568 <HLCD_vInit+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4510:	fe 01       	movw	r30, r28
    4512:	ed 5b       	subi	r30, 0xBD	; 189
    4514:	ff 4f       	sbci	r31, 0xFF	; 255
    4516:	60 81       	ld	r22, Z
    4518:	71 81       	ldd	r23, Z+1	; 0x01
    451a:	82 81       	ldd	r24, Z+2	; 0x02
    451c:	93 81       	ldd	r25, Z+3	; 0x03
    451e:	20 e0       	ldi	r18, 0x00	; 0
    4520:	30 e0       	ldi	r19, 0x00	; 0
    4522:	40 e2       	ldi	r20, 0x20	; 32
    4524:	51 e4       	ldi	r21, 0x41	; 65
    4526:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    452a:	dc 01       	movw	r26, r24
    452c:	cb 01       	movw	r24, r22
    452e:	bc 01       	movw	r22, r24
    4530:	cd 01       	movw	r24, r26
    4532:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4536:	dc 01       	movw	r26, r24
    4538:	cb 01       	movw	r24, r22
    453a:	9e af       	std	Y+62, r25	; 0x3e
    453c:	8d af       	std	Y+61, r24	; 0x3d
    453e:	0f c0       	rjmp	.+30     	; 0x455e <HLCD_vInit+0xfe>
    4540:	8c e2       	ldi	r24, 0x2C	; 44
    4542:	91 e0       	ldi	r25, 0x01	; 1
    4544:	9c af       	std	Y+60, r25	; 0x3c
    4546:	8b af       	std	Y+59, r24	; 0x3b
    4548:	8b ad       	ldd	r24, Y+59	; 0x3b
    454a:	9c ad       	ldd	r25, Y+60	; 0x3c
    454c:	01 97       	sbiw	r24, 0x01	; 1
    454e:	f1 f7       	brne	.-4      	; 0x454c <HLCD_vInit+0xec>
    4550:	9c af       	std	Y+60, r25	; 0x3c
    4552:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4554:	8d ad       	ldd	r24, Y+61	; 0x3d
    4556:	9e ad       	ldd	r25, Y+62	; 0x3e
    4558:	01 97       	sbiw	r24, 0x01	; 1
    455a:	9e af       	std	Y+62, r25	; 0x3e
    455c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    455e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4560:	9e ad       	ldd	r25, Y+62	; 0x3e
    4562:	00 97       	sbiw	r24, 0x00	; 0
    4564:	69 f7       	brne	.-38     	; 0x4540 <HLCD_vInit+0xe0>
    4566:	16 c0       	rjmp	.+44     	; 0x4594 <HLCD_vInit+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4568:	fe 01       	movw	r30, r28
    456a:	ff 96       	adiw	r30, 0x3f	; 63
    456c:	60 81       	ld	r22, Z
    456e:	71 81       	ldd	r23, Z+1	; 0x01
    4570:	82 81       	ldd	r24, Z+2	; 0x02
    4572:	93 81       	ldd	r25, Z+3	; 0x03
    4574:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4578:	dc 01       	movw	r26, r24
    457a:	cb 01       	movw	r24, r22
    457c:	9e af       	std	Y+62, r25	; 0x3e
    457e:	8d af       	std	Y+61, r24	; 0x3d
    4580:	8d ad       	ldd	r24, Y+61	; 0x3d
    4582:	9e ad       	ldd	r25, Y+62	; 0x3e
    4584:	9a af       	std	Y+58, r25	; 0x3a
    4586:	89 af       	std	Y+57, r24	; 0x39
    4588:	89 ad       	ldd	r24, Y+57	; 0x39
    458a:	9a ad       	ldd	r25, Y+58	; 0x3a
    458c:	01 97       	sbiw	r24, 0x01	; 1
    458e:	f1 f7       	brne	.-4      	; 0x458c <HLCD_vInit+0x12c>
    4590:	9a af       	std	Y+58, r25	; 0x3a
    4592:	89 af       	std	Y+57, r24	; 0x39

	// wait for 30ms after VDD rises to 4.5V
	_delay_ms(30);

	// Function Set
	HLCD_vSendCommand(FUNCTION_SET);
    4594:	88 e3       	ldi	r24, 0x38	; 56
    4596:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    459a:	80 e0       	ldi	r24, 0x00	; 0
    459c:	90 e0       	ldi	r25, 0x00	; 0
    459e:	a0 e8       	ldi	r26, 0x80	; 128
    45a0:	bf e3       	ldi	r27, 0x3F	; 63
    45a2:	8d ab       	std	Y+53, r24	; 0x35
    45a4:	9e ab       	std	Y+54, r25	; 0x36
    45a6:	af ab       	std	Y+55, r26	; 0x37
    45a8:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45aa:	6d a9       	ldd	r22, Y+53	; 0x35
    45ac:	7e a9       	ldd	r23, Y+54	; 0x36
    45ae:	8f a9       	ldd	r24, Y+55	; 0x37
    45b0:	98 ad       	ldd	r25, Y+56	; 0x38
    45b2:	20 e0       	ldi	r18, 0x00	; 0
    45b4:	30 e8       	ldi	r19, 0x80	; 128
    45b6:	4b e3       	ldi	r20, 0x3B	; 59
    45b8:	55 e4       	ldi	r21, 0x45	; 69
    45ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45be:	dc 01       	movw	r26, r24
    45c0:	cb 01       	movw	r24, r22
    45c2:	89 ab       	std	Y+49, r24	; 0x31
    45c4:	9a ab       	std	Y+50, r25	; 0x32
    45c6:	ab ab       	std	Y+51, r26	; 0x33
    45c8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    45ca:	69 a9       	ldd	r22, Y+49	; 0x31
    45cc:	7a a9       	ldd	r23, Y+50	; 0x32
    45ce:	8b a9       	ldd	r24, Y+51	; 0x33
    45d0:	9c a9       	ldd	r25, Y+52	; 0x34
    45d2:	20 e0       	ldi	r18, 0x00	; 0
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	40 e8       	ldi	r20, 0x80	; 128
    45d8:	5f e3       	ldi	r21, 0x3F	; 63
    45da:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    45de:	88 23       	and	r24, r24
    45e0:	2c f4       	brge	.+10     	; 0x45ec <HLCD_vInit+0x18c>
		__ticks = 1;
    45e2:	81 e0       	ldi	r24, 0x01	; 1
    45e4:	90 e0       	ldi	r25, 0x00	; 0
    45e6:	98 ab       	std	Y+48, r25	; 0x30
    45e8:	8f a7       	std	Y+47, r24	; 0x2f
    45ea:	3f c0       	rjmp	.+126    	; 0x466a <HLCD_vInit+0x20a>
	else if (__tmp > 65535)
    45ec:	69 a9       	ldd	r22, Y+49	; 0x31
    45ee:	7a a9       	ldd	r23, Y+50	; 0x32
    45f0:	8b a9       	ldd	r24, Y+51	; 0x33
    45f2:	9c a9       	ldd	r25, Y+52	; 0x34
    45f4:	20 e0       	ldi	r18, 0x00	; 0
    45f6:	3f ef       	ldi	r19, 0xFF	; 255
    45f8:	4f e7       	ldi	r20, 0x7F	; 127
    45fa:	57 e4       	ldi	r21, 0x47	; 71
    45fc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4600:	18 16       	cp	r1, r24
    4602:	4c f5       	brge	.+82     	; 0x4656 <HLCD_vInit+0x1f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4604:	6d a9       	ldd	r22, Y+53	; 0x35
    4606:	7e a9       	ldd	r23, Y+54	; 0x36
    4608:	8f a9       	ldd	r24, Y+55	; 0x37
    460a:	98 ad       	ldd	r25, Y+56	; 0x38
    460c:	20 e0       	ldi	r18, 0x00	; 0
    460e:	30 e0       	ldi	r19, 0x00	; 0
    4610:	40 e2       	ldi	r20, 0x20	; 32
    4612:	51 e4       	ldi	r21, 0x41	; 65
    4614:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4618:	dc 01       	movw	r26, r24
    461a:	cb 01       	movw	r24, r22
    461c:	bc 01       	movw	r22, r24
    461e:	cd 01       	movw	r24, r26
    4620:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4624:	dc 01       	movw	r26, r24
    4626:	cb 01       	movw	r24, r22
    4628:	98 ab       	std	Y+48, r25	; 0x30
    462a:	8f a7       	std	Y+47, r24	; 0x2f
    462c:	0f c0       	rjmp	.+30     	; 0x464c <HLCD_vInit+0x1ec>
    462e:	8c e2       	ldi	r24, 0x2C	; 44
    4630:	91 e0       	ldi	r25, 0x01	; 1
    4632:	9e a7       	std	Y+46, r25	; 0x2e
    4634:	8d a7       	std	Y+45, r24	; 0x2d
    4636:	8d a5       	ldd	r24, Y+45	; 0x2d
    4638:	9e a5       	ldd	r25, Y+46	; 0x2e
    463a:	01 97       	sbiw	r24, 0x01	; 1
    463c:	f1 f7       	brne	.-4      	; 0x463a <HLCD_vInit+0x1da>
    463e:	9e a7       	std	Y+46, r25	; 0x2e
    4640:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4642:	8f a5       	ldd	r24, Y+47	; 0x2f
    4644:	98 a9       	ldd	r25, Y+48	; 0x30
    4646:	01 97       	sbiw	r24, 0x01	; 1
    4648:	98 ab       	std	Y+48, r25	; 0x30
    464a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    464c:	8f a5       	ldd	r24, Y+47	; 0x2f
    464e:	98 a9       	ldd	r25, Y+48	; 0x30
    4650:	00 97       	sbiw	r24, 0x00	; 0
    4652:	69 f7       	brne	.-38     	; 0x462e <HLCD_vInit+0x1ce>
    4654:	14 c0       	rjmp	.+40     	; 0x467e <HLCD_vInit+0x21e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4656:	69 a9       	ldd	r22, Y+49	; 0x31
    4658:	7a a9       	ldd	r23, Y+50	; 0x32
    465a:	8b a9       	ldd	r24, Y+51	; 0x33
    465c:	9c a9       	ldd	r25, Y+52	; 0x34
    465e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4662:	dc 01       	movw	r26, r24
    4664:	cb 01       	movw	r24, r22
    4666:	98 ab       	std	Y+48, r25	; 0x30
    4668:	8f a7       	std	Y+47, r24	; 0x2f
    466a:	8f a5       	ldd	r24, Y+47	; 0x2f
    466c:	98 a9       	ldd	r25, Y+48	; 0x30
    466e:	9c a7       	std	Y+44, r25	; 0x2c
    4670:	8b a7       	std	Y+43, r24	; 0x2b
    4672:	8b a5       	ldd	r24, Y+43	; 0x2b
    4674:	9c a5       	ldd	r25, Y+44	; 0x2c
    4676:	01 97       	sbiw	r24, 0x01	; 1
    4678:	f1 f7       	brne	.-4      	; 0x4676 <HLCD_vInit+0x216>
    467a:	9c a7       	std	Y+44, r25	; 0x2c
    467c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	// Display On/Off
	HLCD_vSendCommand(DISPLAY_ON_OFF_CONTROL);
    467e:	8f e0       	ldi	r24, 0x0F	; 15
    4680:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    4684:	80 e0       	ldi	r24, 0x00	; 0
    4686:	90 e0       	ldi	r25, 0x00	; 0
    4688:	a0 e8       	ldi	r26, 0x80	; 128
    468a:	bf e3       	ldi	r27, 0x3F	; 63
    468c:	8f a3       	std	Y+39, r24	; 0x27
    468e:	98 a7       	std	Y+40, r25	; 0x28
    4690:	a9 a7       	std	Y+41, r26	; 0x29
    4692:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4694:	6f a1       	ldd	r22, Y+39	; 0x27
    4696:	78 a5       	ldd	r23, Y+40	; 0x28
    4698:	89 a5       	ldd	r24, Y+41	; 0x29
    469a:	9a a5       	ldd	r25, Y+42	; 0x2a
    469c:	20 e0       	ldi	r18, 0x00	; 0
    469e:	30 e8       	ldi	r19, 0x80	; 128
    46a0:	4b e3       	ldi	r20, 0x3B	; 59
    46a2:	55 e4       	ldi	r21, 0x45	; 69
    46a4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    46a8:	dc 01       	movw	r26, r24
    46aa:	cb 01       	movw	r24, r22
    46ac:	8b a3       	std	Y+35, r24	; 0x23
    46ae:	9c a3       	std	Y+36, r25	; 0x24
    46b0:	ad a3       	std	Y+37, r26	; 0x25
    46b2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    46b4:	6b a1       	ldd	r22, Y+35	; 0x23
    46b6:	7c a1       	ldd	r23, Y+36	; 0x24
    46b8:	8d a1       	ldd	r24, Y+37	; 0x25
    46ba:	9e a1       	ldd	r25, Y+38	; 0x26
    46bc:	20 e0       	ldi	r18, 0x00	; 0
    46be:	30 e0       	ldi	r19, 0x00	; 0
    46c0:	40 e8       	ldi	r20, 0x80	; 128
    46c2:	5f e3       	ldi	r21, 0x3F	; 63
    46c4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    46c8:	88 23       	and	r24, r24
    46ca:	2c f4       	brge	.+10     	; 0x46d6 <HLCD_vInit+0x276>
		__ticks = 1;
    46cc:	81 e0       	ldi	r24, 0x01	; 1
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	9a a3       	std	Y+34, r25	; 0x22
    46d2:	89 a3       	std	Y+33, r24	; 0x21
    46d4:	3f c0       	rjmp	.+126    	; 0x4754 <HLCD_vInit+0x2f4>
	else if (__tmp > 65535)
    46d6:	6b a1       	ldd	r22, Y+35	; 0x23
    46d8:	7c a1       	ldd	r23, Y+36	; 0x24
    46da:	8d a1       	ldd	r24, Y+37	; 0x25
    46dc:	9e a1       	ldd	r25, Y+38	; 0x26
    46de:	20 e0       	ldi	r18, 0x00	; 0
    46e0:	3f ef       	ldi	r19, 0xFF	; 255
    46e2:	4f e7       	ldi	r20, 0x7F	; 127
    46e4:	57 e4       	ldi	r21, 0x47	; 71
    46e6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    46ea:	18 16       	cp	r1, r24
    46ec:	4c f5       	brge	.+82     	; 0x4740 <HLCD_vInit+0x2e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46ee:	6f a1       	ldd	r22, Y+39	; 0x27
    46f0:	78 a5       	ldd	r23, Y+40	; 0x28
    46f2:	89 a5       	ldd	r24, Y+41	; 0x29
    46f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    46f6:	20 e0       	ldi	r18, 0x00	; 0
    46f8:	30 e0       	ldi	r19, 0x00	; 0
    46fa:	40 e2       	ldi	r20, 0x20	; 32
    46fc:	51 e4       	ldi	r21, 0x41	; 65
    46fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4702:	dc 01       	movw	r26, r24
    4704:	cb 01       	movw	r24, r22
    4706:	bc 01       	movw	r22, r24
    4708:	cd 01       	movw	r24, r26
    470a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    470e:	dc 01       	movw	r26, r24
    4710:	cb 01       	movw	r24, r22
    4712:	9a a3       	std	Y+34, r25	; 0x22
    4714:	89 a3       	std	Y+33, r24	; 0x21
    4716:	0f c0       	rjmp	.+30     	; 0x4736 <HLCD_vInit+0x2d6>
    4718:	8c e2       	ldi	r24, 0x2C	; 44
    471a:	91 e0       	ldi	r25, 0x01	; 1
    471c:	98 a3       	std	Y+32, r25	; 0x20
    471e:	8f 8f       	std	Y+31, r24	; 0x1f
    4720:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4722:	98 a1       	ldd	r25, Y+32	; 0x20
    4724:	01 97       	sbiw	r24, 0x01	; 1
    4726:	f1 f7       	brne	.-4      	; 0x4724 <HLCD_vInit+0x2c4>
    4728:	98 a3       	std	Y+32, r25	; 0x20
    472a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    472c:	89 a1       	ldd	r24, Y+33	; 0x21
    472e:	9a a1       	ldd	r25, Y+34	; 0x22
    4730:	01 97       	sbiw	r24, 0x01	; 1
    4732:	9a a3       	std	Y+34, r25	; 0x22
    4734:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4736:	89 a1       	ldd	r24, Y+33	; 0x21
    4738:	9a a1       	ldd	r25, Y+34	; 0x22
    473a:	00 97       	sbiw	r24, 0x00	; 0
    473c:	69 f7       	brne	.-38     	; 0x4718 <HLCD_vInit+0x2b8>
    473e:	14 c0       	rjmp	.+40     	; 0x4768 <HLCD_vInit+0x308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4740:	6b a1       	ldd	r22, Y+35	; 0x23
    4742:	7c a1       	ldd	r23, Y+36	; 0x24
    4744:	8d a1       	ldd	r24, Y+37	; 0x25
    4746:	9e a1       	ldd	r25, Y+38	; 0x26
    4748:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    474c:	dc 01       	movw	r26, r24
    474e:	cb 01       	movw	r24, r22
    4750:	9a a3       	std	Y+34, r25	; 0x22
    4752:	89 a3       	std	Y+33, r24	; 0x21
    4754:	89 a1       	ldd	r24, Y+33	; 0x21
    4756:	9a a1       	ldd	r25, Y+34	; 0x22
    4758:	9e 8f       	std	Y+30, r25	; 0x1e
    475a:	8d 8f       	std	Y+29, r24	; 0x1d
    475c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    475e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4760:	01 97       	sbiw	r24, 0x01	; 1
    4762:	f1 f7       	brne	.-4      	; 0x4760 <HLCD_vInit+0x300>
    4764:	9e 8f       	std	Y+30, r25	; 0x1e
    4766:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	// Display Clear
	HLCD_vSendCommand(DISPLAY_CLEAR);
    4768:	81 e0       	ldi	r24, 0x01	; 1
    476a:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    476e:	80 e0       	ldi	r24, 0x00	; 0
    4770:	90 e0       	ldi	r25, 0x00	; 0
    4772:	a0 e0       	ldi	r26, 0x00	; 0
    4774:	b0 e4       	ldi	r27, 0x40	; 64
    4776:	89 8f       	std	Y+25, r24	; 0x19
    4778:	9a 8f       	std	Y+26, r25	; 0x1a
    477a:	ab 8f       	std	Y+27, r26	; 0x1b
    477c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    477e:	69 8d       	ldd	r22, Y+25	; 0x19
    4780:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4782:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4784:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4786:	20 e0       	ldi	r18, 0x00	; 0
    4788:	30 e8       	ldi	r19, 0x80	; 128
    478a:	4b e3       	ldi	r20, 0x3B	; 59
    478c:	55 e4       	ldi	r21, 0x45	; 69
    478e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4792:	dc 01       	movw	r26, r24
    4794:	cb 01       	movw	r24, r22
    4796:	8d 8b       	std	Y+21, r24	; 0x15
    4798:	9e 8b       	std	Y+22, r25	; 0x16
    479a:	af 8b       	std	Y+23, r26	; 0x17
    479c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    479e:	6d 89       	ldd	r22, Y+21	; 0x15
    47a0:	7e 89       	ldd	r23, Y+22	; 0x16
    47a2:	8f 89       	ldd	r24, Y+23	; 0x17
    47a4:	98 8d       	ldd	r25, Y+24	; 0x18
    47a6:	20 e0       	ldi	r18, 0x00	; 0
    47a8:	30 e0       	ldi	r19, 0x00	; 0
    47aa:	40 e8       	ldi	r20, 0x80	; 128
    47ac:	5f e3       	ldi	r21, 0x3F	; 63
    47ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    47b2:	88 23       	and	r24, r24
    47b4:	2c f4       	brge	.+10     	; 0x47c0 <HLCD_vInit+0x360>
		__ticks = 1;
    47b6:	81 e0       	ldi	r24, 0x01	; 1
    47b8:	90 e0       	ldi	r25, 0x00	; 0
    47ba:	9c 8b       	std	Y+20, r25	; 0x14
    47bc:	8b 8b       	std	Y+19, r24	; 0x13
    47be:	3f c0       	rjmp	.+126    	; 0x483e <HLCD_vInit+0x3de>
	else if (__tmp > 65535)
    47c0:	6d 89       	ldd	r22, Y+21	; 0x15
    47c2:	7e 89       	ldd	r23, Y+22	; 0x16
    47c4:	8f 89       	ldd	r24, Y+23	; 0x17
    47c6:	98 8d       	ldd	r25, Y+24	; 0x18
    47c8:	20 e0       	ldi	r18, 0x00	; 0
    47ca:	3f ef       	ldi	r19, 0xFF	; 255
    47cc:	4f e7       	ldi	r20, 0x7F	; 127
    47ce:	57 e4       	ldi	r21, 0x47	; 71
    47d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    47d4:	18 16       	cp	r1, r24
    47d6:	4c f5       	brge	.+82     	; 0x482a <HLCD_vInit+0x3ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47d8:	69 8d       	ldd	r22, Y+25	; 0x19
    47da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    47dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    47de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    47e0:	20 e0       	ldi	r18, 0x00	; 0
    47e2:	30 e0       	ldi	r19, 0x00	; 0
    47e4:	40 e2       	ldi	r20, 0x20	; 32
    47e6:	51 e4       	ldi	r21, 0x41	; 65
    47e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    47ec:	dc 01       	movw	r26, r24
    47ee:	cb 01       	movw	r24, r22
    47f0:	bc 01       	movw	r22, r24
    47f2:	cd 01       	movw	r24, r26
    47f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47f8:	dc 01       	movw	r26, r24
    47fa:	cb 01       	movw	r24, r22
    47fc:	9c 8b       	std	Y+20, r25	; 0x14
    47fe:	8b 8b       	std	Y+19, r24	; 0x13
    4800:	0f c0       	rjmp	.+30     	; 0x4820 <HLCD_vInit+0x3c0>
    4802:	8c e2       	ldi	r24, 0x2C	; 44
    4804:	91 e0       	ldi	r25, 0x01	; 1
    4806:	9a 8b       	std	Y+18, r25	; 0x12
    4808:	89 8b       	std	Y+17, r24	; 0x11
    480a:	89 89       	ldd	r24, Y+17	; 0x11
    480c:	9a 89       	ldd	r25, Y+18	; 0x12
    480e:	01 97       	sbiw	r24, 0x01	; 1
    4810:	f1 f7       	brne	.-4      	; 0x480e <HLCD_vInit+0x3ae>
    4812:	9a 8b       	std	Y+18, r25	; 0x12
    4814:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4816:	8b 89       	ldd	r24, Y+19	; 0x13
    4818:	9c 89       	ldd	r25, Y+20	; 0x14
    481a:	01 97       	sbiw	r24, 0x01	; 1
    481c:	9c 8b       	std	Y+20, r25	; 0x14
    481e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4820:	8b 89       	ldd	r24, Y+19	; 0x13
    4822:	9c 89       	ldd	r25, Y+20	; 0x14
    4824:	00 97       	sbiw	r24, 0x00	; 0
    4826:	69 f7       	brne	.-38     	; 0x4802 <HLCD_vInit+0x3a2>
    4828:	14 c0       	rjmp	.+40     	; 0x4852 <HLCD_vInit+0x3f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    482a:	6d 89       	ldd	r22, Y+21	; 0x15
    482c:	7e 89       	ldd	r23, Y+22	; 0x16
    482e:	8f 89       	ldd	r24, Y+23	; 0x17
    4830:	98 8d       	ldd	r25, Y+24	; 0x18
    4832:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4836:	dc 01       	movw	r26, r24
    4838:	cb 01       	movw	r24, r22
    483a:	9c 8b       	std	Y+20, r25	; 0x14
    483c:	8b 8b       	std	Y+19, r24	; 0x13
    483e:	8b 89       	ldd	r24, Y+19	; 0x13
    4840:	9c 89       	ldd	r25, Y+20	; 0x14
    4842:	98 8b       	std	Y+16, r25	; 0x10
    4844:	8f 87       	std	Y+15, r24	; 0x0f
    4846:	8f 85       	ldd	r24, Y+15	; 0x0f
    4848:	98 89       	ldd	r25, Y+16	; 0x10
    484a:	01 97       	sbiw	r24, 0x01	; 1
    484c:	f1 f7       	brne	.-4      	; 0x484a <HLCD_vInit+0x3ea>
    484e:	98 8b       	std	Y+16, r25	; 0x10
    4850:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);


	// Entry Mode Set
	HLCD_vSendCommand(ENTRY_MODE_SET);
    4852:	86 e0       	ldi	r24, 0x06	; 6
    4854:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    4858:	80 e0       	ldi	r24, 0x00	; 0
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	a0 e8       	ldi	r26, 0x80	; 128
    485e:	bf e3       	ldi	r27, 0x3F	; 63
    4860:	8b 87       	std	Y+11, r24	; 0x0b
    4862:	9c 87       	std	Y+12, r25	; 0x0c
    4864:	ad 87       	std	Y+13, r26	; 0x0d
    4866:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4868:	6b 85       	ldd	r22, Y+11	; 0x0b
    486a:	7c 85       	ldd	r23, Y+12	; 0x0c
    486c:	8d 85       	ldd	r24, Y+13	; 0x0d
    486e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4870:	20 e0       	ldi	r18, 0x00	; 0
    4872:	30 e8       	ldi	r19, 0x80	; 128
    4874:	4b e3       	ldi	r20, 0x3B	; 59
    4876:	55 e4       	ldi	r21, 0x45	; 69
    4878:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    487c:	dc 01       	movw	r26, r24
    487e:	cb 01       	movw	r24, r22
    4880:	8f 83       	std	Y+7, r24	; 0x07
    4882:	98 87       	std	Y+8, r25	; 0x08
    4884:	a9 87       	std	Y+9, r26	; 0x09
    4886:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4888:	6f 81       	ldd	r22, Y+7	; 0x07
    488a:	78 85       	ldd	r23, Y+8	; 0x08
    488c:	89 85       	ldd	r24, Y+9	; 0x09
    488e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4890:	20 e0       	ldi	r18, 0x00	; 0
    4892:	30 e0       	ldi	r19, 0x00	; 0
    4894:	40 e8       	ldi	r20, 0x80	; 128
    4896:	5f e3       	ldi	r21, 0x3F	; 63
    4898:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    489c:	88 23       	and	r24, r24
    489e:	2c f4       	brge	.+10     	; 0x48aa <HLCD_vInit+0x44a>
		__ticks = 1;
    48a0:	81 e0       	ldi	r24, 0x01	; 1
    48a2:	90 e0       	ldi	r25, 0x00	; 0
    48a4:	9e 83       	std	Y+6, r25	; 0x06
    48a6:	8d 83       	std	Y+5, r24	; 0x05
    48a8:	3f c0       	rjmp	.+126    	; 0x4928 <HLCD_vInit+0x4c8>
	else if (__tmp > 65535)
    48aa:	6f 81       	ldd	r22, Y+7	; 0x07
    48ac:	78 85       	ldd	r23, Y+8	; 0x08
    48ae:	89 85       	ldd	r24, Y+9	; 0x09
    48b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    48b2:	20 e0       	ldi	r18, 0x00	; 0
    48b4:	3f ef       	ldi	r19, 0xFF	; 255
    48b6:	4f e7       	ldi	r20, 0x7F	; 127
    48b8:	57 e4       	ldi	r21, 0x47	; 71
    48ba:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    48be:	18 16       	cp	r1, r24
    48c0:	4c f5       	brge	.+82     	; 0x4914 <HLCD_vInit+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    48c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    48c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    48c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    48ca:	20 e0       	ldi	r18, 0x00	; 0
    48cc:	30 e0       	ldi	r19, 0x00	; 0
    48ce:	40 e2       	ldi	r20, 0x20	; 32
    48d0:	51 e4       	ldi	r21, 0x41	; 65
    48d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    48d6:	dc 01       	movw	r26, r24
    48d8:	cb 01       	movw	r24, r22
    48da:	bc 01       	movw	r22, r24
    48dc:	cd 01       	movw	r24, r26
    48de:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    48e2:	dc 01       	movw	r26, r24
    48e4:	cb 01       	movw	r24, r22
    48e6:	9e 83       	std	Y+6, r25	; 0x06
    48e8:	8d 83       	std	Y+5, r24	; 0x05
    48ea:	0f c0       	rjmp	.+30     	; 0x490a <HLCD_vInit+0x4aa>
    48ec:	8c e2       	ldi	r24, 0x2C	; 44
    48ee:	91 e0       	ldi	r25, 0x01	; 1
    48f0:	9c 83       	std	Y+4, r25	; 0x04
    48f2:	8b 83       	std	Y+3, r24	; 0x03
    48f4:	8b 81       	ldd	r24, Y+3	; 0x03
    48f6:	9c 81       	ldd	r25, Y+4	; 0x04
    48f8:	01 97       	sbiw	r24, 0x01	; 1
    48fa:	f1 f7       	brne	.-4      	; 0x48f8 <HLCD_vInit+0x498>
    48fc:	9c 83       	std	Y+4, r25	; 0x04
    48fe:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4900:	8d 81       	ldd	r24, Y+5	; 0x05
    4902:	9e 81       	ldd	r25, Y+6	; 0x06
    4904:	01 97       	sbiw	r24, 0x01	; 1
    4906:	9e 83       	std	Y+6, r25	; 0x06
    4908:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    490a:	8d 81       	ldd	r24, Y+5	; 0x05
    490c:	9e 81       	ldd	r25, Y+6	; 0x06
    490e:	00 97       	sbiw	r24, 0x00	; 0
    4910:	69 f7       	brne	.-38     	; 0x48ec <HLCD_vInit+0x48c>
    4912:	14 c0       	rjmp	.+40     	; 0x493c <HLCD_vInit+0x4dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4914:	6f 81       	ldd	r22, Y+7	; 0x07
    4916:	78 85       	ldd	r23, Y+8	; 0x08
    4918:	89 85       	ldd	r24, Y+9	; 0x09
    491a:	9a 85       	ldd	r25, Y+10	; 0x0a
    491c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4920:	dc 01       	movw	r26, r24
    4922:	cb 01       	movw	r24, r22
    4924:	9e 83       	std	Y+6, r25	; 0x06
    4926:	8d 83       	std	Y+5, r24	; 0x05
    4928:	8d 81       	ldd	r24, Y+5	; 0x05
    492a:	9e 81       	ldd	r25, Y+6	; 0x06
    492c:	9a 83       	std	Y+2, r25	; 0x02
    492e:	89 83       	std	Y+1, r24	; 0x01
    4930:	89 81       	ldd	r24, Y+1	; 0x01
    4932:	9a 81       	ldd	r25, Y+2	; 0x02
    4934:	01 97       	sbiw	r24, 0x01	; 1
    4936:	f1 f7       	brne	.-4      	; 0x4934 <HLCD_vInit+0x4d4>
    4938:	9a 83       	std	Y+2, r25	; 0x02
    493a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    493c:	ca 5b       	subi	r28, 0xBA	; 186
    493e:	df 4f       	sbci	r29, 0xFF	; 255
    4940:	0f b6       	in	r0, 0x3f	; 63
    4942:	f8 94       	cli
    4944:	de bf       	out	0x3e, r29	; 62
    4946:	0f be       	out	0x3f, r0	; 63
    4948:	cd bf       	out	0x3d, r28	; 61
    494a:	cf 91       	pop	r28
    494c:	df 91       	pop	r29
    494e:	1f 91       	pop	r17
    4950:	0f 91       	pop	r16
    4952:	08 95       	ret

00004954 <HLCD_vClearDisplay>:

void HLCD_vClearDisplay(void)
{
    4954:	df 93       	push	r29
    4956:	cf 93       	push	r28
    4958:	cd b7       	in	r28, 0x3d	; 61
    495a:	de b7       	in	r29, 0x3e	; 62
    495c:	2e 97       	sbiw	r28, 0x0e	; 14
    495e:	0f b6       	in	r0, 0x3f	; 63
    4960:	f8 94       	cli
    4962:	de bf       	out	0x3e, r29	; 62
    4964:	0f be       	out	0x3f, r0	; 63
    4966:	cd bf       	out	0x3d, r28	; 61
	HLCD_vSendCommand(DISPLAY_CLEAR);
    4968:	81 e0       	ldi	r24, 0x01	; 1
    496a:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    496e:	80 e0       	ldi	r24, 0x00	; 0
    4970:	90 e0       	ldi	r25, 0x00	; 0
    4972:	a0 e4       	ldi	r26, 0x40	; 64
    4974:	b0 e4       	ldi	r27, 0x40	; 64
    4976:	8b 87       	std	Y+11, r24	; 0x0b
    4978:	9c 87       	std	Y+12, r25	; 0x0c
    497a:	ad 87       	std	Y+13, r26	; 0x0d
    497c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    497e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4980:	7c 85       	ldd	r23, Y+12	; 0x0c
    4982:	8d 85       	ldd	r24, Y+13	; 0x0d
    4984:	9e 85       	ldd	r25, Y+14	; 0x0e
    4986:	20 e0       	ldi	r18, 0x00	; 0
    4988:	30 e8       	ldi	r19, 0x80	; 128
    498a:	4b e3       	ldi	r20, 0x3B	; 59
    498c:	55 e4       	ldi	r21, 0x45	; 69
    498e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4992:	dc 01       	movw	r26, r24
    4994:	cb 01       	movw	r24, r22
    4996:	8f 83       	std	Y+7, r24	; 0x07
    4998:	98 87       	std	Y+8, r25	; 0x08
    499a:	a9 87       	std	Y+9, r26	; 0x09
    499c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    499e:	6f 81       	ldd	r22, Y+7	; 0x07
    49a0:	78 85       	ldd	r23, Y+8	; 0x08
    49a2:	89 85       	ldd	r24, Y+9	; 0x09
    49a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    49a6:	20 e0       	ldi	r18, 0x00	; 0
    49a8:	30 e0       	ldi	r19, 0x00	; 0
    49aa:	40 e8       	ldi	r20, 0x80	; 128
    49ac:	5f e3       	ldi	r21, 0x3F	; 63
    49ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    49b2:	88 23       	and	r24, r24
    49b4:	2c f4       	brge	.+10     	; 0x49c0 <HLCD_vClearDisplay+0x6c>
		__ticks = 1;
    49b6:	81 e0       	ldi	r24, 0x01	; 1
    49b8:	90 e0       	ldi	r25, 0x00	; 0
    49ba:	9e 83       	std	Y+6, r25	; 0x06
    49bc:	8d 83       	std	Y+5, r24	; 0x05
    49be:	3f c0       	rjmp	.+126    	; 0x4a3e <HLCD_vClearDisplay+0xea>
	else if (__tmp > 65535)
    49c0:	6f 81       	ldd	r22, Y+7	; 0x07
    49c2:	78 85       	ldd	r23, Y+8	; 0x08
    49c4:	89 85       	ldd	r24, Y+9	; 0x09
    49c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    49c8:	20 e0       	ldi	r18, 0x00	; 0
    49ca:	3f ef       	ldi	r19, 0xFF	; 255
    49cc:	4f e7       	ldi	r20, 0x7F	; 127
    49ce:	57 e4       	ldi	r21, 0x47	; 71
    49d0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    49d4:	18 16       	cp	r1, r24
    49d6:	4c f5       	brge	.+82     	; 0x4a2a <HLCD_vClearDisplay+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    49da:	7c 85       	ldd	r23, Y+12	; 0x0c
    49dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    49de:	9e 85       	ldd	r25, Y+14	; 0x0e
    49e0:	20 e0       	ldi	r18, 0x00	; 0
    49e2:	30 e0       	ldi	r19, 0x00	; 0
    49e4:	40 e2       	ldi	r20, 0x20	; 32
    49e6:	51 e4       	ldi	r21, 0x41	; 65
    49e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    49ec:	dc 01       	movw	r26, r24
    49ee:	cb 01       	movw	r24, r22
    49f0:	bc 01       	movw	r22, r24
    49f2:	cd 01       	movw	r24, r26
    49f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    49f8:	dc 01       	movw	r26, r24
    49fa:	cb 01       	movw	r24, r22
    49fc:	9e 83       	std	Y+6, r25	; 0x06
    49fe:	8d 83       	std	Y+5, r24	; 0x05
    4a00:	0f c0       	rjmp	.+30     	; 0x4a20 <HLCD_vClearDisplay+0xcc>
    4a02:	8c e2       	ldi	r24, 0x2C	; 44
    4a04:	91 e0       	ldi	r25, 0x01	; 1
    4a06:	9c 83       	std	Y+4, r25	; 0x04
    4a08:	8b 83       	std	Y+3, r24	; 0x03
    4a0a:	8b 81       	ldd	r24, Y+3	; 0x03
    4a0c:	9c 81       	ldd	r25, Y+4	; 0x04
    4a0e:	01 97       	sbiw	r24, 0x01	; 1
    4a10:	f1 f7       	brne	.-4      	; 0x4a0e <HLCD_vClearDisplay+0xba>
    4a12:	9c 83       	std	Y+4, r25	; 0x04
    4a14:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a16:	8d 81       	ldd	r24, Y+5	; 0x05
    4a18:	9e 81       	ldd	r25, Y+6	; 0x06
    4a1a:	01 97       	sbiw	r24, 0x01	; 1
    4a1c:	9e 83       	std	Y+6, r25	; 0x06
    4a1e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a20:	8d 81       	ldd	r24, Y+5	; 0x05
    4a22:	9e 81       	ldd	r25, Y+6	; 0x06
    4a24:	00 97       	sbiw	r24, 0x00	; 0
    4a26:	69 f7       	brne	.-38     	; 0x4a02 <HLCD_vClearDisplay+0xae>
    4a28:	14 c0       	rjmp	.+40     	; 0x4a52 <HLCD_vClearDisplay+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a2a:	6f 81       	ldd	r22, Y+7	; 0x07
    4a2c:	78 85       	ldd	r23, Y+8	; 0x08
    4a2e:	89 85       	ldd	r24, Y+9	; 0x09
    4a30:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a32:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a36:	dc 01       	movw	r26, r24
    4a38:	cb 01       	movw	r24, r22
    4a3a:	9e 83       	std	Y+6, r25	; 0x06
    4a3c:	8d 83       	std	Y+5, r24	; 0x05
    4a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a40:	9e 81       	ldd	r25, Y+6	; 0x06
    4a42:	9a 83       	std	Y+2, r25	; 0x02
    4a44:	89 83       	std	Y+1, r24	; 0x01
    4a46:	89 81       	ldd	r24, Y+1	; 0x01
    4a48:	9a 81       	ldd	r25, Y+2	; 0x02
    4a4a:	01 97       	sbiw	r24, 0x01	; 1
    4a4c:	f1 f7       	brne	.-4      	; 0x4a4a <HLCD_vClearDisplay+0xf6>
    4a4e:	9a 83       	std	Y+2, r25	; 0x02
    4a50:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(3);
}
    4a52:	2e 96       	adiw	r28, 0x0e	; 14
    4a54:	0f b6       	in	r0, 0x3f	; 63
    4a56:	f8 94       	cli
    4a58:	de bf       	out	0x3e, r29	; 62
    4a5a:	0f be       	out	0x3f, r0	; 63
    4a5c:	cd bf       	out	0x3d, r28	; 61
    4a5e:	cf 91       	pop	r28
    4a60:	df 91       	pop	r29
    4a62:	08 95       	ret

00004a64 <HLCD_vDisplayLongString>:

void HLCD_vDisplayLongString(u8 *A_u8PtrToString)
{
    4a64:	df 93       	push	r29
    4a66:	cf 93       	push	r28
    4a68:	00 d0       	rcall	.+0      	; 0x4a6a <HLCD_vDisplayLongString+0x6>
    4a6a:	00 d0       	rcall	.+0      	; 0x4a6c <HLCD_vDisplayLongString+0x8>
    4a6c:	cd b7       	in	r28, 0x3d	; 61
    4a6e:	de b7       	in	r29, 0x3e	; 62
    4a70:	9c 83       	std	Y+4, r25	; 0x04
    4a72:	8b 83       	std	Y+3, r24	; 0x03
	u8 ROW = LCD_ROW1 , COL =LCD_COL1;
    4a74:	81 e0       	ldi	r24, 0x01	; 1
    4a76:	8a 83       	std	Y+2, r24	; 0x02
    4a78:	81 e0       	ldi	r24, 0x01	; 1
    4a7a:	89 83       	std	Y+1, r24	; 0x01
    4a7c:	1b c0       	rjmp	.+54     	; 0x4ab4 <HLCD_vDisplayLongString+0x50>
	while(*A_u8PtrToString > 0)
	{
		if(COL > LCD_COL16 && ROW == LCD_ROW1)
    4a7e:	89 81       	ldd	r24, Y+1	; 0x01
    4a80:	81 31       	cpi	r24, 0x11	; 17
    4a82:	38 f0       	brcs	.+14     	; 0x4a92 <HLCD_vDisplayLongString+0x2e>
    4a84:	8a 81       	ldd	r24, Y+2	; 0x02
    4a86:	81 30       	cpi	r24, 0x01	; 1
    4a88:	21 f4       	brne	.+8      	; 0x4a92 <HLCD_vDisplayLongString+0x2e>
		{
			ROW = LCD_ROW2;
    4a8a:	82 e0       	ldi	r24, 0x02	; 2
    4a8c:	8a 83       	std	Y+2, r24	; 0x02
			COL = LCD_COL1;
    4a8e:	81 e0       	ldi	r24, 0x01	; 1
    4a90:	89 83       	std	Y+1, r24	; 0x01
		}
		HLCD_vGoToPos(ROW , COL);
    4a92:	8a 81       	ldd	r24, Y+2	; 0x02
    4a94:	69 81       	ldd	r22, Y+1	; 0x01
    4a96:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>
		HLCD_vSendData(*A_u8PtrToString);
    4a9a:	eb 81       	ldd	r30, Y+3	; 0x03
    4a9c:	fc 81       	ldd	r31, Y+4	; 0x04
    4a9e:	80 81       	ld	r24, Z
    4aa0:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>
		COL++;
    4aa4:	89 81       	ldd	r24, Y+1	; 0x01
    4aa6:	8f 5f       	subi	r24, 0xFF	; 255
    4aa8:	89 83       	std	Y+1, r24	; 0x01
		*A_u8PtrToString++;
    4aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    4aac:	9c 81       	ldd	r25, Y+4	; 0x04
    4aae:	01 96       	adiw	r24, 0x01	; 1
    4ab0:	9c 83       	std	Y+4, r25	; 0x04
    4ab2:	8b 83       	std	Y+3, r24	; 0x03
}

void HLCD_vDisplayLongString(u8 *A_u8PtrToString)
{
	u8 ROW = LCD_ROW1 , COL =LCD_COL1;
	while(*A_u8PtrToString > 0)
    4ab4:	eb 81       	ldd	r30, Y+3	; 0x03
    4ab6:	fc 81       	ldd	r31, Y+4	; 0x04
    4ab8:	80 81       	ld	r24, Z
    4aba:	88 23       	and	r24, r24
    4abc:	01 f7       	brne	.-64     	; 0x4a7e <HLCD_vDisplayLongString+0x1a>
		HLCD_vGoToPos(ROW , COL);
		HLCD_vSendData(*A_u8PtrToString);
		COL++;
		*A_u8PtrToString++;
	}
}
    4abe:	0f 90       	pop	r0
    4ac0:	0f 90       	pop	r0
    4ac2:	0f 90       	pop	r0
    4ac4:	0f 90       	pop	r0
    4ac6:	cf 91       	pop	r28
    4ac8:	df 91       	pop	r29
    4aca:	08 95       	ret

00004acc <HLCD_vDisplayString>:

void HLCD_vDisplayString(u8 *A_u8PtrToString)
{
    4acc:	df 93       	push	r29
    4ace:	cf 93       	push	r28
    4ad0:	00 d0       	rcall	.+0      	; 0x4ad2 <HLCD_vDisplayString+0x6>
    4ad2:	cd b7       	in	r28, 0x3d	; 61
    4ad4:	de b7       	in	r29, 0x3e	; 62
    4ad6:	9a 83       	std	Y+2, r25	; 0x02
    4ad8:	89 83       	std	Y+1, r24	; 0x01
    4ada:	0a c0       	rjmp	.+20     	; 0x4af0 <HLCD_vDisplayString+0x24>
	while(*A_u8PtrToString > 0)
	{
		HLCD_vSendData(*A_u8PtrToString);
    4adc:	e9 81       	ldd	r30, Y+1	; 0x01
    4ade:	fa 81       	ldd	r31, Y+2	; 0x02
    4ae0:	80 81       	ld	r24, Z
    4ae2:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>
		*A_u8PtrToString++;
    4ae6:	89 81       	ldd	r24, Y+1	; 0x01
    4ae8:	9a 81       	ldd	r25, Y+2	; 0x02
    4aea:	01 96       	adiw	r24, 0x01	; 1
    4aec:	9a 83       	std	Y+2, r25	; 0x02
    4aee:	89 83       	std	Y+1, r24	; 0x01
	}
}

void HLCD_vDisplayString(u8 *A_u8PtrToString)
{
	while(*A_u8PtrToString > 0)
    4af0:	e9 81       	ldd	r30, Y+1	; 0x01
    4af2:	fa 81       	ldd	r31, Y+2	; 0x02
    4af4:	80 81       	ld	r24, Z
    4af6:	88 23       	and	r24, r24
    4af8:	89 f7       	brne	.-30     	; 0x4adc <HLCD_vDisplayString+0x10>
	{
		HLCD_vSendData(*A_u8PtrToString);
		*A_u8PtrToString++;

	}
}
    4afa:	0f 90       	pop	r0
    4afc:	0f 90       	pop	r0
    4afe:	cf 91       	pop	r28
    4b00:	df 91       	pop	r29
    4b02:	08 95       	ret

00004b04 <HLCD_vGoToPos>:

void HLCD_vGoToPos(LCD_ROW_e A_LCDRow ,LCD_COL_e A_LCDCol)
{
    4b04:	df 93       	push	r29
    4b06:	cf 93       	push	r28
    4b08:	00 d0       	rcall	.+0      	; 0x4b0a <HLCD_vGoToPos+0x6>
    4b0a:	00 d0       	rcall	.+0      	; 0x4b0c <HLCD_vGoToPos+0x8>
    4b0c:	cd b7       	in	r28, 0x3d	; 61
    4b0e:	de b7       	in	r29, 0x3e	; 62
    4b10:	89 83       	std	Y+1, r24	; 0x01
    4b12:	6a 83       	std	Y+2, r22	; 0x02
	switch (A_LCDRow)
    4b14:	89 81       	ldd	r24, Y+1	; 0x01
    4b16:	28 2f       	mov	r18, r24
    4b18:	30 e0       	ldi	r19, 0x00	; 0
    4b1a:	3c 83       	std	Y+4, r19	; 0x04
    4b1c:	2b 83       	std	Y+3, r18	; 0x03
    4b1e:	8b 81       	ldd	r24, Y+3	; 0x03
    4b20:	9c 81       	ldd	r25, Y+4	; 0x04
    4b22:	81 30       	cpi	r24, 0x01	; 1
    4b24:	91 05       	cpc	r25, r1
    4b26:	31 f0       	breq	.+12     	; 0x4b34 <HLCD_vGoToPos+0x30>
    4b28:	2b 81       	ldd	r18, Y+3	; 0x03
    4b2a:	3c 81       	ldd	r19, Y+4	; 0x04
    4b2c:	22 30       	cpi	r18, 0x02	; 2
    4b2e:	31 05       	cpc	r19, r1
    4b30:	31 f0       	breq	.+12     	; 0x4b3e <HLCD_vGoToPos+0x3a>
    4b32:	09 c0       	rjmp	.+18     	; 0x4b46 <HLCD_vGoToPos+0x42>
	{
		case LCD_ROW1:
			HLCD_vSendCommand(LCD_ROW1_BASE_ADD + A_LCDCol);
    4b34:	8a 81       	ldd	r24, Y+2	; 0x02
    4b36:	81 58       	subi	r24, 0x81	; 129
    4b38:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
    4b3c:	04 c0       	rjmp	.+8      	; 0x4b46 <HLCD_vGoToPos+0x42>
			break;
		case LCD_ROW2:
			HLCD_vSendCommand(LCD_ROW2_BASE_ADD + A_LCDCol);
    4b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    4b40:	81 54       	subi	r24, 0x41	; 65
    4b42:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>
			break;
	}
}
    4b46:	0f 90       	pop	r0
    4b48:	0f 90       	pop	r0
    4b4a:	0f 90       	pop	r0
    4b4c:	0f 90       	pop	r0
    4b4e:	cf 91       	pop	r28
    4b50:	df 91       	pop	r29
    4b52:	08 95       	ret

00004b54 <HLCD_vDisplayNumber>:

void HLCD_vDisplayNumber(u32 A_u32Number)
{
    4b54:	df 93       	push	r29
    4b56:	cf 93       	push	r28
    4b58:	00 d0       	rcall	.+0      	; 0x4b5a <HLCD_vDisplayNumber+0x6>
    4b5a:	00 d0       	rcall	.+0      	; 0x4b5c <HLCD_vDisplayNumber+0x8>
    4b5c:	cd b7       	in	r28, 0x3d	; 61
    4b5e:	de b7       	in	r29, 0x3e	; 62
    4b60:	9c 83       	std	Y+4, r25	; 0x04
    4b62:	8b 83       	std	Y+3, r24	; 0x03
	u32 ReversedNum = 1;
    4b64:	81 e0       	ldi	r24, 0x01	; 1
    4b66:	90 e0       	ldi	r25, 0x00	; 0
    4b68:	9a 83       	std	Y+2, r25	; 0x02
    4b6a:	89 83       	std	Y+1, r24	; 0x01
	if(A_u32Number == 0)
    4b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    4b6e:	9c 81       	ldd	r25, Y+4	; 0x04
    4b70:	00 97       	sbiw	r24, 0x00	; 0
    4b72:	31 f5       	brne	.+76     	; 0x4bc0 <HLCD_vDisplayNumber+0x6c>
	{
		HLCD_vSendData('0');
    4b74:	80 e3       	ldi	r24, 0x30	; 48
    4b76:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>
    4b7a:	22 c0       	rjmp	.+68     	; 0x4bc0 <HLCD_vDisplayNumber+0x6c>
	}

	while(A_u32Number != 0)
	{
		ReversedNum = (ReversedNum*10) + (A_u32Number %10);
    4b7c:	89 81       	ldd	r24, Y+1	; 0x01
    4b7e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b80:	9c 01       	movw	r18, r24
    4b82:	22 0f       	add	r18, r18
    4b84:	33 1f       	adc	r19, r19
    4b86:	c9 01       	movw	r24, r18
    4b88:	88 0f       	add	r24, r24
    4b8a:	99 1f       	adc	r25, r25
    4b8c:	88 0f       	add	r24, r24
    4b8e:	99 1f       	adc	r25, r25
    4b90:	f9 01       	movw	r30, r18
    4b92:	e8 0f       	add	r30, r24
    4b94:	f9 1f       	adc	r31, r25
    4b96:	8b 81       	ldd	r24, Y+3	; 0x03
    4b98:	9c 81       	ldd	r25, Y+4	; 0x04
    4b9a:	2a e0       	ldi	r18, 0x0A	; 10
    4b9c:	30 e0       	ldi	r19, 0x00	; 0
    4b9e:	b9 01       	movw	r22, r18
    4ba0:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__udivmodhi4>
    4ba4:	8e 0f       	add	r24, r30
    4ba6:	9f 1f       	adc	r25, r31
    4ba8:	9a 83       	std	Y+2, r25	; 0x02
    4baa:	89 83       	std	Y+1, r24	; 0x01
		A_u32Number = A_u32Number /10;
    4bac:	8b 81       	ldd	r24, Y+3	; 0x03
    4bae:	9c 81       	ldd	r25, Y+4	; 0x04
    4bb0:	2a e0       	ldi	r18, 0x0A	; 10
    4bb2:	30 e0       	ldi	r19, 0x00	; 0
    4bb4:	b9 01       	movw	r22, r18
    4bb6:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__udivmodhi4>
    4bba:	cb 01       	movw	r24, r22
    4bbc:	9c 83       	std	Y+4, r25	; 0x04
    4bbe:	8b 83       	std	Y+3, r24	; 0x03
	if(A_u32Number == 0)
	{
		HLCD_vSendData('0');
	}

	while(A_u32Number != 0)
    4bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    4bc2:	9c 81       	ldd	r25, Y+4	; 0x04
    4bc4:	00 97       	sbiw	r24, 0x00	; 0
    4bc6:	d1 f6       	brne	.-76     	; 0x4b7c <HLCD_vDisplayNumber+0x28>
    4bc8:	14 c0       	rjmp	.+40     	; 0x4bf2 <HLCD_vDisplayNumber+0x9e>
		A_u32Number = A_u32Number /10;
	}

	while(ReversedNum != 1)
	{
		HLCD_vSendData( (ReversedNum%10) + 48);
    4bca:	89 81       	ldd	r24, Y+1	; 0x01
    4bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    4bce:	2a e0       	ldi	r18, 0x0A	; 10
    4bd0:	30 e0       	ldi	r19, 0x00	; 0
    4bd2:	b9 01       	movw	r22, r18
    4bd4:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__udivmodhi4>
    4bd8:	80 5d       	subi	r24, 0xD0	; 208
    4bda:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>
		ReversedNum= ReversedNum/10;
    4bde:	89 81       	ldd	r24, Y+1	; 0x01
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	2a e0       	ldi	r18, 0x0A	; 10
    4be4:	30 e0       	ldi	r19, 0x00	; 0
    4be6:	b9 01       	movw	r22, r18
    4be8:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__udivmodhi4>
    4bec:	cb 01       	movw	r24, r22
    4bee:	9a 83       	std	Y+2, r25	; 0x02
    4bf0:	89 83       	std	Y+1, r24	; 0x01
	{
		ReversedNum = (ReversedNum*10) + (A_u32Number %10);
		A_u32Number = A_u32Number /10;
	}

	while(ReversedNum != 1)
    4bf2:	89 81       	ldd	r24, Y+1	; 0x01
    4bf4:	9a 81       	ldd	r25, Y+2	; 0x02
    4bf6:	81 30       	cpi	r24, 0x01	; 1
    4bf8:	91 05       	cpc	r25, r1
    4bfa:	39 f7       	brne	.-50     	; 0x4bca <HLCD_vDisplayNumber+0x76>
	{
		HLCD_vSendData( (ReversedNum%10) + 48);
		ReversedNum= ReversedNum/10;
	}
}
    4bfc:	0f 90       	pop	r0
    4bfe:	0f 90       	pop	r0
    4c00:	0f 90       	pop	r0
    4c02:	0f 90       	pop	r0
    4c04:	cf 91       	pop	r28
    4c06:	df 91       	pop	r29
    4c08:	08 95       	ret

00004c0a <HLCD_vSendSpecialSymbol>:

void HLCD_vSendSpecialSymbol(u8 *A_ptru8SymbolArray, u8 A_u8PatternNum, LCD_ROW_e A_RowNo , LCD_COL_e A_COLNo)
{
    4c0a:	df 93       	push	r29
    4c0c:	cf 93       	push	r28
    4c0e:	cd b7       	in	r28, 0x3d	; 61
    4c10:	de b7       	in	r29, 0x3e	; 62
    4c12:	27 97       	sbiw	r28, 0x07	; 7
    4c14:	0f b6       	in	r0, 0x3f	; 63
    4c16:	f8 94       	cli
    4c18:	de bf       	out	0x3e, r29	; 62
    4c1a:	0f be       	out	0x3f, r0	; 63
    4c1c:	cd bf       	out	0x3d, r28	; 61
    4c1e:	9c 83       	std	Y+4, r25	; 0x04
    4c20:	8b 83       	std	Y+3, r24	; 0x03
    4c22:	6d 83       	std	Y+5, r22	; 0x05
    4c24:	4e 83       	std	Y+6, r20	; 0x06
    4c26:	2f 83       	std	Y+7, r18	; 0x07
	u8 CGRAMAddress;
	// Calculate CGRAM Address
	CGRAMAddress = A_u8PatternNum * 8;
    4c28:	8d 81       	ldd	r24, Y+5	; 0x05
    4c2a:	88 2f       	mov	r24, r24
    4c2c:	90 e0       	ldi	r25, 0x00	; 0
    4c2e:	88 0f       	add	r24, r24
    4c30:	99 1f       	adc	r25, r25
    4c32:	88 0f       	add	r24, r24
    4c34:	99 1f       	adc	r25, r25
    4c36:	88 0f       	add	r24, r24
    4c38:	99 1f       	adc	r25, r25
    4c3a:	8a 83       	std	Y+2, r24	; 0x02
	SET_BIT(CGRAMAddress ,6);
    4c3c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c3e:	80 64       	ori	r24, 0x40	; 64
    4c40:	8a 83       	std	Y+2, r24	; 0x02

	// Set CGRAM
	HLCD_vSendCommand(CGRAMAddress);
    4c42:	8a 81       	ldd	r24, Y+2	; 0x02
    4c44:	0e 94 f4 20 	call	0x41e8	; 0x41e8 <HLCD_vSendCommand>


	for(u8 counter = 0 ; counter < 8 ; counter++)
    4c48:	19 82       	std	Y+1, r1	; 0x01
    4c4a:	0e c0       	rjmp	.+28     	; 0x4c68 <HLCD_vSendSpecialSymbol+0x5e>
	{
		HLCD_vSendData(A_ptru8SymbolArray[counter]);
    4c4c:	89 81       	ldd	r24, Y+1	; 0x01
    4c4e:	28 2f       	mov	r18, r24
    4c50:	30 e0       	ldi	r19, 0x00	; 0
    4c52:	8b 81       	ldd	r24, Y+3	; 0x03
    4c54:	9c 81       	ldd	r25, Y+4	; 0x04
    4c56:	fc 01       	movw	r30, r24
    4c58:	e2 0f       	add	r30, r18
    4c5a:	f3 1f       	adc	r31, r19
    4c5c:	80 81       	ld	r24, Z
    4c5e:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>

	// Set CGRAM
	HLCD_vSendCommand(CGRAMAddress);


	for(u8 counter = 0 ; counter < 8 ; counter++)
    4c62:	89 81       	ldd	r24, Y+1	; 0x01
    4c64:	8f 5f       	subi	r24, 0xFF	; 255
    4c66:	89 83       	std	Y+1, r24	; 0x01
    4c68:	89 81       	ldd	r24, Y+1	; 0x01
    4c6a:	88 30       	cpi	r24, 0x08	; 8
    4c6c:	78 f3       	brcs	.-34     	; 0x4c4c <HLCD_vSendSpecialSymbol+0x42>
	{
		HLCD_vSendData(A_ptru8SymbolArray[counter]);
	}

	// send Command to set DDRAM Address
	HLCD_vGoToPos(A_RowNo , A_COLNo);
    4c6e:	8e 81       	ldd	r24, Y+6	; 0x06
    4c70:	6f 81       	ldd	r22, Y+7	; 0x07
    4c72:	0e 94 82 25 	call	0x4b04	; 0x4b04 <HLCD_vGoToPos>

	// Display Pattern
	HLCD_vSendData(A_u8PatternNum);
    4c76:	8d 81       	ldd	r24, Y+5	; 0x05
    4c78:	0e 94 92 21 	call	0x4324	; 0x4324 <HLCD_vSendData>
}
    4c7c:	27 96       	adiw	r28, 0x07	; 7
    4c7e:	0f b6       	in	r0, 0x3f	; 63
    4c80:	f8 94       	cli
    4c82:	de bf       	out	0x3e, r29	; 62
    4c84:	0f be       	out	0x3f, r0	; 63
    4c86:	cd bf       	out	0x3d, r28	; 61
    4c88:	cf 91       	pop	r28
    4c8a:	df 91       	pop	r29
    4c8c:	08 95       	ret

00004c8e <HKEYPAD_vInit>:
u8 static const ArrOfCols[KEYPAD_COL_NO]= KEYPAD_COLS;



void HKEYPAD_vInit(void)
{
    4c8e:	df 93       	push	r29
    4c90:	cf 93       	push	r28
    4c92:	cd b7       	in	r28, 0x3d	; 61
    4c94:	de b7       	in	r29, 0x3e	; 62
	// Set PORT INPUT / OUTPUT
	MDIO_vSetPortDir(KEYPAD_PORT , 0x0F);
    4c96:	80 e0       	ldi	r24, 0x00	; 0
    4c98:	6f e0       	ldi	r22, 0x0F	; 15
    4c9a:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <MDIO_vSetPortDir>

	// Set all Port to high
	MDIO_vSetPortVal(KEYPAD_PORT , 0xFF);
    4c9e:	80 e0       	ldi	r24, 0x00	; 0
    4ca0:	6f ef       	ldi	r22, 0xFF	; 255
    4ca2:	0e 94 b8 17 	call	0x2f70	; 0x2f70 <MDIO_vSetPortVal>

}
    4ca6:	cf 91       	pop	r28
    4ca8:	df 91       	pop	r29
    4caa:	08 95       	ret

00004cac <HKEYPAD_u8GetPressedKey>:

u8 HKEYPAD_u8GetPressedKey(void)
{
    4cac:	df 93       	push	r29
    4cae:	cf 93       	push	r28
    4cb0:	cd b7       	in	r28, 0x3d	; 61
    4cb2:	de b7       	in	r29, 0x3e	; 62
    4cb4:	a1 97       	sbiw	r28, 0x21	; 33
    4cb6:	0f b6       	in	r0, 0x3f	; 63
    4cb8:	f8 94       	cli
    4cba:	de bf       	out	0x3e, r29	; 62
    4cbc:	0f be       	out	0x3f, r0	; 63
    4cbe:	cd bf       	out	0x3d, r28	; 61
	u8 KeyMap = NO_KEY_PRESSED ;
    4cc0:	8f ef       	ldi	r24, 0xFF	; 255
    4cc2:	89 a3       	std	Y+33, r24	; 0x21
	u8 PinValue ,RowNo=0 , ColNo=0  , Flag=FLAG_DOWN;
    4cc4:	1f 8e       	std	Y+31, r1	; 0x1f
    4cc6:	1e 8e       	std	Y+30, r1	; 0x1e
    4cc8:	1d 8e       	std	Y+29, r1	; 0x1d

	for (RowNo=0; RowNo < KEYPAD_ROW_NO; RowNo++ )
    4cca:	1f 8e       	std	Y+31, r1	; 0x1f
    4ccc:	51 c1       	rjmp	.+674    	; 0x4f70 <HKEYPAD_u8GetPressedKey+0x2c4>
	{
		// Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_LOW);
    4cce:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4cd0:	88 2f       	mov	r24, r24
    4cd2:	90 e0       	ldi	r25, 0x00	; 0
    4cd4:	fc 01       	movw	r30, r24
    4cd6:	e2 54       	subi	r30, 0x42	; 66
    4cd8:	fd 4f       	sbci	r31, 0xFD	; 253
    4cda:	90 81       	ld	r25, Z
    4cdc:	80 e0       	ldi	r24, 0x00	; 0
    4cde:	69 2f       	mov	r22, r25
    4ce0:	40 e0       	ldi	r20, 0x00	; 0
    4ce2:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>

		// Check on COls
		for(ColNo=0; ColNo < KEYPAD_COL_NO; ColNo++)
    4ce6:	1e 8e       	std	Y+30, r1	; 0x1e
    4ce8:	2d c1       	rjmp	.+602    	; 0x4f44 <HKEYPAD_u8GetPressedKey+0x298>
		{
			// Read COLs
			PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4cea:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4cec:	88 2f       	mov	r24, r24
    4cee:	90 e0       	ldi	r25, 0x00	; 0
    4cf0:	fc 01       	movw	r30, r24
    4cf2:	ee 53       	subi	r30, 0x3E	; 62
    4cf4:	fd 4f       	sbci	r31, 0xFD	; 253
    4cf6:	90 81       	ld	r25, Z
    4cf8:	80 e0       	ldi	r24, 0x00	; 0
    4cfa:	69 2f       	mov	r22, r25
    4cfc:	0e 94 6e 16 	call	0x2cdc	; 0x2cdc <MDIO_GetPinVal>
    4d00:	88 a3       	std	Y+32, r24	; 0x20

			// Check if KeyPressed
			if(PinValue == KEY_PRESSED)
    4d02:	88 a1       	ldd	r24, Y+32	; 0x20
    4d04:	88 23       	and	r24, r24
    4d06:	09 f0       	breq	.+2      	; 0x4d0a <HKEYPAD_u8GetPressedKey+0x5e>
    4d08:	1a c1       	rjmp	.+564    	; 0x4f3e <HKEYPAD_u8GetPressedKey+0x292>
    4d0a:	80 e0       	ldi	r24, 0x00	; 0
    4d0c:	90 e0       	ldi	r25, 0x00	; 0
    4d0e:	a0 ef       	ldi	r26, 0xF0	; 240
    4d10:	b1 e4       	ldi	r27, 0x41	; 65
    4d12:	89 8f       	std	Y+25, r24	; 0x19
    4d14:	9a 8f       	std	Y+26, r25	; 0x1a
    4d16:	ab 8f       	std	Y+27, r26	; 0x1b
    4d18:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4d1a:	69 8d       	ldd	r22, Y+25	; 0x19
    4d1c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d1e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d20:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d22:	20 e0       	ldi	r18, 0x00	; 0
    4d24:	30 e8       	ldi	r19, 0x80	; 128
    4d26:	4b e3       	ldi	r20, 0x3B	; 59
    4d28:	55 e4       	ldi	r21, 0x45	; 69
    4d2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d2e:	dc 01       	movw	r26, r24
    4d30:	cb 01       	movw	r24, r22
    4d32:	8d 8b       	std	Y+21, r24	; 0x15
    4d34:	9e 8b       	std	Y+22, r25	; 0x16
    4d36:	af 8b       	std	Y+23, r26	; 0x17
    4d38:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4d3a:	6d 89       	ldd	r22, Y+21	; 0x15
    4d3c:	7e 89       	ldd	r23, Y+22	; 0x16
    4d3e:	8f 89       	ldd	r24, Y+23	; 0x17
    4d40:	98 8d       	ldd	r25, Y+24	; 0x18
    4d42:	20 e0       	ldi	r18, 0x00	; 0
    4d44:	30 e0       	ldi	r19, 0x00	; 0
    4d46:	40 e8       	ldi	r20, 0x80	; 128
    4d48:	5f e3       	ldi	r21, 0x3F	; 63
    4d4a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4d4e:	88 23       	and	r24, r24
    4d50:	2c f4       	brge	.+10     	; 0x4d5c <HKEYPAD_u8GetPressedKey+0xb0>
		__ticks = 1;
    4d52:	81 e0       	ldi	r24, 0x01	; 1
    4d54:	90 e0       	ldi	r25, 0x00	; 0
    4d56:	9c 8b       	std	Y+20, r25	; 0x14
    4d58:	8b 8b       	std	Y+19, r24	; 0x13
    4d5a:	3f c0       	rjmp	.+126    	; 0x4dda <HKEYPAD_u8GetPressedKey+0x12e>
	else if (__tmp > 65535)
    4d5c:	6d 89       	ldd	r22, Y+21	; 0x15
    4d5e:	7e 89       	ldd	r23, Y+22	; 0x16
    4d60:	8f 89       	ldd	r24, Y+23	; 0x17
    4d62:	98 8d       	ldd	r25, Y+24	; 0x18
    4d64:	20 e0       	ldi	r18, 0x00	; 0
    4d66:	3f ef       	ldi	r19, 0xFF	; 255
    4d68:	4f e7       	ldi	r20, 0x7F	; 127
    4d6a:	57 e4       	ldi	r21, 0x47	; 71
    4d6c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4d70:	18 16       	cp	r1, r24
    4d72:	4c f5       	brge	.+82     	; 0x4dc6 <HKEYPAD_u8GetPressedKey+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d74:	69 8d       	ldd	r22, Y+25	; 0x19
    4d76:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d78:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d7a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d7c:	20 e0       	ldi	r18, 0x00	; 0
    4d7e:	30 e0       	ldi	r19, 0x00	; 0
    4d80:	40 e2       	ldi	r20, 0x20	; 32
    4d82:	51 e4       	ldi	r21, 0x41	; 65
    4d84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4d88:	dc 01       	movw	r26, r24
    4d8a:	cb 01       	movw	r24, r22
    4d8c:	bc 01       	movw	r22, r24
    4d8e:	cd 01       	movw	r24, r26
    4d90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d94:	dc 01       	movw	r26, r24
    4d96:	cb 01       	movw	r24, r22
    4d98:	9c 8b       	std	Y+20, r25	; 0x14
    4d9a:	8b 8b       	std	Y+19, r24	; 0x13
    4d9c:	0f c0       	rjmp	.+30     	; 0x4dbc <HKEYPAD_u8GetPressedKey+0x110>
    4d9e:	8c e2       	ldi	r24, 0x2C	; 44
    4da0:	91 e0       	ldi	r25, 0x01	; 1
    4da2:	9a 8b       	std	Y+18, r25	; 0x12
    4da4:	89 8b       	std	Y+17, r24	; 0x11
    4da6:	89 89       	ldd	r24, Y+17	; 0x11
    4da8:	9a 89       	ldd	r25, Y+18	; 0x12
    4daa:	01 97       	sbiw	r24, 0x01	; 1
    4dac:	f1 f7       	brne	.-4      	; 0x4daa <HKEYPAD_u8GetPressedKey+0xfe>
    4dae:	9a 8b       	std	Y+18, r25	; 0x12
    4db0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4db2:	8b 89       	ldd	r24, Y+19	; 0x13
    4db4:	9c 89       	ldd	r25, Y+20	; 0x14
    4db6:	01 97       	sbiw	r24, 0x01	; 1
    4db8:	9c 8b       	std	Y+20, r25	; 0x14
    4dba:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4dbc:	8b 89       	ldd	r24, Y+19	; 0x13
    4dbe:	9c 89       	ldd	r25, Y+20	; 0x14
    4dc0:	00 97       	sbiw	r24, 0x00	; 0
    4dc2:	69 f7       	brne	.-38     	; 0x4d9e <HKEYPAD_u8GetPressedKey+0xf2>
    4dc4:	14 c0       	rjmp	.+40     	; 0x4dee <HKEYPAD_u8GetPressedKey+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4dc6:	6d 89       	ldd	r22, Y+21	; 0x15
    4dc8:	7e 89       	ldd	r23, Y+22	; 0x16
    4dca:	8f 89       	ldd	r24, Y+23	; 0x17
    4dcc:	98 8d       	ldd	r25, Y+24	; 0x18
    4dce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4dd2:	dc 01       	movw	r26, r24
    4dd4:	cb 01       	movw	r24, r22
    4dd6:	9c 8b       	std	Y+20, r25	; 0x14
    4dd8:	8b 8b       	std	Y+19, r24	; 0x13
    4dda:	8b 89       	ldd	r24, Y+19	; 0x13
    4ddc:	9c 89       	ldd	r25, Y+20	; 0x14
    4dde:	98 8b       	std	Y+16, r25	; 0x10
    4de0:	8f 87       	std	Y+15, r24	; 0x0f
    4de2:	8f 85       	ldd	r24, Y+15	; 0x0f
    4de4:	98 89       	ldd	r25, Y+16	; 0x10
    4de6:	01 97       	sbiw	r24, 0x01	; 1
    4de8:	f1 f7       	brne	.-4      	; 0x4de6 <HKEYPAD_u8GetPressedKey+0x13a>
    4dea:	98 8b       	std	Y+16, r25	; 0x10
    4dec:	8f 87       	std	Y+15, r24	; 0x0f
			{
				// Debouncing Delay
				_delay_ms(DEBOUNCING_DELAY_ms);
				PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4dee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4df0:	88 2f       	mov	r24, r24
    4df2:	90 e0       	ldi	r25, 0x00	; 0
    4df4:	fc 01       	movw	r30, r24
    4df6:	ee 53       	subi	r30, 0x3E	; 62
    4df8:	fd 4f       	sbci	r31, 0xFD	; 253
    4dfa:	90 81       	ld	r25, Z
    4dfc:	80 e0       	ldi	r24, 0x00	; 0
    4dfe:	69 2f       	mov	r22, r25
    4e00:	0e 94 6e 16 	call	0x2cdc	; 0x2cdc <MDIO_GetPinVal>
    4e04:	88 a3       	std	Y+32, r24	; 0x20
				if(PinValue == KEY_PRESSED)
    4e06:	88 a1       	ldd	r24, Y+32	; 0x20
    4e08:	88 23       	and	r24, r24
    4e0a:	09 f0       	breq	.+2      	; 0x4e0e <HKEYPAD_u8GetPressedKey+0x162>
    4e0c:	98 c0       	rjmp	.+304    	; 0x4f3e <HKEYPAD_u8GetPressedKey+0x292>
    4e0e:	7e c0       	rjmp	.+252    	; 0x4f0c <HKEYPAD_u8GetPressedKey+0x260>
				{
					while(PinValue == KEY_PRESSED) // Polling of Flag
    4e10:	80 e0       	ldi	r24, 0x00	; 0
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	a0 ef       	ldi	r26, 0xF0	; 240
    4e16:	b1 e4       	ldi	r27, 0x41	; 65
    4e18:	8b 87       	std	Y+11, r24	; 0x0b
    4e1a:	9c 87       	std	Y+12, r25	; 0x0c
    4e1c:	ad 87       	std	Y+13, r26	; 0x0d
    4e1e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4e20:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e22:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e24:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e26:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e28:	20 e0       	ldi	r18, 0x00	; 0
    4e2a:	30 e8       	ldi	r19, 0x80	; 128
    4e2c:	4b e3       	ldi	r20, 0x3B	; 59
    4e2e:	55 e4       	ldi	r21, 0x45	; 69
    4e30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e34:	dc 01       	movw	r26, r24
    4e36:	cb 01       	movw	r24, r22
    4e38:	8f 83       	std	Y+7, r24	; 0x07
    4e3a:	98 87       	std	Y+8, r25	; 0x08
    4e3c:	a9 87       	std	Y+9, r26	; 0x09
    4e3e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4e40:	6f 81       	ldd	r22, Y+7	; 0x07
    4e42:	78 85       	ldd	r23, Y+8	; 0x08
    4e44:	89 85       	ldd	r24, Y+9	; 0x09
    4e46:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e48:	20 e0       	ldi	r18, 0x00	; 0
    4e4a:	30 e0       	ldi	r19, 0x00	; 0
    4e4c:	40 e8       	ldi	r20, 0x80	; 128
    4e4e:	5f e3       	ldi	r21, 0x3F	; 63
    4e50:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4e54:	88 23       	and	r24, r24
    4e56:	2c f4       	brge	.+10     	; 0x4e62 <HKEYPAD_u8GetPressedKey+0x1b6>
		__ticks = 1;
    4e58:	81 e0       	ldi	r24, 0x01	; 1
    4e5a:	90 e0       	ldi	r25, 0x00	; 0
    4e5c:	9e 83       	std	Y+6, r25	; 0x06
    4e5e:	8d 83       	std	Y+5, r24	; 0x05
    4e60:	3f c0       	rjmp	.+126    	; 0x4ee0 <HKEYPAD_u8GetPressedKey+0x234>
	else if (__tmp > 65535)
    4e62:	6f 81       	ldd	r22, Y+7	; 0x07
    4e64:	78 85       	ldd	r23, Y+8	; 0x08
    4e66:	89 85       	ldd	r24, Y+9	; 0x09
    4e68:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e6a:	20 e0       	ldi	r18, 0x00	; 0
    4e6c:	3f ef       	ldi	r19, 0xFF	; 255
    4e6e:	4f e7       	ldi	r20, 0x7F	; 127
    4e70:	57 e4       	ldi	r21, 0x47	; 71
    4e72:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4e76:	18 16       	cp	r1, r24
    4e78:	4c f5       	brge	.+82     	; 0x4ecc <HKEYPAD_u8GetPressedKey+0x220>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e7c:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e80:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e82:	20 e0       	ldi	r18, 0x00	; 0
    4e84:	30 e0       	ldi	r19, 0x00	; 0
    4e86:	40 e2       	ldi	r20, 0x20	; 32
    4e88:	51 e4       	ldi	r21, 0x41	; 65
    4e8a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e8e:	dc 01       	movw	r26, r24
    4e90:	cb 01       	movw	r24, r22
    4e92:	bc 01       	movw	r22, r24
    4e94:	cd 01       	movw	r24, r26
    4e96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e9a:	dc 01       	movw	r26, r24
    4e9c:	cb 01       	movw	r24, r22
    4e9e:	9e 83       	std	Y+6, r25	; 0x06
    4ea0:	8d 83       	std	Y+5, r24	; 0x05
    4ea2:	0f c0       	rjmp	.+30     	; 0x4ec2 <HKEYPAD_u8GetPressedKey+0x216>
    4ea4:	8c e2       	ldi	r24, 0x2C	; 44
    4ea6:	91 e0       	ldi	r25, 0x01	; 1
    4ea8:	9c 83       	std	Y+4, r25	; 0x04
    4eaa:	8b 83       	std	Y+3, r24	; 0x03
    4eac:	8b 81       	ldd	r24, Y+3	; 0x03
    4eae:	9c 81       	ldd	r25, Y+4	; 0x04
    4eb0:	01 97       	sbiw	r24, 0x01	; 1
    4eb2:	f1 f7       	brne	.-4      	; 0x4eb0 <HKEYPAD_u8GetPressedKey+0x204>
    4eb4:	9c 83       	std	Y+4, r25	; 0x04
    4eb6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4eb8:	8d 81       	ldd	r24, Y+5	; 0x05
    4eba:	9e 81       	ldd	r25, Y+6	; 0x06
    4ebc:	01 97       	sbiw	r24, 0x01	; 1
    4ebe:	9e 83       	std	Y+6, r25	; 0x06
    4ec0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ec2:	8d 81       	ldd	r24, Y+5	; 0x05
    4ec4:	9e 81       	ldd	r25, Y+6	; 0x06
    4ec6:	00 97       	sbiw	r24, 0x00	; 0
    4ec8:	69 f7       	brne	.-38     	; 0x4ea4 <HKEYPAD_u8GetPressedKey+0x1f8>
    4eca:	14 c0       	rjmp	.+40     	; 0x4ef4 <HKEYPAD_u8GetPressedKey+0x248>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ecc:	6f 81       	ldd	r22, Y+7	; 0x07
    4ece:	78 85       	ldd	r23, Y+8	; 0x08
    4ed0:	89 85       	ldd	r24, Y+9	; 0x09
    4ed2:	9a 85       	ldd	r25, Y+10	; 0x0a
    4ed4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ed8:	dc 01       	movw	r26, r24
    4eda:	cb 01       	movw	r24, r22
    4edc:	9e 83       	std	Y+6, r25	; 0x06
    4ede:	8d 83       	std	Y+5, r24	; 0x05
    4ee0:	8d 81       	ldd	r24, Y+5	; 0x05
    4ee2:	9e 81       	ldd	r25, Y+6	; 0x06
    4ee4:	9a 83       	std	Y+2, r25	; 0x02
    4ee6:	89 83       	std	Y+1, r24	; 0x01
    4ee8:	89 81       	ldd	r24, Y+1	; 0x01
    4eea:	9a 81       	ldd	r25, Y+2	; 0x02
    4eec:	01 97       	sbiw	r24, 0x01	; 1
    4eee:	f1 f7       	brne	.-4      	; 0x4eec <HKEYPAD_u8GetPressedKey+0x240>
    4ef0:	9a 83       	std	Y+2, r25	; 0x02
    4ef2:	89 83       	std	Y+1, r24	; 0x01
					{
						_delay_ms(DEBOUNCING_DELAY_ms);
						PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
    4ef4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4ef6:	88 2f       	mov	r24, r24
    4ef8:	90 e0       	ldi	r25, 0x00	; 0
    4efa:	fc 01       	movw	r30, r24
    4efc:	ee 53       	subi	r30, 0x3E	; 62
    4efe:	fd 4f       	sbci	r31, 0xFD	; 253
    4f00:	90 81       	ld	r25, Z
    4f02:	80 e0       	ldi	r24, 0x00	; 0
    4f04:	69 2f       	mov	r22, r25
    4f06:	0e 94 6e 16 	call	0x2cdc	; 0x2cdc <MDIO_GetPinVal>
    4f0a:	88 a3       	std	Y+32, r24	; 0x20
				// Debouncing Delay
				_delay_ms(DEBOUNCING_DELAY_ms);
				PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
				if(PinValue == KEY_PRESSED)
				{
					while(PinValue == KEY_PRESSED) // Polling of Flag
    4f0c:	88 a1       	ldd	r24, Y+32	; 0x20
    4f0e:	88 23       	and	r24, r24
    4f10:	09 f4       	brne	.+2      	; 0x4f14 <HKEYPAD_u8GetPressedKey+0x268>
    4f12:	7e cf       	rjmp	.-260    	; 0x4e10 <HKEYPAD_u8GetPressedKey+0x164>
					{
						_delay_ms(DEBOUNCING_DELAY_ms);
						PinValue= MDIO_GetPinVal(KEYPAD_PORT, ArrOfCols[ColNo]);
					} // End of While Loop

					KeyMap = ArrofKeyValues[RowNo][ColNo]; // Get Pressed Key Value
    4f14:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f16:	48 2f       	mov	r20, r24
    4f18:	50 e0       	ldi	r21, 0x00	; 0
    4f1a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f1c:	28 2f       	mov	r18, r24
    4f1e:	30 e0       	ldi	r19, 0x00	; 0
    4f20:	ca 01       	movw	r24, r20
    4f22:	88 0f       	add	r24, r24
    4f24:	99 1f       	adc	r25, r25
    4f26:	88 0f       	add	r24, r24
    4f28:	99 1f       	adc	r25, r25
    4f2a:	82 0f       	add	r24, r18
    4f2c:	93 1f       	adc	r25, r19
    4f2e:	fc 01       	movw	r30, r24
    4f30:	e6 56       	subi	r30, 0x66	; 102
    4f32:	fd 4f       	sbci	r31, 0xFD	; 253
    4f34:	80 81       	ld	r24, Z
    4f36:	89 a3       	std	Y+33, r24	; 0x21
					Flag = FLAG_UP; // Notification for ROWs Loop to break and Return
    4f38:	81 e0       	ldi	r24, 0x01	; 1
    4f3a:	8d 8f       	std	Y+29, r24	; 0x1d
    4f3c:	07 c0       	rjmp	.+14     	; 0x4f4c <HKEYPAD_u8GetPressedKey+0x2a0>
	{
		// Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_LOW);

		// Check on COls
		for(ColNo=0; ColNo < KEYPAD_COL_NO; ColNo++)
    4f3e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f40:	8f 5f       	subi	r24, 0xFF	; 255
    4f42:	8e 8f       	std	Y+30, r24	; 0x1e
    4f44:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4f46:	84 30       	cpi	r24, 0x04	; 4
    4f48:	08 f4       	brcc	.+2      	; 0x4f4c <HKEYPAD_u8GetPressedKey+0x2a0>
    4f4a:	cf ce       	rjmp	.-610    	; 0x4cea <HKEYPAD_u8GetPressedKey+0x3e>
				}
			}
		} // End of COLs Loop

		// De-Activate One Row
		MDIO_vSetPinVal(KEYPAD_PORT , ArrOfRows[RowNo], DIO_HIGH);
    4f4c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f4e:	88 2f       	mov	r24, r24
    4f50:	90 e0       	ldi	r25, 0x00	; 0
    4f52:	fc 01       	movw	r30, r24
    4f54:	e2 54       	subi	r30, 0x42	; 66
    4f56:	fd 4f       	sbci	r31, 0xFD	; 253
    4f58:	90 81       	ld	r25, Z
    4f5a:	80 e0       	ldi	r24, 0x00	; 0
    4f5c:	69 2f       	mov	r22, r25
    4f5e:	41 e0       	ldi	r20, 0x01	; 1
    4f60:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>

		if(Flag == FLAG_UP) // Check if Key was Pressed
    4f64:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f66:	81 30       	cpi	r24, 0x01	; 1
    4f68:	39 f0       	breq	.+14     	; 0x4f78 <HKEYPAD_u8GetPressedKey+0x2cc>
u8 HKEYPAD_u8GetPressedKey(void)
{
	u8 KeyMap = NO_KEY_PRESSED ;
	u8 PinValue ,RowNo=0 , ColNo=0  , Flag=FLAG_DOWN;

	for (RowNo=0; RowNo < KEYPAD_ROW_NO; RowNo++ )
    4f6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f6c:	8f 5f       	subi	r24, 0xFF	; 255
    4f6e:	8f 8f       	std	Y+31, r24	; 0x1f
    4f70:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f72:	84 30       	cpi	r24, 0x04	; 4
    4f74:	08 f4       	brcc	.+2      	; 0x4f78 <HKEYPAD_u8GetPressedKey+0x2cc>
    4f76:	ab ce       	rjmp	.-682    	; 0x4cce <HKEYPAD_u8GetPressedKey+0x22>
			break; // break ROWs Loop
		}

	}// End of ROWs Loop

	return KeyMap;
    4f78:	89 a1       	ldd	r24, Y+33	; 0x21
}
    4f7a:	a1 96       	adiw	r28, 0x21	; 33
    4f7c:	0f b6       	in	r0, 0x3f	; 63
    4f7e:	f8 94       	cli
    4f80:	de bf       	out	0x3e, r29	; 62
    4f82:	0f be       	out	0x3f, r0	; 63
    4f84:	cd bf       	out	0x3d, r28	; 61
    4f86:	cf 91       	pop	r28
    4f88:	df 91       	pop	r29
    4f8a:	08 95       	ret

00004f8c <HKEYPAD_u16MultiDigitInput>:

u16 HKEYPAD_u16MultiDigitInput(void)
{
    4f8c:	df 93       	push	r29
    4f8e:	cf 93       	push	r28
    4f90:	00 d0       	rcall	.+0      	; 0x4f92 <HKEYPAD_u16MultiDigitInput+0x6>
    4f92:	0f 92       	push	r0
    4f94:	cd b7       	in	r28, 0x3d	; 61
    4f96:	de b7       	in	r29, 0x3e	; 62
	u16 Number =0;
    4f98:	1b 82       	std	Y+3, r1	; 0x03
    4f9a:	1a 82       	std	Y+2, r1	; 0x02
	u8 key;

	while(1)
	{
		key = HKEYPAD_u8GetPressedKey();
    4f9c:	0e 94 56 26 	call	0x4cac	; 0x4cac <HKEYPAD_u8GetPressedKey>
    4fa0:	89 83       	std	Y+1, r24	; 0x01

		if(key != NO_KEY_PRESSED)
    4fa2:	89 81       	ldd	r24, Y+1	; 0x01
    4fa4:	8f 3f       	cpi	r24, 0xFF	; 255
    4fa6:	d1 f3       	breq	.-12     	; 0x4f9c <HKEYPAD_u16MultiDigitInput+0x10>
		{
			if (key == '#')
    4fa8:	89 81       	ldd	r24, Y+1	; 0x01
    4faa:	83 32       	cpi	r24, 0x23	; 35
    4fac:	d1 f0       	breq	.+52     	; 0x4fe2 <HKEYPAD_u16MultiDigitInput+0x56>
			{
				break;
			}
			else
			{
				key -= '0';
    4fae:	89 81       	ldd	r24, Y+1	; 0x01
    4fb0:	80 53       	subi	r24, 0x30	; 48
    4fb2:	89 83       	std	Y+1, r24	; 0x01
				if(key >= 0 && key <= 9)
    4fb4:	89 81       	ldd	r24, Y+1	; 0x01
    4fb6:	8a 30       	cpi	r24, 0x0A	; 10
    4fb8:	88 f7       	brcc	.-30     	; 0x4f9c <HKEYPAD_u16MultiDigitInput+0x10>
				{
					Number = Number * 10 + key;
    4fba:	8a 81       	ldd	r24, Y+2	; 0x02
    4fbc:	9b 81       	ldd	r25, Y+3	; 0x03
    4fbe:	9c 01       	movw	r18, r24
    4fc0:	22 0f       	add	r18, r18
    4fc2:	33 1f       	adc	r19, r19
    4fc4:	c9 01       	movw	r24, r18
    4fc6:	88 0f       	add	r24, r24
    4fc8:	99 1f       	adc	r25, r25
    4fca:	88 0f       	add	r24, r24
    4fcc:	99 1f       	adc	r25, r25
    4fce:	28 0f       	add	r18, r24
    4fd0:	39 1f       	adc	r19, r25
    4fd2:	89 81       	ldd	r24, Y+1	; 0x01
    4fd4:	88 2f       	mov	r24, r24
    4fd6:	90 e0       	ldi	r25, 0x00	; 0
    4fd8:	82 0f       	add	r24, r18
    4fda:	93 1f       	adc	r25, r19
    4fdc:	9b 83       	std	Y+3, r25	; 0x03
    4fde:	8a 83       	std	Y+2, r24	; 0x02
    4fe0:	dd cf       	rjmp	.-70     	; 0x4f9c <HKEYPAD_u16MultiDigitInput+0x10>
				}
			}
		}
	}
		return Number;
    4fe2:	8a 81       	ldd	r24, Y+2	; 0x02
    4fe4:	9b 81       	ldd	r25, Y+3	; 0x03
}
    4fe6:	0f 90       	pop	r0
    4fe8:	0f 90       	pop	r0
    4fea:	0f 90       	pop	r0
    4fec:	cf 91       	pop	r28
    4fee:	df 91       	pop	r29
    4ff0:	08 95       	ret

00004ff2 <HDCM_vInit>:
#define F_CPU 12000000UL

#if METHOD==NOSTRUCT

void HDCM_vInit(void)
{
    4ff2:	df 93       	push	r29
    4ff4:	cf 93       	push	r28
    4ff6:	cd b7       	in	r28, 0x3d	; 61
    4ff8:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinDir(DCM_PORT , DCM_PIN1 , DIO_OUTPUT);
    4ffa:	82 e0       	ldi	r24, 0x02	; 2
    4ffc:	64 e0       	ldi	r22, 0x04	; 4
    4ffe:	41 e0       	ldi	r20, 0x01	; 1
    5000:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
	MDIO_vSetPinDir(DCM_PORT , DCM_PIN2 , DIO_OUTPUT);
    5004:	82 e0       	ldi	r24, 0x02	; 2
    5006:	65 e0       	ldi	r22, 0x05	; 5
    5008:	41 e0       	ldi	r20, 0x01	; 1
    500a:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
	/* TODO : Setup Control Pin */
}
    500e:	cf 91       	pop	r28
    5010:	df 91       	pop	r29
    5012:	08 95       	ret

00005014 <HDCM_vRotateCW>:

void HDCM_vRotateCW(void)
{
    5014:	df 93       	push	r29
    5016:	cf 93       	push	r28
    5018:	cd b7       	in	r28, 0x3d	; 61
    501a:	de b7       	in	r29, 0x3e	; 62
	/* TODO : Implement Speed as input */

	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_LOW);
    501c:	82 e0       	ldi	r24, 0x02	; 2
    501e:	64 e0       	ldi	r22, 0x04	; 4
    5020:	40 e0       	ldi	r20, 0x00	; 0
    5022:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_HIGH);
    5026:	82 e0       	ldi	r24, 0x02	; 2
    5028:	65 e0       	ldi	r22, 0x05	; 5
    502a:	41 e0       	ldi	r20, 0x01	; 1
    502c:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>

}
    5030:	cf 91       	pop	r28
    5032:	df 91       	pop	r29
    5034:	08 95       	ret

00005036 <HDCM_vRotateCCW>:

void HDCM_vRotateCCW(void)
{
    5036:	df 93       	push	r29
    5038:	cf 93       	push	r28
    503a:	cd b7       	in	r28, 0x3d	; 61
    503c:	de b7       	in	r29, 0x3e	; 62
	/* TODO : Implement Speed as input */

	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_HIGH);
    503e:	82 e0       	ldi	r24, 0x02	; 2
    5040:	64 e0       	ldi	r22, 0x04	; 4
    5042:	41 e0       	ldi	r20, 0x01	; 1
    5044:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_LOW);
    5048:	82 e0       	ldi	r24, 0x02	; 2
    504a:	65 e0       	ldi	r22, 0x05	; 5
    504c:	40 e0       	ldi	r20, 0x00	; 0
    504e:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    5052:	cf 91       	pop	r28
    5054:	df 91       	pop	r29
    5056:	08 95       	ret

00005058 <HDCM_vStop>:

void HDCM_vStop(void)
{
    5058:	df 93       	push	r29
    505a:	cf 93       	push	r28
    505c:	cd b7       	in	r28, 0x3d	; 61
    505e:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN1 , DIO_LOW);
    5060:	82 e0       	ldi	r24, 0x02	; 2
    5062:	64 e0       	ldi	r22, 0x04	; 4
    5064:	40 e0       	ldi	r20, 0x00	; 0
    5066:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
	MDIO_vSetPinVal(DCM_PORT , DCM_PIN2 , DIO_LOW);
    506a:	82 e0       	ldi	r24, 0x02	; 2
    506c:	65 e0       	ldi	r22, 0x05	; 5
    506e:	40 e0       	ldi	r20, 0x00	; 0
    5070:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    5074:	cf 91       	pop	r28
    5076:	df 91       	pop	r29
    5078:	08 95       	ret

0000507a <HBUZZER_vInit>:
#include "Buzzer_Cfg.h"



void HBUZZER_vInit(void)
{
    507a:	df 93       	push	r29
    507c:	cf 93       	push	r28
    507e:	cd b7       	in	r28, 0x3d	; 61
    5080:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinDir(BUZZER_PORT ,BUZZER_PIN ,DIO_OUTPUT);
    5082:	82 e0       	ldi	r24, 0x02	; 2
    5084:	66 e0       	ldi	r22, 0x06	; 6
    5086:	41 e0       	ldi	r20, 0x01	; 1
    5088:	0e 94 28 14 	call	0x2850	; 0x2850 <MDIO_vSetPinDir>
}
    508c:	cf 91       	pop	r28
    508e:	df 91       	pop	r29
    5090:	08 95       	ret

00005092 <HBUZZER_vTurnOn>:

void HBUZZER_vTurnOn(void)
{
    5092:	df 93       	push	r29
    5094:	cf 93       	push	r28
    5096:	cd b7       	in	r28, 0x3d	; 61
    5098:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(BUZZER_PORT , BUZZER_PIN , DIO_HIGH);
    509a:	82 e0       	ldi	r24, 0x02	; 2
    509c:	66 e0       	ldi	r22, 0x06	; 6
    509e:	41 e0       	ldi	r20, 0x01	; 1
    50a0:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    50a4:	cf 91       	pop	r28
    50a6:	df 91       	pop	r29
    50a8:	08 95       	ret

000050aa <HBUZZER_vTurnOff>:

void HBUZZER_vTurnOff(void)
{
    50aa:	df 93       	push	r29
    50ac:	cf 93       	push	r28
    50ae:	cd b7       	in	r28, 0x3d	; 61
    50b0:	de b7       	in	r29, 0x3e	; 62
	MDIO_vSetPinVal(BUZZER_PORT , BUZZER_PIN , DIO_LOW);
    50b2:	82 e0       	ldi	r24, 0x02	; 2
    50b4:	66 e0       	ldi	r22, 0x06	; 6
    50b6:	40 e0       	ldi	r20, 0x00	; 0
    50b8:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <MDIO_vSetPinVal>
}
    50bc:	cf 91       	pop	r28
    50be:	df 91       	pop	r29
    50c0:	08 95       	ret

000050c2 <__udivmodhi4>:
    50c2:	aa 1b       	sub	r26, r26
    50c4:	bb 1b       	sub	r27, r27
    50c6:	51 e1       	ldi	r21, 0x11	; 17
    50c8:	07 c0       	rjmp	.+14     	; 0x50d8 <__udivmodhi4_ep>

000050ca <__udivmodhi4_loop>:
    50ca:	aa 1f       	adc	r26, r26
    50cc:	bb 1f       	adc	r27, r27
    50ce:	a6 17       	cp	r26, r22
    50d0:	b7 07       	cpc	r27, r23
    50d2:	10 f0       	brcs	.+4      	; 0x50d8 <__udivmodhi4_ep>
    50d4:	a6 1b       	sub	r26, r22
    50d6:	b7 0b       	sbc	r27, r23

000050d8 <__udivmodhi4_ep>:
    50d8:	88 1f       	adc	r24, r24
    50da:	99 1f       	adc	r25, r25
    50dc:	5a 95       	dec	r21
    50de:	a9 f7       	brne	.-22     	; 0x50ca <__udivmodhi4_loop>
    50e0:	80 95       	com	r24
    50e2:	90 95       	com	r25
    50e4:	bc 01       	movw	r22, r24
    50e6:	cd 01       	movw	r24, r26
    50e8:	08 95       	ret

000050ea <__prologue_saves__>:
    50ea:	2f 92       	push	r2
    50ec:	3f 92       	push	r3
    50ee:	4f 92       	push	r4
    50f0:	5f 92       	push	r5
    50f2:	6f 92       	push	r6
    50f4:	7f 92       	push	r7
    50f6:	8f 92       	push	r8
    50f8:	9f 92       	push	r9
    50fa:	af 92       	push	r10
    50fc:	bf 92       	push	r11
    50fe:	cf 92       	push	r12
    5100:	df 92       	push	r13
    5102:	ef 92       	push	r14
    5104:	ff 92       	push	r15
    5106:	0f 93       	push	r16
    5108:	1f 93       	push	r17
    510a:	cf 93       	push	r28
    510c:	df 93       	push	r29
    510e:	cd b7       	in	r28, 0x3d	; 61
    5110:	de b7       	in	r29, 0x3e	; 62
    5112:	ca 1b       	sub	r28, r26
    5114:	db 0b       	sbc	r29, r27
    5116:	0f b6       	in	r0, 0x3f	; 63
    5118:	f8 94       	cli
    511a:	de bf       	out	0x3e, r29	; 62
    511c:	0f be       	out	0x3f, r0	; 63
    511e:	cd bf       	out	0x3d, r28	; 61
    5120:	09 94       	ijmp

00005122 <__epilogue_restores__>:
    5122:	2a 88       	ldd	r2, Y+18	; 0x12
    5124:	39 88       	ldd	r3, Y+17	; 0x11
    5126:	48 88       	ldd	r4, Y+16	; 0x10
    5128:	5f 84       	ldd	r5, Y+15	; 0x0f
    512a:	6e 84       	ldd	r6, Y+14	; 0x0e
    512c:	7d 84       	ldd	r7, Y+13	; 0x0d
    512e:	8c 84       	ldd	r8, Y+12	; 0x0c
    5130:	9b 84       	ldd	r9, Y+11	; 0x0b
    5132:	aa 84       	ldd	r10, Y+10	; 0x0a
    5134:	b9 84       	ldd	r11, Y+9	; 0x09
    5136:	c8 84       	ldd	r12, Y+8	; 0x08
    5138:	df 80       	ldd	r13, Y+7	; 0x07
    513a:	ee 80       	ldd	r14, Y+6	; 0x06
    513c:	fd 80       	ldd	r15, Y+5	; 0x05
    513e:	0c 81       	ldd	r16, Y+4	; 0x04
    5140:	1b 81       	ldd	r17, Y+3	; 0x03
    5142:	aa 81       	ldd	r26, Y+2	; 0x02
    5144:	b9 81       	ldd	r27, Y+1	; 0x01
    5146:	ce 0f       	add	r28, r30
    5148:	d1 1d       	adc	r29, r1
    514a:	0f b6       	in	r0, 0x3f	; 63
    514c:	f8 94       	cli
    514e:	de bf       	out	0x3e, r29	; 62
    5150:	0f be       	out	0x3f, r0	; 63
    5152:	cd bf       	out	0x3d, r28	; 61
    5154:	ed 01       	movw	r28, r26
    5156:	08 95       	ret

00005158 <_exit>:
    5158:	f8 94       	cli

0000515a <__stop_program>:
    515a:	ff cf       	rjmp	.-2      	; 0x515a <__stop_program>
