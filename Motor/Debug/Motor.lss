
Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000810  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000005d6  00000000  00000000  00001110  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#define PRESSED 0
#define REALSEAD 1

int main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62

	MDIO_voidSetPinDirection(DIO_PORTC , PIN1, DIO_SET); // PIN1 FOR MOTOR
  76:	82 e0       	ldi	r24, 0x02	; 2
  78:	61 e0       	ldi	r22, 0x01	; 1
  7a:	41 e0       	ldi	r20, 0x01	; 1
  7c:	0e 94 60 00 	call	0xc0	; 0xc0 <MDIO_voidSetPinDirection>

	MDIO_voidSetPinValue(DIO_PORTC, PIN2, DIO_SET); // Active Pull-Up for the Switch
  80:	82 e0       	ldi	r24, 0x02	; 2
  82:	62 e0       	ldi	r22, 0x02	; 2
  84:	41 e0       	ldi	r20, 0x01	; 1
  86:	0e 94 83 01 	call	0x306	; 0x306 <MDIO_voidSetPinValue>
	MDIO_voidSetPinDirection(DIO_PORTC, PIN2, DIO_RESET);// PIN2 FOR SWITCH
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	62 e0       	ldi	r22, 0x02	; 2
  8e:	40 e0       	ldi	r20, 0x00	; 0
  90:	0e 94 60 00 	call	0xc0	; 0xc0 <MDIO_voidSetPinDirection>
	u8 SwitchState;

	while(1)
	{
		SwitchState = GET_BIT(PINC_REG,2);
  94:	e3 e3       	ldi	r30, 0x33	; 51
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	86 95       	lsr	r24
  9c:	86 95       	lsr	r24
  9e:	81 70       	andi	r24, 0x01	; 1
  a0:	89 83       	std	Y+1, r24	; 0x01
		if(SwitchState == PRESSED)
  a2:	89 81       	ldd	r24, Y+1	; 0x01
  a4:	88 23       	and	r24, r24
  a6:	31 f4       	brne	.+12     	; 0xb4 <main+0x48>
		{
				// turn on the Motor
			MDIO_voidSetPinValue(DIO_PORTC,PIN1,DIO_SET);
  a8:	82 e0       	ldi	r24, 0x02	; 2
  aa:	61 e0       	ldi	r22, 0x01	; 1
  ac:	41 e0       	ldi	r20, 0x01	; 1
  ae:	0e 94 83 01 	call	0x306	; 0x306 <MDIO_voidSetPinValue>
  b2:	f0 cf       	rjmp	.-32     	; 0x94 <main+0x28>
		}
		else
		{
			MDIO_voidSetPinValue(DIO_PORTC,PIN1,DIO_RESET);
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	61 e0       	ldi	r22, 0x01	; 1
  b8:	40 e0       	ldi	r20, 0x00	; 0
  ba:	0e 94 83 01 	call	0x306	; 0x306 <MDIO_voidSetPinValue>
  be:	ea cf       	rjmp	.-44     	; 0x94 <main+0x28>

000000c0 <MDIO_voidSetPinDirection>:


// MDIO_voidSetPinDirection(DIO_PORTA, PIN0, DIO_OUTPUT);

void MDIO_voidSetPinDirection(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_pinDirection)
{
  c0:	df 93       	push	r29
  c2:	cf 93       	push	r28
  c4:	cd b7       	in	r28, 0x3d	; 61
  c6:	de b7       	in	r29, 0x3e	; 62
  c8:	2d 97       	sbiw	r28, 0x0d	; 13
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	f8 94       	cli
  ce:	de bf       	out	0x3e, r29	; 62
  d0:	0f be       	out	0x3f, r0	; 63
  d2:	cd bf       	out	0x3d, r28	; 61
  d4:	89 83       	std	Y+1, r24	; 0x01
  d6:	6a 83       	std	Y+2, r22	; 0x02
  d8:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinDirection <= DIO_OUTPUT) )
  da:	89 81       	ldd	r24, Y+1	; 0x01
  dc:	84 30       	cpi	r24, 0x04	; 4
  de:	08 f0       	brcs	.+2      	; 0xe2 <MDIO_voidSetPinDirection+0x22>
  e0:	09 c1       	rjmp	.+530    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
  e2:	8a 81       	ldd	r24, Y+2	; 0x02
  e4:	88 30       	cpi	r24, 0x08	; 8
  e6:	08 f0       	brcs	.+2      	; 0xea <MDIO_voidSetPinDirection+0x2a>
  e8:	05 c1       	rjmp	.+522    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
  ea:	8b 81       	ldd	r24, Y+3	; 0x03
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	08 f0       	brcs	.+2      	; 0xf2 <MDIO_voidSetPinDirection+0x32>
  f0:	01 c1       	rjmp	.+514    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
	{
		switch (A_portID)
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	28 2f       	mov	r18, r24
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	3d 87       	std	Y+13, r19	; 0x0d
  fa:	2c 87       	std	Y+12, r18	; 0x0c
  fc:	8c 85       	ldd	r24, Y+12	; 0x0c
  fe:	9d 85       	ldd	r25, Y+13	; 0x0d
 100:	81 30       	cpi	r24, 0x01	; 1
 102:	91 05       	cpc	r25, r1
 104:	09 f4       	brne	.+2      	; 0x108 <MDIO_voidSetPinDirection+0x48>
 106:	4f c0       	rjmp	.+158    	; 0x1a6 <MDIO_voidSetPinDirection+0xe6>
 108:	2c 85       	ldd	r18, Y+12	; 0x0c
 10a:	3d 85       	ldd	r19, Y+13	; 0x0d
 10c:	22 30       	cpi	r18, 0x02	; 2
 10e:	31 05       	cpc	r19, r1
 110:	2c f4       	brge	.+10     	; 0x11c <MDIO_voidSetPinDirection+0x5c>
 112:	8c 85       	ldd	r24, Y+12	; 0x0c
 114:	9d 85       	ldd	r25, Y+13	; 0x0d
 116:	00 97       	sbiw	r24, 0x00	; 0
 118:	71 f0       	breq	.+28     	; 0x136 <MDIO_voidSetPinDirection+0x76>
 11a:	ec c0       	rjmp	.+472    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
 11c:	2c 85       	ldd	r18, Y+12	; 0x0c
 11e:	3d 85       	ldd	r19, Y+13	; 0x0d
 120:	22 30       	cpi	r18, 0x02	; 2
 122:	31 05       	cpc	r19, r1
 124:	09 f4       	brne	.+2      	; 0x128 <MDIO_voidSetPinDirection+0x68>
 126:	77 c0       	rjmp	.+238    	; 0x216 <MDIO_voidSetPinDirection+0x156>
 128:	8c 85       	ldd	r24, Y+12	; 0x0c
 12a:	9d 85       	ldd	r25, Y+13	; 0x0d
 12c:	83 30       	cpi	r24, 0x03	; 3
 12e:	91 05       	cpc	r25, r1
 130:	09 f4       	brne	.+2      	; 0x134 <MDIO_voidSetPinDirection+0x74>
 132:	a9 c0       	rjmp	.+338    	; 0x286 <MDIO_voidSetPinDirection+0x1c6>
 134:	df c0       	rjmp	.+446    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
		{
		case DIO_PORTA:
			switch (A_pinDirection)
 136:	8b 81       	ldd	r24, Y+3	; 0x03
 138:	28 2f       	mov	r18, r24
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	3b 87       	std	Y+11, r19	; 0x0b
 13e:	2a 87       	std	Y+10, r18	; 0x0a
 140:	8a 85       	ldd	r24, Y+10	; 0x0a
 142:	9b 85       	ldd	r25, Y+11	; 0x0b
 144:	00 97       	sbiw	r24, 0x00	; 0
 146:	31 f0       	breq	.+12     	; 0x154 <MDIO_voidSetPinDirection+0x94>
 148:	2a 85       	ldd	r18, Y+10	; 0x0a
 14a:	3b 85       	ldd	r19, Y+11	; 0x0b
 14c:	21 30       	cpi	r18, 0x01	; 1
 14e:	31 05       	cpc	r19, r1
 150:	b1 f0       	breq	.+44     	; 0x17e <MDIO_voidSetPinDirection+0xbe>
 152:	d0 c0       	rjmp	.+416    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
 154:	aa e3       	ldi	r26, 0x3A	; 58
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	ea e3       	ldi	r30, 0x3A	; 58
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 2e       	mov	r0, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <MDIO_voidSetPinDirection+0xb2>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <MDIO_voidSetPinDirection+0xae>
 176:	80 95       	com	r24
 178:	84 23       	and	r24, r20
 17a:	8c 93       	st	X, r24
 17c:	bb c0       	rjmp	.+374    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
 17e:	aa e3       	ldi	r26, 0x3A	; 58
 180:	b0 e0       	ldi	r27, 0x00	; 0
 182:	ea e3       	ldi	r30, 0x3A	; 58
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	80 81       	ld	r24, Z
 188:	48 2f       	mov	r20, r24
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	28 2f       	mov	r18, r24
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 2e       	mov	r0, r18
 196:	02 c0       	rjmp	.+4      	; 0x19c <MDIO_voidSetPinDirection+0xdc>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	0a 94       	dec	r0
 19e:	e2 f7       	brpl	.-8      	; 0x198 <MDIO_voidSetPinDirection+0xd8>
 1a0:	84 2b       	or	r24, r20
 1a2:	8c 93       	st	X, r24
 1a4:	a7 c0       	rjmp	.+334    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinDirection)
 1a6:	8b 81       	ldd	r24, Y+3	; 0x03
 1a8:	28 2f       	mov	r18, r24
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	39 87       	std	Y+9, r19	; 0x09
 1ae:	28 87       	std	Y+8, r18	; 0x08
 1b0:	88 85       	ldd	r24, Y+8	; 0x08
 1b2:	99 85       	ldd	r25, Y+9	; 0x09
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	31 f0       	breq	.+12     	; 0x1c4 <MDIO_voidSetPinDirection+0x104>
 1b8:	28 85       	ldd	r18, Y+8	; 0x08
 1ba:	39 85       	ldd	r19, Y+9	; 0x09
 1bc:	21 30       	cpi	r18, 0x01	; 1
 1be:	31 05       	cpc	r19, r1
 1c0:	b1 f0       	breq	.+44     	; 0x1ee <MDIO_voidSetPinDirection+0x12e>
 1c2:	98 c0       	rjmp	.+304    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
 1c4:	a7 e3       	ldi	r26, 0x37	; 55
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	e7 e3       	ldi	r30, 0x37	; 55
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	48 2f       	mov	r20, r24
 1d0:	8a 81       	ldd	r24, Y+2	; 0x02
 1d2:	28 2f       	mov	r18, r24
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 2e       	mov	r0, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <MDIO_voidSetPinDirection+0x122>
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	0a 94       	dec	r0
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <MDIO_voidSetPinDirection+0x11e>
 1e6:	80 95       	com	r24
 1e8:	84 23       	and	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	83 c0       	rjmp	.+262    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
 1ee:	a7 e3       	ldi	r26, 0x37	; 55
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	e7 e3       	ldi	r30, 0x37	; 55
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	48 2f       	mov	r20, r24
 1fa:	8a 81       	ldd	r24, Y+2	; 0x02
 1fc:	28 2f       	mov	r18, r24
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	02 2e       	mov	r0, r18
 206:	02 c0       	rjmp	.+4      	; 0x20c <MDIO_voidSetPinDirection+0x14c>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	0a 94       	dec	r0
 20e:	e2 f7       	brpl	.-8      	; 0x208 <MDIO_voidSetPinDirection+0x148>
 210:	84 2b       	or	r24, r20
 212:	8c 93       	st	X, r24
 214:	6f c0       	rjmp	.+222    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinDirection)
 216:	8b 81       	ldd	r24, Y+3	; 0x03
 218:	28 2f       	mov	r18, r24
 21a:	30 e0       	ldi	r19, 0x00	; 0
 21c:	3f 83       	std	Y+7, r19	; 0x07
 21e:	2e 83       	std	Y+6, r18	; 0x06
 220:	8e 81       	ldd	r24, Y+6	; 0x06
 222:	9f 81       	ldd	r25, Y+7	; 0x07
 224:	00 97       	sbiw	r24, 0x00	; 0
 226:	31 f0       	breq	.+12     	; 0x234 <MDIO_voidSetPinDirection+0x174>
 228:	2e 81       	ldd	r18, Y+6	; 0x06
 22a:	3f 81       	ldd	r19, Y+7	; 0x07
 22c:	21 30       	cpi	r18, 0x01	; 1
 22e:	31 05       	cpc	r19, r1
 230:	b1 f0       	breq	.+44     	; 0x25e <MDIO_voidSetPinDirection+0x19e>
 232:	60 c0       	rjmp	.+192    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
 234:	a4 e3       	ldi	r26, 0x34	; 52
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	e4 e3       	ldi	r30, 0x34	; 52
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	48 2f       	mov	r20, r24
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	28 2f       	mov	r18, r24
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	02 2e       	mov	r0, r18
 24c:	02 c0       	rjmp	.+4      	; 0x252 <MDIO_voidSetPinDirection+0x192>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <MDIO_voidSetPinDirection+0x18e>
 256:	80 95       	com	r24
 258:	84 23       	and	r24, r20
 25a:	8c 93       	st	X, r24
 25c:	4b c0       	rjmp	.+150    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
 25e:	a4 e3       	ldi	r26, 0x34	; 52
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e4 e3       	ldi	r30, 0x34	; 52
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	48 2f       	mov	r20, r24
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	28 2f       	mov	r18, r24
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 2e       	mov	r0, r18
 276:	02 c0       	rjmp	.+4      	; 0x27c <MDIO_voidSetPinDirection+0x1bc>
 278:	88 0f       	add	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	0a 94       	dec	r0
 27e:	e2 f7       	brpl	.-8      	; 0x278 <MDIO_voidSetPinDirection+0x1b8>
 280:	84 2b       	or	r24, r20
 282:	8c 93       	st	X, r24
 284:	37 c0       	rjmp	.+110    	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinDirection)
 286:	8b 81       	ldd	r24, Y+3	; 0x03
 288:	28 2f       	mov	r18, r24
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	3d 83       	std	Y+5, r19	; 0x05
 28e:	2c 83       	std	Y+4, r18	; 0x04
 290:	8c 81       	ldd	r24, Y+4	; 0x04
 292:	9d 81       	ldd	r25, Y+5	; 0x05
 294:	00 97       	sbiw	r24, 0x00	; 0
 296:	31 f0       	breq	.+12     	; 0x2a4 <MDIO_voidSetPinDirection+0x1e4>
 298:	2c 81       	ldd	r18, Y+4	; 0x04
 29a:	3d 81       	ldd	r19, Y+5	; 0x05
 29c:	21 30       	cpi	r18, 0x01	; 1
 29e:	31 05       	cpc	r19, r1
 2a0:	b1 f0       	breq	.+44     	; 0x2ce <MDIO_voidSetPinDirection+0x20e>
 2a2:	28 c0       	rjmp	.+80     	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
 2a4:	a1 e3       	ldi	r26, 0x31	; 49
 2a6:	b0 e0       	ldi	r27, 0x00	; 0
 2a8:	e1 e3       	ldi	r30, 0x31	; 49
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	80 81       	ld	r24, Z
 2ae:	48 2f       	mov	r20, r24
 2b0:	8a 81       	ldd	r24, Y+2	; 0x02
 2b2:	28 2f       	mov	r18, r24
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	02 2e       	mov	r0, r18
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <MDIO_voidSetPinDirection+0x202>
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	0a 94       	dec	r0
 2c4:	e2 f7       	brpl	.-8      	; 0x2be <MDIO_voidSetPinDirection+0x1fe>
 2c6:	80 95       	com	r24
 2c8:	84 23       	and	r24, r20
 2ca:	8c 93       	st	X, r24
 2cc:	13 c0       	rjmp	.+38     	; 0x2f4 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
 2ce:	a1 e3       	ldi	r26, 0x31	; 49
 2d0:	b0 e0       	ldi	r27, 0x00	; 0
 2d2:	e1 e3       	ldi	r30, 0x31	; 49
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	48 2f       	mov	r20, r24
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	28 2f       	mov	r18, r24
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	02 2e       	mov	r0, r18
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <MDIO_voidSetPinDirection+0x22c>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	0a 94       	dec	r0
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <MDIO_voidSetPinDirection+0x228>
 2f0:	84 2b       	or	r24, r20
 2f2:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 2f4:	2d 96       	adiw	r28, 0x0d	; 13
 2f6:	0f b6       	in	r0, 0x3f	; 63
 2f8:	f8 94       	cli
 2fa:	de bf       	out	0x3e, r29	; 62
 2fc:	0f be       	out	0x3f, r0	; 63
 2fe:	cd bf       	out	0x3d, r28	; 61
 300:	cf 91       	pop	r28
 302:	df 91       	pop	r29
 304:	08 95       	ret

00000306 <MDIO_voidSetPinValue>:


void MDIO_voidSetPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_pinValue)
{
 306:	df 93       	push	r29
 308:	cf 93       	push	r28
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	2d 97       	sbiw	r28, 0x0d	; 13
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
 31a:	89 83       	std	Y+1, r24	; 0x01
 31c:	6a 83       	std	Y+2, r22	; 0x02
 31e:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_pinValue <= DIO_SET) )
 320:	89 81       	ldd	r24, Y+1	; 0x01
 322:	84 30       	cpi	r24, 0x04	; 4
 324:	08 f0       	brcs	.+2      	; 0x328 <MDIO_voidSetPinValue+0x22>
 326:	09 c1       	rjmp	.+530    	; 0x53a <MDIO_voidSetPinValue+0x234>
 328:	8a 81       	ldd	r24, Y+2	; 0x02
 32a:	88 30       	cpi	r24, 0x08	; 8
 32c:	08 f0       	brcs	.+2      	; 0x330 <MDIO_voidSetPinValue+0x2a>
 32e:	05 c1       	rjmp	.+522    	; 0x53a <MDIO_voidSetPinValue+0x234>
 330:	8b 81       	ldd	r24, Y+3	; 0x03
 332:	82 30       	cpi	r24, 0x02	; 2
 334:	08 f0       	brcs	.+2      	; 0x338 <MDIO_voidSetPinValue+0x32>
 336:	01 c1       	rjmp	.+514    	; 0x53a <MDIO_voidSetPinValue+0x234>
	{
		switch (A_portID)
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	28 2f       	mov	r18, r24
 33c:	30 e0       	ldi	r19, 0x00	; 0
 33e:	3d 87       	std	Y+13, r19	; 0x0d
 340:	2c 87       	std	Y+12, r18	; 0x0c
 342:	8c 85       	ldd	r24, Y+12	; 0x0c
 344:	9d 85       	ldd	r25, Y+13	; 0x0d
 346:	81 30       	cpi	r24, 0x01	; 1
 348:	91 05       	cpc	r25, r1
 34a:	09 f4       	brne	.+2      	; 0x34e <MDIO_voidSetPinValue+0x48>
 34c:	4f c0       	rjmp	.+158    	; 0x3ec <MDIO_voidSetPinValue+0xe6>
 34e:	2c 85       	ldd	r18, Y+12	; 0x0c
 350:	3d 85       	ldd	r19, Y+13	; 0x0d
 352:	22 30       	cpi	r18, 0x02	; 2
 354:	31 05       	cpc	r19, r1
 356:	2c f4       	brge	.+10     	; 0x362 <MDIO_voidSetPinValue+0x5c>
 358:	8c 85       	ldd	r24, Y+12	; 0x0c
 35a:	9d 85       	ldd	r25, Y+13	; 0x0d
 35c:	00 97       	sbiw	r24, 0x00	; 0
 35e:	71 f0       	breq	.+28     	; 0x37c <MDIO_voidSetPinValue+0x76>
 360:	ec c0       	rjmp	.+472    	; 0x53a <MDIO_voidSetPinValue+0x234>
 362:	2c 85       	ldd	r18, Y+12	; 0x0c
 364:	3d 85       	ldd	r19, Y+13	; 0x0d
 366:	22 30       	cpi	r18, 0x02	; 2
 368:	31 05       	cpc	r19, r1
 36a:	09 f4       	brne	.+2      	; 0x36e <MDIO_voidSetPinValue+0x68>
 36c:	77 c0       	rjmp	.+238    	; 0x45c <MDIO_voidSetPinValue+0x156>
 36e:	8c 85       	ldd	r24, Y+12	; 0x0c
 370:	9d 85       	ldd	r25, Y+13	; 0x0d
 372:	83 30       	cpi	r24, 0x03	; 3
 374:	91 05       	cpc	r25, r1
 376:	09 f4       	brne	.+2      	; 0x37a <MDIO_voidSetPinValue+0x74>
 378:	a9 c0       	rjmp	.+338    	; 0x4cc <MDIO_voidSetPinValue+0x1c6>
 37a:	df c0       	rjmp	.+446    	; 0x53a <MDIO_voidSetPinValue+0x234>
		{
		case DIO_PORTA:
			switch (A_pinValue)
 37c:	8b 81       	ldd	r24, Y+3	; 0x03
 37e:	28 2f       	mov	r18, r24
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	3b 87       	std	Y+11, r19	; 0x0b
 384:	2a 87       	std	Y+10, r18	; 0x0a
 386:	8a 85       	ldd	r24, Y+10	; 0x0a
 388:	9b 85       	ldd	r25, Y+11	; 0x0b
 38a:	00 97       	sbiw	r24, 0x00	; 0
 38c:	31 f0       	breq	.+12     	; 0x39a <MDIO_voidSetPinValue+0x94>
 38e:	2a 85       	ldd	r18, Y+10	; 0x0a
 390:	3b 85       	ldd	r19, Y+11	; 0x0b
 392:	21 30       	cpi	r18, 0x01	; 1
 394:	31 05       	cpc	r19, r1
 396:	b1 f0       	breq	.+44     	; 0x3c4 <MDIO_voidSetPinValue+0xbe>
 398:	d0 c0       	rjmp	.+416    	; 0x53a <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTA_REG,A_pinID);
 39a:	ab e3       	ldi	r26, 0x3B	; 59
 39c:	b0 e0       	ldi	r27, 0x00	; 0
 39e:	eb e3       	ldi	r30, 0x3B	; 59
 3a0:	f0 e0       	ldi	r31, 0x00	; 0
 3a2:	80 81       	ld	r24, Z
 3a4:	48 2f       	mov	r20, r24
 3a6:	8a 81       	ldd	r24, Y+2	; 0x02
 3a8:	28 2f       	mov	r18, r24
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	02 2e       	mov	r0, r18
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <MDIO_voidSetPinValue+0xb2>
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	0a 94       	dec	r0
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <MDIO_voidSetPinValue+0xae>
 3bc:	80 95       	com	r24
 3be:	84 23       	and	r24, r20
 3c0:	8c 93       	st	X, r24
 3c2:	bb c0       	rjmp	.+374    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTA_REG,A_pinID);
 3c4:	ab e3       	ldi	r26, 0x3B	; 59
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	eb e3       	ldi	r30, 0x3B	; 59
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	48 2f       	mov	r20, r24
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	28 2f       	mov	r18, r24
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	02 2e       	mov	r0, r18
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <MDIO_voidSetPinValue+0xdc>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	0a 94       	dec	r0
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <MDIO_voidSetPinValue+0xd8>
 3e6:	84 2b       	or	r24, r20
 3e8:	8c 93       	st	X, r24
 3ea:	a7 c0       	rjmp	.+334    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_pinValue)
 3ec:	8b 81       	ldd	r24, Y+3	; 0x03
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	39 87       	std	Y+9, r19	; 0x09
 3f4:	28 87       	std	Y+8, r18	; 0x08
 3f6:	88 85       	ldd	r24, Y+8	; 0x08
 3f8:	99 85       	ldd	r25, Y+9	; 0x09
 3fa:	00 97       	sbiw	r24, 0x00	; 0
 3fc:	31 f0       	breq	.+12     	; 0x40a <MDIO_voidSetPinValue+0x104>
 3fe:	28 85       	ldd	r18, Y+8	; 0x08
 400:	39 85       	ldd	r19, Y+9	; 0x09
 402:	21 30       	cpi	r18, 0x01	; 1
 404:	31 05       	cpc	r19, r1
 406:	b1 f0       	breq	.+44     	; 0x434 <MDIO_voidSetPinValue+0x12e>
 408:	98 c0       	rjmp	.+304    	; 0x53a <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTB_REG,A_pinID);
 40a:	a8 e3       	ldi	r26, 0x38	; 56
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	e8 e3       	ldi	r30, 0x38	; 56
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	48 2f       	mov	r20, r24
 416:	8a 81       	ldd	r24, Y+2	; 0x02
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 2e       	mov	r0, r18
 422:	02 c0       	rjmp	.+4      	; 0x428 <MDIO_voidSetPinValue+0x122>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	0a 94       	dec	r0
 42a:	e2 f7       	brpl	.-8      	; 0x424 <MDIO_voidSetPinValue+0x11e>
 42c:	80 95       	com	r24
 42e:	84 23       	and	r24, r20
 430:	8c 93       	st	X, r24
 432:	83 c0       	rjmp	.+262    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTB_REG,A_pinID);
 434:	a8 e3       	ldi	r26, 0x38	; 56
 436:	b0 e0       	ldi	r27, 0x00	; 0
 438:	e8 e3       	ldi	r30, 0x38	; 56
 43a:	f0 e0       	ldi	r31, 0x00	; 0
 43c:	80 81       	ld	r24, Z
 43e:	48 2f       	mov	r20, r24
 440:	8a 81       	ldd	r24, Y+2	; 0x02
 442:	28 2f       	mov	r18, r24
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	02 2e       	mov	r0, r18
 44c:	02 c0       	rjmp	.+4      	; 0x452 <MDIO_voidSetPinValue+0x14c>
 44e:	88 0f       	add	r24, r24
 450:	99 1f       	adc	r25, r25
 452:	0a 94       	dec	r0
 454:	e2 f7       	brpl	.-8      	; 0x44e <MDIO_voidSetPinValue+0x148>
 456:	84 2b       	or	r24, r20
 458:	8c 93       	st	X, r24
 45a:	6f c0       	rjmp	.+222    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_pinValue)
 45c:	8b 81       	ldd	r24, Y+3	; 0x03
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	3f 83       	std	Y+7, r19	; 0x07
 464:	2e 83       	std	Y+6, r18	; 0x06
 466:	8e 81       	ldd	r24, Y+6	; 0x06
 468:	9f 81       	ldd	r25, Y+7	; 0x07
 46a:	00 97       	sbiw	r24, 0x00	; 0
 46c:	31 f0       	breq	.+12     	; 0x47a <MDIO_voidSetPinValue+0x174>
 46e:	2e 81       	ldd	r18, Y+6	; 0x06
 470:	3f 81       	ldd	r19, Y+7	; 0x07
 472:	21 30       	cpi	r18, 0x01	; 1
 474:	31 05       	cpc	r19, r1
 476:	b1 f0       	breq	.+44     	; 0x4a4 <MDIO_voidSetPinValue+0x19e>
 478:	60 c0       	rjmp	.+192    	; 0x53a <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTC_REG,A_pinID);
 47a:	a5 e3       	ldi	r26, 0x35	; 53
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	e5 e3       	ldi	r30, 0x35	; 53
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	48 2f       	mov	r20, r24
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 2e       	mov	r0, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <MDIO_voidSetPinValue+0x192>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <MDIO_voidSetPinValue+0x18e>
 49c:	80 95       	com	r24
 49e:	84 23       	and	r24, r20
 4a0:	8c 93       	st	X, r24
 4a2:	4b c0       	rjmp	.+150    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTC_REG,A_pinID);
 4a4:	a5 e3       	ldi	r26, 0x35	; 53
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	e5 e3       	ldi	r30, 0x35	; 53
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	80 81       	ld	r24, Z
 4ae:	48 2f       	mov	r20, r24
 4b0:	8a 81       	ldd	r24, Y+2	; 0x02
 4b2:	28 2f       	mov	r18, r24
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	02 2e       	mov	r0, r18
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <MDIO_voidSetPinValue+0x1bc>
 4be:	88 0f       	add	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	0a 94       	dec	r0
 4c4:	e2 f7       	brpl	.-8      	; 0x4be <MDIO_voidSetPinValue+0x1b8>
 4c6:	84 2b       	or	r24, r20
 4c8:	8c 93       	st	X, r24
 4ca:	37 c0       	rjmp	.+110    	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_pinValue)
 4cc:	8b 81       	ldd	r24, Y+3	; 0x03
 4ce:	28 2f       	mov	r18, r24
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	3d 83       	std	Y+5, r19	; 0x05
 4d4:	2c 83       	std	Y+4, r18	; 0x04
 4d6:	8c 81       	ldd	r24, Y+4	; 0x04
 4d8:	9d 81       	ldd	r25, Y+5	; 0x05
 4da:	00 97       	sbiw	r24, 0x00	; 0
 4dc:	31 f0       	breq	.+12     	; 0x4ea <MDIO_voidSetPinValue+0x1e4>
 4de:	2c 81       	ldd	r18, Y+4	; 0x04
 4e0:	3d 81       	ldd	r19, Y+5	; 0x05
 4e2:	21 30       	cpi	r18, 0x01	; 1
 4e4:	31 05       	cpc	r19, r1
 4e6:	b1 f0       	breq	.+44     	; 0x514 <MDIO_voidSetPinValue+0x20e>
 4e8:	28 c0       	rjmp	.+80     	; 0x53a <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTD_REG,A_pinID);
 4ea:	a2 e3       	ldi	r26, 0x32	; 50
 4ec:	b0 e0       	ldi	r27, 0x00	; 0
 4ee:	e2 e3       	ldi	r30, 0x32	; 50
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	80 81       	ld	r24, Z
 4f4:	48 2f       	mov	r20, r24
 4f6:	8a 81       	ldd	r24, Y+2	; 0x02
 4f8:	28 2f       	mov	r18, r24
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 2e       	mov	r0, r18
 502:	02 c0       	rjmp	.+4      	; 0x508 <MDIO_voidSetPinValue+0x202>
 504:	88 0f       	add	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	0a 94       	dec	r0
 50a:	e2 f7       	brpl	.-8      	; 0x504 <MDIO_voidSetPinValue+0x1fe>
 50c:	80 95       	com	r24
 50e:	84 23       	and	r24, r20
 510:	8c 93       	st	X, r24
 512:	13 c0       	rjmp	.+38     	; 0x53a <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTD_REG,A_pinID);
 514:	a2 e3       	ldi	r26, 0x32	; 50
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	e2 e3       	ldi	r30, 0x32	; 50
 51a:	f0 e0       	ldi	r31, 0x00	; 0
 51c:	80 81       	ld	r24, Z
 51e:	48 2f       	mov	r20, r24
 520:	8a 81       	ldd	r24, Y+2	; 0x02
 522:	28 2f       	mov	r18, r24
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	02 2e       	mov	r0, r18
 52c:	02 c0       	rjmp	.+4      	; 0x532 <MDIO_voidSetPinValue+0x22c>
 52e:	88 0f       	add	r24, r24
 530:	99 1f       	adc	r25, r25
 532:	0a 94       	dec	r0
 534:	e2 f7       	brpl	.-8      	; 0x52e <MDIO_voidSetPinValue+0x228>
 536:	84 2b       	or	r24, r20
 538:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 53a:	2d 96       	adiw	r28, 0x0d	; 13
 53c:	0f b6       	in	r0, 0x3f	; 63
 53e:	f8 94       	cli
 540:	de bf       	out	0x3e, r29	; 62
 542:	0f be       	out	0x3f, r0	; 63
 544:	cd bf       	out	0x3d, r28	; 61
 546:	cf 91       	pop	r28
 548:	df 91       	pop	r29
 54a:	08 95       	ret

0000054c <MDIO_getPinValue>:




DIO_VALUE_e MDIO_getPinValue(DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 54c:	df 93       	push	r29
 54e:	cf 93       	push	r28
 550:	00 d0       	rcall	.+0      	; 0x552 <MDIO_getPinValue+0x6>
 552:	00 d0       	rcall	.+0      	; 0x554 <MDIO_getPinValue+0x8>
 554:	0f 92       	push	r0
 556:	cd b7       	in	r28, 0x3d	; 61
 558:	de b7       	in	r29, 0x3e	; 62
 55a:	8a 83       	std	Y+2, r24	; 0x02
 55c:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_PinValue;

	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 55e:	8a 81       	ldd	r24, Y+2	; 0x02
 560:	84 30       	cpi	r24, 0x04	; 4
 562:	08 f0       	brcs	.+2      	; 0x566 <MDIO_getPinValue+0x1a>
 564:	6b c0       	rjmp	.+214    	; 0x63c <MDIO_getPinValue+0xf0>
 566:	8b 81       	ldd	r24, Y+3	; 0x03
 568:	88 30       	cpi	r24, 0x08	; 8
 56a:	08 f0       	brcs	.+2      	; 0x56e <MDIO_getPinValue+0x22>
 56c:	67 c0       	rjmp	.+206    	; 0x63c <MDIO_getPinValue+0xf0>
	{
		switch (A_portID)
 56e:	8a 81       	ldd	r24, Y+2	; 0x02
 570:	28 2f       	mov	r18, r24
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	3d 83       	std	Y+5, r19	; 0x05
 576:	2c 83       	std	Y+4, r18	; 0x04
 578:	4c 81       	ldd	r20, Y+4	; 0x04
 57a:	5d 81       	ldd	r21, Y+5	; 0x05
 57c:	41 30       	cpi	r20, 0x01	; 1
 57e:	51 05       	cpc	r21, r1
 580:	41 f1       	breq	.+80     	; 0x5d2 <MDIO_getPinValue+0x86>
 582:	8c 81       	ldd	r24, Y+4	; 0x04
 584:	9d 81       	ldd	r25, Y+5	; 0x05
 586:	82 30       	cpi	r24, 0x02	; 2
 588:	91 05       	cpc	r25, r1
 58a:	34 f4       	brge	.+12     	; 0x598 <MDIO_getPinValue+0x4c>
 58c:	2c 81       	ldd	r18, Y+4	; 0x04
 58e:	3d 81       	ldd	r19, Y+5	; 0x05
 590:	21 15       	cp	r18, r1
 592:	31 05       	cpc	r19, r1
 594:	61 f0       	breq	.+24     	; 0x5ae <MDIO_getPinValue+0x62>
 596:	52 c0       	rjmp	.+164    	; 0x63c <MDIO_getPinValue+0xf0>
 598:	4c 81       	ldd	r20, Y+4	; 0x04
 59a:	5d 81       	ldd	r21, Y+5	; 0x05
 59c:	42 30       	cpi	r20, 0x02	; 2
 59e:	51 05       	cpc	r21, r1
 5a0:	51 f1       	breq	.+84     	; 0x5f6 <MDIO_getPinValue+0xaa>
 5a2:	8c 81       	ldd	r24, Y+4	; 0x04
 5a4:	9d 81       	ldd	r25, Y+5	; 0x05
 5a6:	83 30       	cpi	r24, 0x03	; 3
 5a8:	91 05       	cpc	r25, r1
 5aa:	b9 f1       	breq	.+110    	; 0x61a <MDIO_getPinValue+0xce>
 5ac:	47 c0       	rjmp	.+142    	; 0x63c <MDIO_getPinValue+0xf0>
		{
		case DIO_PORTA:
			local_PinValue = GET_BIT(PINA_REG,A_pinID);
 5ae:	e9 e3       	ldi	r30, 0x39	; 57
 5b0:	f0 e0       	ldi	r31, 0x00	; 0
 5b2:	80 81       	ld	r24, Z
 5b4:	28 2f       	mov	r18, r24
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ba:	88 2f       	mov	r24, r24
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	a9 01       	movw	r20, r18
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <MDIO_getPinValue+0x7a>
 5c2:	55 95       	asr	r21
 5c4:	47 95       	ror	r20
 5c6:	8a 95       	dec	r24
 5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <MDIO_getPinValue+0x76>
 5ca:	ca 01       	movw	r24, r20
 5cc:	81 70       	andi	r24, 0x01	; 1
 5ce:	89 83       	std	Y+1, r24	; 0x01
 5d0:	35 c0       	rjmp	.+106    	; 0x63c <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTB:
			local_PinValue = GET_BIT(PINB_REG,A_pinID);
 5d2:	e6 e3       	ldi	r30, 0x36	; 54
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	80 81       	ld	r24, Z
 5d8:	28 2f       	mov	r18, r24
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	8b 81       	ldd	r24, Y+3	; 0x03
 5de:	88 2f       	mov	r24, r24
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	a9 01       	movw	r20, r18
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <MDIO_getPinValue+0x9e>
 5e6:	55 95       	asr	r21
 5e8:	47 95       	ror	r20
 5ea:	8a 95       	dec	r24
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <MDIO_getPinValue+0x9a>
 5ee:	ca 01       	movw	r24, r20
 5f0:	81 70       	andi	r24, 0x01	; 1
 5f2:	89 83       	std	Y+1, r24	; 0x01
 5f4:	23 c0       	rjmp	.+70     	; 0x63c <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTC:
			local_PinValue = GET_BIT(PINC_REG,A_pinID);
 5f6:	e3 e3       	ldi	r30, 0x33	; 51
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	80 81       	ld	r24, Z
 5fc:	28 2f       	mov	r18, r24
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	8b 81       	ldd	r24, Y+3	; 0x03
 602:	88 2f       	mov	r24, r24
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	a9 01       	movw	r20, r18
 608:	02 c0       	rjmp	.+4      	; 0x60e <MDIO_getPinValue+0xc2>
 60a:	55 95       	asr	r21
 60c:	47 95       	ror	r20
 60e:	8a 95       	dec	r24
 610:	e2 f7       	brpl	.-8      	; 0x60a <MDIO_getPinValue+0xbe>
 612:	ca 01       	movw	r24, r20
 614:	81 70       	andi	r24, 0x01	; 1
 616:	89 83       	std	Y+1, r24	; 0x01
 618:	11 c0       	rjmp	.+34     	; 0x63c <MDIO_getPinValue+0xf0>
			break;
		case DIO_PORTD:
			local_PinValue = GET_BIT(PIND_REG,A_pinID);
 61a:	e0 e3       	ldi	r30, 0x30	; 48
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	28 2f       	mov	r18, r24
 622:	30 e0       	ldi	r19, 0x00	; 0
 624:	8b 81       	ldd	r24, Y+3	; 0x03
 626:	88 2f       	mov	r24, r24
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	a9 01       	movw	r20, r18
 62c:	02 c0       	rjmp	.+4      	; 0x632 <MDIO_getPinValue+0xe6>
 62e:	55 95       	asr	r21
 630:	47 95       	ror	r20
 632:	8a 95       	dec	r24
 634:	e2 f7       	brpl	.-8      	; 0x62e <MDIO_getPinValue+0xe2>
 636:	ca 01       	movw	r24, r20
 638:	81 70       	andi	r24, 0x01	; 1
 63a:	89 83       	std	Y+1, r24	; 0x01
	{
		// Do Nothing
	}


	return local_PinValue;
 63c:	89 81       	ldd	r24, Y+1	; 0x01
}
 63e:	0f 90       	pop	r0
 640:	0f 90       	pop	r0
 642:	0f 90       	pop	r0
 644:	0f 90       	pop	r0
 646:	0f 90       	pop	r0
 648:	cf 91       	pop	r28
 64a:	df 91       	pop	r29
 64c:	08 95       	ret

0000064e <MDIO_voidTogglePinValue>:

void MDIO_voidTogglePinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 64e:	df 93       	push	r29
 650:	cf 93       	push	r28
 652:	00 d0       	rcall	.+0      	; 0x654 <MDIO_voidTogglePinValue+0x6>
 654:	00 d0       	rcall	.+0      	; 0x656 <MDIO_voidTogglePinValue+0x8>
 656:	cd b7       	in	r28, 0x3d	; 61
 658:	de b7       	in	r29, 0x3e	; 62
 65a:	89 83       	std	Y+1, r24	; 0x01
 65c:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 65e:	89 81       	ldd	r24, Y+1	; 0x01
 660:	84 30       	cpi	r24, 0x04	; 4
 662:	08 f0       	brcs	.+2      	; 0x666 <MDIO_voidTogglePinValue+0x18>
 664:	72 c0       	rjmp	.+228    	; 0x74a <MDIO_voidTogglePinValue+0xfc>
 666:	8a 81       	ldd	r24, Y+2	; 0x02
 668:	88 30       	cpi	r24, 0x08	; 8
 66a:	08 f0       	brcs	.+2      	; 0x66e <MDIO_voidTogglePinValue+0x20>
 66c:	6e c0       	rjmp	.+220    	; 0x74a <MDIO_voidTogglePinValue+0xfc>
	{
		switch (A_portID)
 66e:	89 81       	ldd	r24, Y+1	; 0x01
 670:	28 2f       	mov	r18, r24
 672:	30 e0       	ldi	r19, 0x00	; 0
 674:	3c 83       	std	Y+4, r19	; 0x04
 676:	2b 83       	std	Y+3, r18	; 0x03
 678:	8b 81       	ldd	r24, Y+3	; 0x03
 67a:	9c 81       	ldd	r25, Y+4	; 0x04
 67c:	81 30       	cpi	r24, 0x01	; 1
 67e:	91 05       	cpc	r25, r1
 680:	49 f1       	breq	.+82     	; 0x6d4 <MDIO_voidTogglePinValue+0x86>
 682:	2b 81       	ldd	r18, Y+3	; 0x03
 684:	3c 81       	ldd	r19, Y+4	; 0x04
 686:	22 30       	cpi	r18, 0x02	; 2
 688:	31 05       	cpc	r19, r1
 68a:	2c f4       	brge	.+10     	; 0x696 <MDIO_voidTogglePinValue+0x48>
 68c:	8b 81       	ldd	r24, Y+3	; 0x03
 68e:	9c 81       	ldd	r25, Y+4	; 0x04
 690:	00 97       	sbiw	r24, 0x00	; 0
 692:	61 f0       	breq	.+24     	; 0x6ac <MDIO_voidTogglePinValue+0x5e>
 694:	5a c0       	rjmp	.+180    	; 0x74a <MDIO_voidTogglePinValue+0xfc>
 696:	2b 81       	ldd	r18, Y+3	; 0x03
 698:	3c 81       	ldd	r19, Y+4	; 0x04
 69a:	22 30       	cpi	r18, 0x02	; 2
 69c:	31 05       	cpc	r19, r1
 69e:	71 f1       	breq	.+92     	; 0x6fc <MDIO_voidTogglePinValue+0xae>
 6a0:	8b 81       	ldd	r24, Y+3	; 0x03
 6a2:	9c 81       	ldd	r25, Y+4	; 0x04
 6a4:	83 30       	cpi	r24, 0x03	; 3
 6a6:	91 05       	cpc	r25, r1
 6a8:	e9 f1       	breq	.+122    	; 0x724 <MDIO_voidTogglePinValue+0xd6>
 6aa:	4f c0       	rjmp	.+158    	; 0x74a <MDIO_voidTogglePinValue+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
 6ac:	ab e3       	ldi	r26, 0x3B	; 59
 6ae:	b0 e0       	ldi	r27, 0x00	; 0
 6b0:	eb e3       	ldi	r30, 0x3B	; 59
 6b2:	f0 e0       	ldi	r31, 0x00	; 0
 6b4:	80 81       	ld	r24, Z
 6b6:	48 2f       	mov	r20, r24
 6b8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ba:	28 2f       	mov	r18, r24
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	81 e0       	ldi	r24, 0x01	; 1
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	02 2e       	mov	r0, r18
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <MDIO_voidTogglePinValue+0x7c>
 6c6:	88 0f       	add	r24, r24
 6c8:	99 1f       	adc	r25, r25
 6ca:	0a 94       	dec	r0
 6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <MDIO_voidTogglePinValue+0x78>
 6ce:	84 27       	eor	r24, r20
 6d0:	8c 93       	st	X, r24
 6d2:	3b c0       	rjmp	.+118    	; 0x74a <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
 6d4:	a8 e3       	ldi	r26, 0x38	; 56
 6d6:	b0 e0       	ldi	r27, 0x00	; 0
 6d8:	e8 e3       	ldi	r30, 0x38	; 56
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	48 2f       	mov	r20, r24
 6e0:	8a 81       	ldd	r24, Y+2	; 0x02
 6e2:	28 2f       	mov	r18, r24
 6e4:	30 e0       	ldi	r19, 0x00	; 0
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	02 2e       	mov	r0, r18
 6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <MDIO_voidTogglePinValue+0xa4>
 6ee:	88 0f       	add	r24, r24
 6f0:	99 1f       	adc	r25, r25
 6f2:	0a 94       	dec	r0
 6f4:	e2 f7       	brpl	.-8      	; 0x6ee <MDIO_voidTogglePinValue+0xa0>
 6f6:	84 27       	eor	r24, r20
 6f8:	8c 93       	st	X, r24
 6fa:	27 c0       	rjmp	.+78     	; 0x74a <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
 6fc:	a5 e3       	ldi	r26, 0x35	; 53
 6fe:	b0 e0       	ldi	r27, 0x00	; 0
 700:	e5 e3       	ldi	r30, 0x35	; 53
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	80 81       	ld	r24, Z
 706:	48 2f       	mov	r20, r24
 708:	8a 81       	ldd	r24, Y+2	; 0x02
 70a:	28 2f       	mov	r18, r24
 70c:	30 e0       	ldi	r19, 0x00	; 0
 70e:	81 e0       	ldi	r24, 0x01	; 1
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	02 2e       	mov	r0, r18
 714:	02 c0       	rjmp	.+4      	; 0x71a <MDIO_voidTogglePinValue+0xcc>
 716:	88 0f       	add	r24, r24
 718:	99 1f       	adc	r25, r25
 71a:	0a 94       	dec	r0
 71c:	e2 f7       	brpl	.-8      	; 0x716 <MDIO_voidTogglePinValue+0xc8>
 71e:	84 27       	eor	r24, r20
 720:	8c 93       	st	X, r24
 722:	13 c0       	rjmp	.+38     	; 0x74a <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
 724:	a2 e3       	ldi	r26, 0x32	; 50
 726:	b0 e0       	ldi	r27, 0x00	; 0
 728:	e2 e3       	ldi	r30, 0x32	; 50
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	80 81       	ld	r24, Z
 72e:	48 2f       	mov	r20, r24
 730:	8a 81       	ldd	r24, Y+2	; 0x02
 732:	28 2f       	mov	r18, r24
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	02 2e       	mov	r0, r18
 73c:	02 c0       	rjmp	.+4      	; 0x742 <MDIO_voidTogglePinValue+0xf4>
 73e:	88 0f       	add	r24, r24
 740:	99 1f       	adc	r25, r25
 742:	0a 94       	dec	r0
 744:	e2 f7       	brpl	.-8      	; 0x73e <MDIO_voidTogglePinValue+0xf0>
 746:	84 27       	eor	r24, r20
 748:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 74a:	0f 90       	pop	r0
 74c:	0f 90       	pop	r0
 74e:	0f 90       	pop	r0
 750:	0f 90       	pop	r0
 752:	cf 91       	pop	r28
 754:	df 91       	pop	r29
 756:	08 95       	ret

00000758 <MDIO_voidSetPortDirection>:


void MDIO_voidSetPortDirection (DIO_PORT_e A_portID, u8 A_u8PortDirection)
{
 758:	df 93       	push	r29
 75a:	cf 93       	push	r28
 75c:	00 d0       	rcall	.+0      	; 0x75e <MDIO_voidSetPortDirection+0x6>
 75e:	00 d0       	rcall	.+0      	; 0x760 <MDIO_voidSetPortDirection+0x8>
 760:	cd b7       	in	r28, 0x3d	; 61
 762:	de b7       	in	r29, 0x3e	; 62
 764:	89 83       	std	Y+1, r24	; 0x01
 766:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
 768:	89 81       	ldd	r24, Y+1	; 0x01
 76a:	84 30       	cpi	r24, 0x04	; 4
 76c:	90 f5       	brcc	.+100    	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
	{
		switch (A_portID)
 76e:	89 81       	ldd	r24, Y+1	; 0x01
 770:	28 2f       	mov	r18, r24
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	3c 83       	std	Y+4, r19	; 0x04
 776:	2b 83       	std	Y+3, r18	; 0x03
 778:	8b 81       	ldd	r24, Y+3	; 0x03
 77a:	9c 81       	ldd	r25, Y+4	; 0x04
 77c:	81 30       	cpi	r24, 0x01	; 1
 77e:	91 05       	cpc	r25, r1
 780:	d1 f0       	breq	.+52     	; 0x7b6 <MDIO_voidSetPortDirection+0x5e>
 782:	2b 81       	ldd	r18, Y+3	; 0x03
 784:	3c 81       	ldd	r19, Y+4	; 0x04
 786:	22 30       	cpi	r18, 0x02	; 2
 788:	31 05       	cpc	r19, r1
 78a:	2c f4       	brge	.+10     	; 0x796 <MDIO_voidSetPortDirection+0x3e>
 78c:	8b 81       	ldd	r24, Y+3	; 0x03
 78e:	9c 81       	ldd	r25, Y+4	; 0x04
 790:	00 97       	sbiw	r24, 0x00	; 0
 792:	61 f0       	breq	.+24     	; 0x7ac <MDIO_voidSetPortDirection+0x54>
 794:	1e c0       	rjmp	.+60     	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
 796:	2b 81       	ldd	r18, Y+3	; 0x03
 798:	3c 81       	ldd	r19, Y+4	; 0x04
 79a:	22 30       	cpi	r18, 0x02	; 2
 79c:	31 05       	cpc	r19, r1
 79e:	81 f0       	breq	.+32     	; 0x7c0 <MDIO_voidSetPortDirection+0x68>
 7a0:	8b 81       	ldd	r24, Y+3	; 0x03
 7a2:	9c 81       	ldd	r25, Y+4	; 0x04
 7a4:	83 30       	cpi	r24, 0x03	; 3
 7a6:	91 05       	cpc	r25, r1
 7a8:	81 f0       	breq	.+32     	; 0x7ca <MDIO_voidSetPortDirection+0x72>
 7aa:	13 c0       	rjmp	.+38     	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8PortDirection;
 7ac:	ea e3       	ldi	r30, 0x3A	; 58
 7ae:	f0 e0       	ldi	r31, 0x00	; 0
 7b0:	8a 81       	ldd	r24, Y+2	; 0x02
 7b2:	80 83       	st	Z, r24
 7b4:	0e c0       	rjmp	.+28     	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8PortDirection;
 7b6:	e7 e3       	ldi	r30, 0x37	; 55
 7b8:	f0 e0       	ldi	r31, 0x00	; 0
 7ba:	8a 81       	ldd	r24, Y+2	; 0x02
 7bc:	80 83       	st	Z, r24
 7be:	09 c0       	rjmp	.+18     	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8PortDirection;
 7c0:	e4 e3       	ldi	r30, 0x34	; 52
 7c2:	f0 e0       	ldi	r31, 0x00	; 0
 7c4:	8a 81       	ldd	r24, Y+2	; 0x02
 7c6:	80 83       	st	Z, r24
 7c8:	04 c0       	rjmp	.+8      	; 0x7d2 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8PortDirection;
 7ca:	e1 e3       	ldi	r30, 0x31	; 49
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	8a 81       	ldd	r24, Y+2	; 0x02
 7d0:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
 7d2:	0f 90       	pop	r0
 7d4:	0f 90       	pop	r0
 7d6:	0f 90       	pop	r0
 7d8:	0f 90       	pop	r0
 7da:	cf 91       	pop	r28
 7dc:	df 91       	pop	r29
 7de:	08 95       	ret

000007e0 <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue (DIO_PORT_e A_portID, u8 A_u8PortValue)
{
 7e0:	df 93       	push	r29
 7e2:	cf 93       	push	r28
 7e4:	00 d0       	rcall	.+0      	; 0x7e6 <MDIO_voidSetPortValue+0x6>
 7e6:	00 d0       	rcall	.+0      	; 0x7e8 <MDIO_voidSetPortValue+0x8>
 7e8:	cd b7       	in	r28, 0x3d	; 61
 7ea:	de b7       	in	r29, 0x3e	; 62
 7ec:	89 83       	std	Y+1, r24	; 0x01
 7ee:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if ( (A_portID <= DIO_PORTD) )
 7f0:	89 81       	ldd	r24, Y+1	; 0x01
 7f2:	84 30       	cpi	r24, 0x04	; 4
 7f4:	90 f5       	brcc	.+100    	; 0x85a <MDIO_voidSetPortValue+0x7a>
	{
		switch (A_portID)
 7f6:	89 81       	ldd	r24, Y+1	; 0x01
 7f8:	28 2f       	mov	r18, r24
 7fa:	30 e0       	ldi	r19, 0x00	; 0
 7fc:	3c 83       	std	Y+4, r19	; 0x04
 7fe:	2b 83       	std	Y+3, r18	; 0x03
 800:	8b 81       	ldd	r24, Y+3	; 0x03
 802:	9c 81       	ldd	r25, Y+4	; 0x04
 804:	81 30       	cpi	r24, 0x01	; 1
 806:	91 05       	cpc	r25, r1
 808:	d1 f0       	breq	.+52     	; 0x83e <MDIO_voidSetPortValue+0x5e>
 80a:	2b 81       	ldd	r18, Y+3	; 0x03
 80c:	3c 81       	ldd	r19, Y+4	; 0x04
 80e:	22 30       	cpi	r18, 0x02	; 2
 810:	31 05       	cpc	r19, r1
 812:	2c f4       	brge	.+10     	; 0x81e <MDIO_voidSetPortValue+0x3e>
 814:	8b 81       	ldd	r24, Y+3	; 0x03
 816:	9c 81       	ldd	r25, Y+4	; 0x04
 818:	00 97       	sbiw	r24, 0x00	; 0
 81a:	61 f0       	breq	.+24     	; 0x834 <MDIO_voidSetPortValue+0x54>
 81c:	1e c0       	rjmp	.+60     	; 0x85a <MDIO_voidSetPortValue+0x7a>
 81e:	2b 81       	ldd	r18, Y+3	; 0x03
 820:	3c 81       	ldd	r19, Y+4	; 0x04
 822:	22 30       	cpi	r18, 0x02	; 2
 824:	31 05       	cpc	r19, r1
 826:	81 f0       	breq	.+32     	; 0x848 <MDIO_voidSetPortValue+0x68>
 828:	8b 81       	ldd	r24, Y+3	; 0x03
 82a:	9c 81       	ldd	r25, Y+4	; 0x04
 82c:	83 30       	cpi	r24, 0x03	; 3
 82e:	91 05       	cpc	r25, r1
 830:	81 f0       	breq	.+32     	; 0x852 <MDIO_voidSetPortValue+0x72>
 832:	13 c0       	rjmp	.+38     	; 0x85a <MDIO_voidSetPortValue+0x7a>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8PortValue;
 834:	eb e3       	ldi	r30, 0x3B	; 59
 836:	f0 e0       	ldi	r31, 0x00	; 0
 838:	8a 81       	ldd	r24, Y+2	; 0x02
 83a:	80 83       	st	Z, r24
 83c:	0e c0       	rjmp	.+28     	; 0x85a <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8PortValue;
 83e:	e8 e3       	ldi	r30, 0x38	; 56
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	8a 81       	ldd	r24, Y+2	; 0x02
 844:	80 83       	st	Z, r24
 846:	09 c0       	rjmp	.+18     	; 0x85a <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8PortValue;
 848:	e5 e3       	ldi	r30, 0x35	; 53
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	8a 81       	ldd	r24, Y+2	; 0x02
 84e:	80 83       	st	Z, r24
 850:	04 c0       	rjmp	.+8      	; 0x85a <MDIO_voidSetPortValue+0x7a>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8PortValue;
 852:	e2 e3       	ldi	r30, 0x32	; 50
 854:	f0 e0       	ldi	r31, 0x00	; 0
 856:	8a 81       	ldd	r24, Y+2	; 0x02
 858:	80 83       	st	Z, r24
	}
	else
	{
		// Do Nothing
	}
}
 85a:	0f 90       	pop	r0
 85c:	0f 90       	pop	r0
 85e:	0f 90       	pop	r0
 860:	0f 90       	pop	r0
 862:	cf 91       	pop	r28
 864:	df 91       	pop	r29
 866:	08 95       	ret

00000868 <MDIO_voidInit>:


void MDIO_voidInit (void)
{
 868:	df 93       	push	r29
 86a:	cf 93       	push	r28
 86c:	cd b7       	in	r28, 0x3d	; 61
 86e:	de b7       	in	r29, 0x3e	; 62

	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
 870:	ea e3       	ldi	r30, 0x3A	; 58
 872:	f0 e0       	ldi	r31, 0x00	; 0
 874:	10 82       	st	Z, r1
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
 876:	e7 e3       	ldi	r30, 0x37	; 55
 878:	f0 e0       	ldi	r31, 0x00	; 0
 87a:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
 87c:	e4 e3       	ldi	r30, 0x34	; 52
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	10 82       	st	Z, r1
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
 882:	e1 e3       	ldi	r30, 0x31	; 49
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	10 82       	st	Z, r1
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	/**********************************************************************/

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
 888:	eb e3       	ldi	r30, 0x3B	; 59
 88a:	f0 e0       	ldi	r31, 0x00	; 0
 88c:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
 88e:	e8 e3       	ldi	r30, 0x38	; 56
 890:	f0 e0       	ldi	r31, 0x00	; 0
 892:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
 894:	e5 e3       	ldi	r30, 0x35	; 53
 896:	f0 e0       	ldi	r31, 0x00	; 0
 898:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
 89a:	e2 e3       	ldi	r30, 0x32	; 50
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	10 82       	st	Z, r1
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
 8a0:	cf 91       	pop	r28
 8a2:	df 91       	pop	r29
 8a4:	08 95       	ret

000008a6 <_exit>:
 8a6:	f8 94       	cli

000008a8 <__stop_program>:
 8a8:	ff cf       	rjmp	.-2      	; 0x8a8 <__stop_program>
